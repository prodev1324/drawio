// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: appid-replacements.capnp

#include "appid-replacements.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<74> b_888dcc6878baa07a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    122, 160, 186, 120, 104, 204, 141, 136,
     35,   0,   0,   0,   1,   0,   0,   0,
    118,  22, 122, 113,  63, 174,  60, 165,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  46,  99,  97, 112,
    110, 112,  58,  65, 112, 112,  73, 100,
     82, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 105, 103, 105, 110,  97, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 118, 111, 107, 101,  69, 120,
     99, 101, 112, 116,  80,  97,  99, 107,
     97, 103, 101,  73, 100, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_888dcc6878baa07a = b_888dcc6878baa07a.words;
#if !CAPNP_LITE
static const uint16_t m_888dcc6878baa07a[] = {0, 1, 2};
static const uint16_t i_888dcc6878baa07a[] = {0, 1, 2};
const ::capnp::_::RawSchema s_888dcc6878baa07a = {
  0x888dcc6878baa07a, b_888dcc6878baa07a.words, 74, nullptr, m_888dcc6878baa07a,
  0, 3, i_888dcc6878baa07a, nullptr, nullptr, { &s_888dcc6878baa07a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<101> b_e6cb9296adfd17e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224,  23, 253, 173, 150, 146, 203, 230,
     35,   0,   0,   0,   4,   0,   0,   0,
    118,  22, 122, 113,  63, 174,  60, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  46,  99,  97, 112,
    110, 112,  58,  97, 112, 112,  73, 100,
     82, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116,  76, 105, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    122, 160, 186, 120, 104, 204, 141, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  79,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   3,   0,
     33,   0,   0,   0, 170,   1,   0,   0,
     57,   0,   0,   0, 170,   1,   0,   0,
     81,   0,   0,   0,  14,   0,   0,   0,
    101,   0,   0,   0, 170,   1,   0,   0,
    125,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 170,   1,   0,   0,
    169,   0,   0,   0, 170,   1,   0,   0,
    193,   0,   0,   0,  22,   0,   0,   0,
    118, 106, 118, 101, 107, 101,  99, 104,
    100,  51,  57,  56, 102, 110,  49, 116,
     49, 107, 110,  49, 100, 103, 100, 110,
    109,  97, 101, 107, 113, 113,  57, 106,
    107, 106, 118,  51, 122, 115, 103, 122,
    121, 109,  99,  52, 122,  57,  49,  51,
    114, 101, 102,  48,   0,   0,   0,   0,
    119, 113,  57,  53, 113, 109, 117, 116,
     99, 107,  99,  48, 121, 102, 109, 101,
     99, 118,  48, 107, 121,  57,  54,  99,
    113, 120, 103, 112,  49,  53,  54, 117,
    112,  56, 115, 118,  56,  49, 121, 120,
    118, 109, 101, 114, 121,  53,  56, 113,
     56,  55, 106, 104,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   1,   0,   0,
     98,  53,  98,  98,  57, 100,  56,  48,
     49,  52,  97,  48, 102,  57,  98,  49,
    100,  54,  49, 101,  50,  49, 101,  55,
     57,  54, 100,  55,  56, 100,  99,  99,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 120, 101,  56,  97, 119,  99, 120,
    118, 116, 106,  54, 121, 117,  48, 118,
    103, 106, 112, 109,  49, 116, 115,  97,
    101, 117,  55, 120,  56, 118,  56, 116,
    102, 112,  55,  49, 116, 121, 118, 110,
    109,  54, 121, 107, 107, 101, 112, 104,
    117,  57, 113,  48,   0,   0,   0,   0,
    110,  56,  99, 110,  55,  49,  52,  48,
     55, 110,  52, 109, 101, 122, 110,  55,
    109, 103,  48, 107,  53, 107, 107, 109,
     50,  49, 106, 117, 117, 112, 104, 104,
    101,  99,  99,  50,  52, 104, 100, 102,
     57, 107, 102,  53,  54, 122, 121, 120,
    109,  52,  97, 104,   0,   0,   0,   0,
    110, 102, 113, 104, 120,  56,  51, 118,
    118, 122, 109,  56,  48, 101, 100, 112,
    103, 107, 112,  97, 120,  56, 109, 104,
    113, 112,  49,  55,  54, 113, 106,  50,
    118, 119, 103,  54,  55, 114, 103, 113,
     53, 101,  51, 107, 106,  99,  53, 114,
     52,  99, 121, 104,   0,   0,   0,   0,
     97,  51, 119,  53,  48, 104,  49,  52,
     51,  53, 103, 115, 120,  99, 122, 117,
    103, 109,  49,  54, 113,  48,  97, 109,
    119, 107, 113, 109,  57, 102,  52,  99,
    114, 121, 107, 122, 101,  97,  53,  51,
    115, 118,  54,  49, 112, 116,  55, 112,
    104, 107,  56, 104,   0,   0,   0,   0,
      5,   0,   0,   0,  10,   1,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     49,  52,  53,  48, 101,  48,  99,  97,
     97,  50,  57,  98,  53,  57, 101,  99,
     57,  51,  56,  98,  51,  55,  57,  53,
     98, 102,  49,  55,  99,  98,  48,  50,
      0,   0,   0,   0,   0,   0,   0,   0,
     55,  51,  56, 102,  48, 101,  53,  54,
     97,  57,  99,  97,  52,  54,  50, 101,
     55,  55,  50,  52,  53, 101,  51, 102,
     51,  57,  50,  54,  56,  54, 100,  55,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e6cb9296adfd17e0 = b_e6cb9296adfd17e0.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e6cb9296adfd17e0 = {
  0xe6cb9296adfd17e0, b_e6cb9296adfd17e0.words, 101, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e6cb9296adfd17e0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sandstorm {
namespace spk {

// AppIdReplacement
constexpr uint16_t AppIdReplacement::_capnpPrivate::dataWordSize;
constexpr uint16_t AppIdReplacement::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AppIdReplacement::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AppIdReplacement::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* AppIdReplacement::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

const ::capnp::_::ConstList< ::sandstorm::spk::AppIdReplacement> APP_ID_REPLACEMENT_LIST(::capnp::schemas::b_e6cb9296adfd17e0.words + 30);

}  // namespace
}  // namespace

