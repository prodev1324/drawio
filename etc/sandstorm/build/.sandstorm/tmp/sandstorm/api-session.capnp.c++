// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: api-session.capnp

#include "api-session.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<29> b_c879e379c625cdc7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    199, 205,  37, 198, 121, 227, 121, 200,
     28,   0,   0,   0,   3,   0,   0,   0,
    251, 203,  19,  52,  12,  76,   1, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,   7,   0,   0,   0,
     61,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 105,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  65, 112, 105,  83,
    101, 115, 115, 105, 111, 110,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    151, 245,  79,  76, 141,  45, 232, 254,
      9,   0,   0,   0,  58,   0,   0,   0,
     50, 238, 125,  86, 202, 247, 225, 147,
      5,   0,   0,   0,  98,   0,   0,   0,
     80,  97, 114,  97, 109, 115,   0,   0,
     80, 111, 119, 101, 114,  98, 111, 120,
     84,  97, 103,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   5,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c879e379c625cdc7 = b_c879e379c625cdc7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c879e379c625cdc7[] = {
  &s_a50711a14d35a8ce,
};
const ::capnp::_::RawSchema s_c879e379c625cdc7 = {
  0xc879e379c625cdc7, b_c879e379c625cdc7.words, 29, d_c879e379c625cdc7, nullptr,
  1, 0, nullptr, nullptr, nullptr, { &s_c879e379c625cdc7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_fee82d8d4c4ff597 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    151, 245,  79,  76, 141,  45, 232, 254,
     39,   0,   0,   0,   1,   0,   0,   0,
    199, 205,  37, 198, 121, 227, 121, 200,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 105,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  65, 112, 105,  83,
    101, 115, 115, 105, 111, 110,  46,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 109, 111, 116, 101,  65, 100,
    100, 114, 101, 115, 115,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     11,  44, 211,  55, 153, 143, 185, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fee82d8d4c4ff597 = b_fee82d8d4c4ff597.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fee82d8d4c4ff597[] = {
  &s_eeb98f9937d32c0b,
};
static const uint16_t m_fee82d8d4c4ff597[] = {0};
static const uint16_t i_fee82d8d4c4ff597[] = {0};
const ::capnp::_::RawSchema s_fee82d8d4c4ff597 = {
  0xfee82d8d4c4ff597, b_fee82d8d4c4ff597.words, 36, d_fee82d8d4c4ff597, m_fee82d8d4c4ff597,
  1, 1, i_fee82d8d4c4ff597, nullptr, nullptr, { &s_fee82d8d4c4ff597, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<77> b_93e1f7ca567dee32 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50, 238, 125,  86, 202, 247, 225, 147,
     39,   0,   0,   0,   1,   0,   0,   0,
    199, 205,  37, 198, 121, 227, 121, 200,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 105,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  65, 112, 105,  83,
    101, 115, 115, 105, 111, 110,  46,  80,
    111, 119, 101, 114,  98, 111, 120,  84,
     97, 103,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    136, 253, 177, 147,  16, 243, 149, 187,
      1,   0,   0,   0,  90,   0,   0,   0,
     79,  65, 117, 116, 104,  83,  99, 111,
    112, 101,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 110, 111, 110, 105,  99,  97,
    108,  85, 114, 108,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111,  97, 117, 116, 104,  83,  99, 111,
    112, 101, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    136, 253, 177, 147,  16, 243, 149, 187,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 117, 116, 104, 101, 110, 116, 105,
     99,  97, 116, 105, 111, 110,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_93e1f7ca567dee32 = b_93e1f7ca567dee32.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_93e1f7ca567dee32[] = {
  &s_bb95f31093b1fd88,
};
static const uint16_t m_93e1f7ca567dee32[] = {2, 0, 1};
static const uint16_t i_93e1f7ca567dee32[] = {0, 1, 2};
const ::capnp::_::RawSchema s_93e1f7ca567dee32 = {
  0x93e1f7ca567dee32, b_93e1f7ca567dee32.words, 77, d_93e1f7ca567dee32, m_93e1f7ca567dee32,
  1, 3, i_93e1f7ca567dee32, nullptr, nullptr, { &s_93e1f7ca567dee32, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_bb95f31093b1fd88 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    136, 253, 177, 147,  16, 243, 149, 187,
     51,   0,   0,   0,   1,   0,   0,   0,
     50, 238, 125,  86, 202, 247, 225, 147,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 105,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  65, 112, 105,  83,
    101, 115, 115, 105, 111, 110,  46,  80,
    111, 119, 101, 114,  98, 111, 120,  84,
     97, 103,  46,  79,  65, 117, 116, 104,
     83,  99, 111, 112, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bb95f31093b1fd88 = b_bb95f31093b1fd88.words;
#if !CAPNP_LITE
static const uint16_t m_bb95f31093b1fd88[] = {0};
static const uint16_t i_bb95f31093b1fd88[] = {0};
const ::capnp::_::RawSchema s_bb95f31093b1fd88 = {
  0xbb95f31093b1fd88, b_bb95f31093b1fd88.words, 37, nullptr, m_bb95f31093b1fd88,
  0, 1, i_bb95f31093b1fd88, nullptr, nullptr, { &s_bb95f31093b1fd88, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sandstorm {

#if !CAPNP_LITE
::kj::Promise<void> ApiSession::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xc879e379c625cdc7ull:
      return dispatchCallInternal(methodId, context);
    case 0xa50711a14d35a8ceull:
      return  ::sandstorm::WebSession::Server::dispatchCallInternal(methodId, context);
    case 0xf63241ee58b5166full:
      return  ::sandstorm::UiSession::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/api-session.capnp:ApiSession", interfaceId);
  }
}
::kj::Promise<void> ApiSession::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/api-session.capnp:ApiSession",
          0xc879e379c625cdc7ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// ApiSession
#if !CAPNP_LITE
constexpr ::capnp::Kind ApiSession::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApiSession::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ApiSession::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ApiSession::Params
constexpr uint16_t ApiSession::Params::_capnpPrivate::dataWordSize;
constexpr uint16_t ApiSession::Params::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApiSession::Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApiSession::Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ApiSession::Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ApiSession::PowerboxTag
constexpr uint16_t ApiSession::PowerboxTag::_capnpPrivate::dataWordSize;
constexpr uint16_t ApiSession::PowerboxTag::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApiSession::PowerboxTag::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApiSession::PowerboxTag::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ApiSession::PowerboxTag::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ApiSession::PowerboxTag::OAuthScope
constexpr uint16_t ApiSession::PowerboxTag::OAuthScope::_capnpPrivate::dataWordSize;
constexpr uint16_t ApiSession::PowerboxTag::OAuthScope::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ApiSession::PowerboxTag::OAuthScope::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ApiSession::PowerboxTag::OAuthScope::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ApiSession::PowerboxTag::OAuthScope::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

