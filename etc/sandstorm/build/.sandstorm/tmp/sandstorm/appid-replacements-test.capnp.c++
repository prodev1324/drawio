// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: appid-replacements-test.capnp

#include "appid-replacements-test.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_9440399ec56efc9b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
     40,   0,   0,   0,   1,   0,   0,   0,
    119, 167,   1, 251, 173,  69, 228, 190,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0, 183,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,   0,
     44,   0,   0,   0,   1,   0,   1,   0,
    181,  75, 121,   3, 133, 154,   3, 164,
     81,   0,   0,   0,  82,   0,   0,   0,
     89,  53, 110, 165, 118,  13,  47, 175,
     81,   0,   0,   0,  42,   0,   0,   0,
     94, 209,  97, 127,  83, 199,  71, 247,
     77,   0,   0,   0,  42,   0,   0,   0,
    245,  31, 171,  60, 248, 177,   7, 150,
     73,   0,   0,   0,  42,   0,   0,   0,
    104, 173, 234, 120, 183, 188, 135, 175,
     69,   0,   0,   0,  42,   0,   0,   0,
    246, 187, 129,  85, 115, 127, 221, 131,
     65,   0,   0,   0,  42,   0,   0,   0,
    171,  13,  48,  31, 173, 152, 176, 188,
     61,   0,   0,   0,  42,   0,   0,   0,
      8, 218, 145,  28,  18,  96, 213, 198,
     57,   0,   0,   0,  82,   0,   0,   0,
      8, 107, 112, 167,  88, 118,  55, 248,
     57,   0,   0,   0,  42,   0,   0,   0,
    215, 140,  73, 115,  31, 107, 130, 192,
     53,   0,   0,   0,  42,   0,   0,   0,
    243,  34, 204,  84, 117,   3, 129, 211,
     49,   0,   0,   0,  42,   0,   0,   0,
    117, 110, 117, 115, 101, 100,  65, 112,
    112,   0,   0,   0,   0,   0,   0,   0,
     97, 112, 112,  49,   0,   0,   0,   0,
     97, 112, 112,  50,   0,   0,   0,   0,
     97, 112, 112,  51,   0,   0,   0,   0,
     97, 112, 112,  52,   0,   0,   0,   0,
     97, 112, 112,  53,   0,   0,   0,   0,
     97, 112, 112,  54,   0,   0,   0,   0,
    117, 110, 117, 115, 101, 100,  80, 107,
    103,   0,   0,   0,   0,   0,   0,   0,
    112, 107, 103,  49,   0,   0,   0,   0,
    112, 107, 103,  50,   0,   0,   0,   0,
    112, 107, 103,  51,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9440399ec56efc9b = b_9440399ec56efc9b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9440399ec56efc9b = {
  0x9440399ec56efc9b, b_9440399ec56efc9b.words, 54, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9440399ec56efc9b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_a4039a8503794bb5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181,  75, 121,   3, 133, 154,   3, 164,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
    117, 110, 117, 115, 101, 100,  65, 112,
    112,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   1,   0,   0,
     54, 112, 109,  52, 117, 106, 115,  56,
    102,  53, 102,  53, 119, 117, 103,  99,
     56,  55, 117, 104, 117, 104, 118, 104,
    115,  53,  55, 104, 101,  48,  57, 117,
     49,  48, 114, 118,  56, 113, 100,  50,
    106, 103, 100, 117, 112,  57, 102,  54,
     57, 121, 122, 104,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a4039a8503794bb5 = b_a4039a8503794bb5.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a4039a8503794bb5 = {
  0xa4039a8503794bb5, b_a4039a8503794bb5.words, 35, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a4039a8503794bb5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_af2f0d76a56e3559 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89,  53, 110, 165, 118,  13,  47, 175,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
     97, 112, 112,  49,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   1,   0,   0,
    118, 106, 118, 101, 107, 101,  99, 104,
    100,  51,  57,  56, 102, 110,  49, 116,
     49, 107, 110,  49, 100, 103, 100, 110,
    109,  97, 101, 107, 113, 113,  57, 106,
    107, 106, 118,  51, 122, 115, 103, 122,
    121, 109,  99,  52, 122,  57,  49,  51,
    114, 101, 102,  48,   0,   0,   0,   0, }
};
::capnp::word const* const bp_af2f0d76a56e3559 = b_af2f0d76a56e3559.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_af2f0d76a56e3559 = {
  0xaf2f0d76a56e3559, b_af2f0d76a56e3559.words, 34, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_af2f0d76a56e3559, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_f747c7537f61d15e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94, 209,  97, 127,  83, 199,  71, 247,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
     97, 112, 112,  50,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   1,   0,   0,
    119, 113,  57,  53, 113, 109, 117, 116,
     99, 107,  99,  48, 121, 102, 109, 101,
     99, 118,  48, 107, 121,  57,  54,  99,
    113, 120, 103, 112,  49,  53,  54, 117,
    112,  56, 115, 118,  56,  49, 121, 120,
    118, 109, 101, 114, 121,  53,  56, 113,
     56,  55, 106, 104,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f747c7537f61d15e = b_f747c7537f61d15e.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f747c7537f61d15e = {
  0xf747c7537f61d15e, b_f747c7537f61d15e.words, 34, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f747c7537f61d15e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9607b1f83cab1ff5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    245,  31, 171,  60, 248, 177,   7, 150,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
     97, 112, 112,  51,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   1,   0,   0,
     51,  48,  50, 116,  54,  99,  54, 107,
    102,  56, 104, 106, 101, 114,  49, 107,
    104,  51,  52,  54,  57, 100,  52,  99,
    104,  49,  48, 100,  57,  51,  54, 103,
     55, 119, 107, 119, 116, 120,  99, 115,
     49,  50, 112, 119, 104,  57, 117,  53,
     97, 120, 113, 104,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9607b1f83cab1ff5 = b_9607b1f83cab1ff5.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9607b1f83cab1ff5 = {
  0x9607b1f83cab1ff5, b_9607b1f83cab1ff5.words, 34, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9607b1f83cab1ff5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_af87bcb778eaad68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104, 173, 234, 120, 183, 188, 135, 175,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
     97, 112, 112,  52,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   1,   0,   0,
     53, 100, 100, 107,  52, 117, 113, 110,
    115, 116, 110, 115, 113, 118, 112,  51,
    116, 104,  99,  50, 116, 121, 101, 100,
     52,  49,  99,  55, 119, 112,  52, 120,
     53, 121, 103, 116,  50,  48, 122, 114,
    104,  51, 117,  48, 116, 110, 118,  53,
    106, 113, 100,  48,   0,   0,   0,   0, }
};
::capnp::word const* const bp_af87bcb778eaad68 = b_af87bcb778eaad68.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_af87bcb778eaad68 = {
  0xaf87bcb778eaad68, b_af87bcb778eaad68.words, 34, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_af87bcb778eaad68, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_83dd7f735581bbf6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    246, 187, 129,  85, 115, 127, 221, 131,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
     97, 112, 112,  53,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   1,   0,   0,
    106, 107, 122,  54, 121, 104, 121, 119,
    104, 112,  52, 117, 107,  53, 115, 103,
    107,  99,  53, 117, 103, 119, 110, 101,
    101,  53,  55,  97,  53, 104,  53, 119,
    117,  52, 114, 102, 109, 117, 106, 116,
     97, 104, 110, 121,  53, 114,  56, 103,
     51, 121,  99, 104,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83dd7f735581bbf6 = b_83dd7f735581bbf6.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_83dd7f735581bbf6 = {
  0x83dd7f735581bbf6, b_83dd7f735581bbf6.words, 34, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_83dd7f735581bbf6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_bcb098ad1f300dab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171,  13,  48,  31, 173, 152, 176, 188,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
     97, 112, 112,  54,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   1,   0,   0,
     97, 100, 107,  54, 115, 121, 102, 106,
     52,  50, 102, 112, 112,  51, 120, 104,
    103, 113, 114, 114, 104, 101, 113, 103,
    102, 120, 107, 104,  97, 119,  56, 101,
     49, 116,  49,  49, 118, 117, 103,  52,
     52, 121, 115,  54, 112, 122,  97, 120,
    113, 117, 103, 104,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bcb098ad1f300dab = b_bcb098ad1f300dab.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_bcb098ad1f300dab = {
  0xbcb098ad1f300dab, b_bcb098ad1f300dab.words, 34, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_bcb098ad1f300dab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_c6d560121c91da08 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      8, 218, 145,  28,  18,  96, 213, 198,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
    117, 110, 117, 115, 101, 100,  80, 107,
    103,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   1,   0,   0,
     55,  51,  48,  48, 101,  51,  52,  52,
     56, 100, 100,  50,  98,  53,  51, 101,
     48,  55,  53, 100,  48,  97,  56,  52,
     56,  49,  99,  50,  98,  99,  48,  54,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c6d560121c91da08 = b_c6d560121c91da08.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c6d560121c91da08 = {
  0xc6d560121c91da08, b_c6d560121c91da08.words, 33, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c6d560121c91da08, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_f8377658a7706b08 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      8, 107, 112, 167,  88, 118,  55, 248,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
    112, 107, 103,  49,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   1,   0,   0,
     98,  53,  98,  98,  57, 100,  56,  48,
     49,  52,  97,  48, 102,  57,  98,  49,
    100,  54,  49, 101,  50,  49, 101,  55,
     57,  54, 100,  55,  56, 100,  99,  99,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f8377658a7706b08 = b_f8377658a7706b08.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f8377658a7706b08 = {
  0xf8377658a7706b08, b_f8377658a7706b08.words, 32, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f8377658a7706b08, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_c0826b1f73498cd7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215, 140,  73, 115,  31, 107, 130, 192,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
    112, 107, 103,  50,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   1,   0,   0,
     56,  54,  49,  51,  97,  49,  49,  98,
     56,  97,  99,  51,  54,  53,  99,  98,
     51,  54,  55,  55,  53,  97,  54,  98,
     56,  99,  97,  54,  49,  55,  54,  99,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0826b1f73498cd7 = b_c0826b1f73498cd7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c0826b1f73498cd7 = {
  0xc0826b1f73498cd7, b_c0826b1f73498cd7.words, 32, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c0826b1f73498cd7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_d381037554cc22f3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    243,  34, 204,  84, 117,   3, 129, 211,
     48,   0,   0,   0,   4,   0,   0,   0,
    155, 252, 110, 197, 158,  57,  64, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
     84, 101, 115, 116,  73, 100, 115,  46,
    112, 107, 103,  51,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   1,   0,   0,
     55,  55,  99,  52, 102,  52,  53,  97,
    101, 101,  56,  51, 101,  51,  55,  54,
    100,  51,  49,  97,  53,  54,  56,  48,
     99, 100,  98,  56,  52,  49,  97,  50,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d381037554cc22f3 = b_d381037554cc22f3.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d381037554cc22f3 = {
  0xd381037554cc22f3, b_d381037554cc22f3.words, 32, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d381037554cc22f3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<120> b_c9ff15fb0eece422 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     34, 228, 236,  14, 251,  21, 255, 201,
     40,   0,   0,   0,   4,   0,   0,   0,
    119, 167,   1, 251, 173,  69, 228, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47,  97, 112, 112, 105, 100,  45,
    114, 101, 112, 108,  97,  99, 101, 109,
    101, 110, 116, 115,  45, 116, 101, 115,
    116,  46,  99,  97, 112, 110, 112,  58,
    116, 101, 115, 116,  65, 112, 112,  73,
    100,  82, 101, 112, 108,  97,  99, 101,
    109, 101, 110, 116,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    122, 160, 186, 120, 104, 204, 141, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 103,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   3,   0,
     45,   0,   0,   0, 170,   1,   0,   0,
     69,   0,   0,   0, 170,   1,   0,   0,
     93,   0,   0,   0,  22,   0,   0,   0,
    137,   0,   0,   0, 170,   1,   0,   0,
    161,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 170,   1,   0,   0,
    205,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0, 170,   1,   0,   0,
    249,   0,   0,   0, 170,   1,   0,   0,
     17,   1,   0,   0,  14,   0,   0,   0,
    118, 106, 118, 101, 107, 101,  99, 104,
    100,  51,  57,  56, 102, 110,  49, 116,
     49, 107, 110,  49, 100, 103, 100, 110,
    109,  97, 101, 107, 113, 113,  57, 106,
    107, 106, 118,  51, 122, 115, 103, 122,
    121, 109,  99,  52, 122,  57,  49,  51,
    114, 101, 102,  48,   0,   0,   0,   0,
    119, 113,  57,  53, 113, 109, 117, 116,
     99, 107,  99,  48, 121, 102, 109, 101,
     99, 118,  48, 107, 121,  57,  54,  99,
    113, 120, 103, 112,  49,  53,  54, 117,
    112,  56, 115, 118,  56,  49, 121, 120,
    118, 109, 101, 114, 121,  53,  56, 113,
     56,  55, 106, 104,   0,   0,   0,   0,
      5,   0,   0,   0,  10,   1,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     98,  53,  98,  98,  57, 100,  56,  48,
     49,  52,  97,  48, 102,  57,  98,  49,
    100,  54,  49, 101,  50,  49, 101,  55,
     57,  54, 100,  55,  56, 100,  99,  99,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,  54,  49,  51,  97,  49,  49,  98,
     56,  97,  99,  51,  54,  53,  99,  98,
     51,  54,  55,  55,  53,  97,  54,  98,
     56,  99,  97,  54,  49,  55,  54,  99,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 113,  57,  53, 113, 109, 117, 116,
     99, 107,  99,  48, 121, 102, 109, 101,
     99, 118,  48, 107, 121,  57,  54,  99,
    113, 120, 103, 112,  49,  53,  54, 117,
    112,  56, 115, 118,  56,  49, 121, 120,
    118, 109, 101, 114, 121,  53,  56, 113,
     56,  55, 106, 104,   0,   0,   0,   0,
     51,  48,  50, 116,  54,  99,  54, 107,
    102,  56, 104, 106, 101, 114,  49, 107,
    104,  51,  52,  54,  57, 100,  52,  99,
    104,  49,  48, 100,  57,  51,  54, 103,
     55, 119, 107, 119, 116, 120,  99, 115,
     49,  50, 112, 119, 104,  57, 117,  53,
     97, 120, 113, 104,   0,   0,   0,   0,
     53, 100, 100, 107,  52, 117, 113, 110,
    115, 116, 110, 115, 113, 118, 112,  51,
    116, 104,  99,  50, 116, 121, 101, 100,
     52,  49,  99,  55, 119, 112,  52, 120,
     53, 121, 103, 116,  50,  48, 122, 114,
    104,  51, 117,  48, 116, 110, 118,  53,
    106, 113, 100,  48,   0,   0,   0,   0,
    106, 107, 122,  54, 121, 104, 121, 119,
    104, 112,  52, 117, 107,  53, 115, 103,
    107,  99,  53, 117, 103, 119, 110, 101,
    101,  53,  55,  97,  53, 104,  53, 119,
    117,  52, 114, 102, 109, 117, 106, 116,
     97, 104, 110, 121,  53, 114,  56, 103,
     51, 121,  99, 104,   0,   0,   0,   0,
    106, 107, 122,  54, 121, 104, 121, 119,
    104, 112,  52, 117, 107,  53, 115, 103,
    107,  99,  53, 117, 103, 119, 110, 101,
    101,  53,  55,  97,  53, 104,  53, 119,
    117,  52, 114, 102, 109, 117, 106, 116,
     97, 104, 110, 121,  53, 114,  56, 103,
     51, 121,  99, 104,   0,   0,   0,   0,
     97, 100, 107,  54, 115, 121, 102, 106,
     52,  50, 102, 112, 112,  51, 120, 104,
    103, 113, 114, 114, 104, 101, 113, 103,
    102, 120, 107, 104,  97, 119,  56, 101,
     49, 116,  49,  49, 118, 117, 103,  52,
     52, 121, 115,  54, 112, 122,  97, 120,
    113, 117, 103, 104,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   1,   0,   0,
     55,  55,  99,  52, 102,  52,  53,  97,
    101, 101,  56,  51, 101,  51,  55,  54,
    100,  51,  49,  97,  53,  54,  56,  48,
     99, 100,  98,  56,  52,  49,  97,  50,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c9ff15fb0eece422 = b_c9ff15fb0eece422.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c9ff15fb0eece422 = {
  0xc9ff15fb0eece422, b_c9ff15fb0eece422.words, 120, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c9ff15fb0eece422, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sandstorm {

// TestIds
constexpr uint16_t TestIds::_capnpPrivate::dataWordSize;
constexpr uint16_t TestIds::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestIds::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestIds::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* TestIds::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

const ::capnp::_::ConstText<52> TestIds::UNUSED_APP(::capnp::schemas::b_a4039a8503794bb5.words + 28);
const ::capnp::_::ConstText<52> TestIds::APP1(::capnp::schemas::b_af2f0d76a56e3559.words + 27);
const ::capnp::_::ConstText<52> TestIds::APP2(::capnp::schemas::b_f747c7537f61d15e.words + 27);
const ::capnp::_::ConstText<52> TestIds::APP3(::capnp::schemas::b_9607b1f83cab1ff5.words + 27);
const ::capnp::_::ConstText<52> TestIds::APP4(::capnp::schemas::b_af87bcb778eaad68.words + 27);
const ::capnp::_::ConstText<52> TestIds::APP5(::capnp::schemas::b_83dd7f735581bbf6.words + 27);
const ::capnp::_::ConstText<52> TestIds::APP6(::capnp::schemas::b_bcb098ad1f300dab.words + 27);
const ::capnp::_::ConstText<32> TestIds::UNUSED_PKG(::capnp::schemas::b_c6d560121c91da08.words + 28);
const ::capnp::_::ConstText<32> TestIds::PKG1(::capnp::schemas::b_f8377658a7706b08.words + 27);
const ::capnp::_::ConstText<32> TestIds::PKG2(::capnp::schemas::b_c0826b1f73498cd7.words + 27);
const ::capnp::_::ConstText<32> TestIds::PKG3(::capnp::schemas::b_d381037554cc22f3.words + 27);
const ::capnp::_::ConstList< ::sandstorm::spk::AppIdReplacement> TEST_APP_ID_REPLACEMENT_LIST(::capnp::schemas::b_c9ff15fb0eece422.words + 32);

}  // namespace

