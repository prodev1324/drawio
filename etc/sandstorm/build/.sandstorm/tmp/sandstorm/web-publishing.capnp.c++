// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: web-publishing.capnp

#include "web-publishing.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<89> b_dddcca47803e2377 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119,  35,  62, 128,  71, 202, 220, 221,
     31,   0,   0,   0,   3,   0,   0,   0,
    182,  82, 165, 208,  59, 230, 211, 213,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 135,   1,   0,   0,
     53,   1,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    104, 126,  14,  60,  62, 221,  25, 208,
      1,   0,   0,   0,  58,   0,   0,   0,
     69, 110, 116, 105, 116, 121,   0,   0,
     24,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 208, 114, 120, 228,  42,   7, 220,
    158,  99, 104,  53,  72,  93, 133, 178,
    177,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    244, 124,  30, 176, 214,  67,  22, 254,
    234, 181,  15,   7, 111, 155, 115, 195,
    153,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    182,  35, 168,  16, 234, 104, 219, 195,
     98,  20,  36, 188, 186,  60,  56, 255,
    133,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    246, 169,  65,  42, 122,  49, 174, 226,
     68, 151,  24, 221,  21, 108,  60, 198,
    117,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     68, 102,  73, 183,  61, 145, 190, 220,
    145, 181, 217, 165, 241, 195, 222, 144,
     97,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    148, 182,  77, 224, 232,  43, 167, 135,
    115, 178, 240,  35,   2, 146, 224, 245,
     77,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  85, 114, 108,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  69, 110, 116, 105, 116,
    105, 101, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  78, 111, 116,  70, 111,
    117, 110, 100,  69, 110, 116, 105, 116,
    105, 101, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    117, 112, 108, 111,  97, 100,  66, 108,
    111,  98,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  83, 117,  98, 115, 105,
    116, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    108, 105, 115, 116,  82, 101, 115, 111,
    117, 114,  99, 101, 115,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_dddcca47803e2377 = b_dddcca47803e2377.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dddcca47803e2377[] = {
  &s_87a72be8e04db694,
  &s_90dec3f1a5d9b591,
  &s_b2855d483568639e,
  &s_c3739b6f070fb5ea,
  &s_c3db68ea10a823b6,
  &s_c63c6c15dd189744,
  &s_dc072ae47872d061,
  &s_dcbe913db7496644,
  &s_e2ae317a2a41a9f6,
  &s_f5e0920223f0b273,
  &s_fe1643d6b01e7cf4,
  &s_ff383cbabc241462,
};
static const uint16_t m_dddcca47803e2377[] = {1, 2, 4, 0, 5, 3};
const ::capnp::_::RawSchema s_dddcca47803e2377 = {
  0xdddcca47803e2377, b_dddcca47803e2377.words, 89, d_dddcca47803e2377, m_dddcca47803e2377,
  12, 6, nullptr, nullptr, nullptr, { &s_dddcca47803e2377, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<92> b_d019dd3e3c0e7e68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104, 126,  14,  60,  62, 221,  25, 208,
     39,   0,   0,   0,   1,   0,   1,   0,
    119,  35,  62, 128,  71, 202, 220, 221,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46,  69,
    110, 116, 105, 116, 121,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    176, 121, 193, 166,  42,  67, 175, 130,
    149,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 109, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 110, 103, 117,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 105, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 100, 121,   0,   0,   0,   0,
    114, 101, 100, 105, 114, 101,  99, 116,
     84, 111,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d019dd3e3c0e7e68 = b_d019dd3e3c0e7e68.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d019dd3e3c0e7e68[] = {
  &s_82af432aa6c179b0,
};
static const uint16_t m_d019dd3e3c0e7e68[] = {3, 2, 1, 0, 4};
static const uint16_t i_d019dd3e3c0e7e68[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d019dd3e3c0e7e68 = {
  0xd019dd3e3c0e7e68, b_d019dd3e3c0e7e68.words, 92, d_d019dd3e3c0e7e68, m_d019dd3e3c0e7e68,
  1, 5, i_d019dd3e3c0e7e68, nullptr, nullptr, { &s_d019dd3e3c0e7e68, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_82af432aa6c179b0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    176, 121, 193, 166,  42,  67, 175, 130,
     46,   0,   0,   0,   1,   0,   1,   0,
    104, 126,  14,  60,  62, 221,  25, 208,
      5,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46,  69,
    110, 116, 105, 116, 121,  46,  98, 111,
    100, 121,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     98, 121, 116, 101, 115,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  98,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    143,  25, 144,  93, 167,  39,  53, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82af432aa6c179b0 = b_82af432aa6c179b0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_82af432aa6c179b0[] = {
  &s_d019dd3e3c0e7e68,
  &s_e53527a75d90198f,
};
static const uint16_t m_82af432aa6c179b0[] = {1, 0};
static const uint16_t i_82af432aa6c179b0[] = {0, 1};
const ::capnp::_::RawSchema s_82af432aa6c179b0 = {
  0x82af432aa6c179b0, b_82af432aa6c179b0.words, 50, d_82af432aa6c179b0, m_82af432aa6c179b0,
  2, 2, i_82af432aa6c179b0, nullptr, nullptr, { &s_82af432aa6c179b0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_dc072ae47872d061 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     97, 208, 114, 120, 228,  42,   7, 220,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 103,
    101, 116,  85, 114, 108,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dc072ae47872d061 = b_dc072ae47872d061.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_dc072ae47872d061 = {
  0xdc072ae47872d061, b_dc072ae47872d061.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_dc072ae47872d061, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_b2855d483568639e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    158,  99, 104,  53,  72,  93, 133, 178,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 103,
    101, 116,  85, 114, 108,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b2855d483568639e = b_b2855d483568639e.words;
#if !CAPNP_LITE
static const uint16_t m_b2855d483568639e[] = {0};
static const uint16_t i_b2855d483568639e[] = {0};
const ::capnp::_::RawSchema s_b2855d483568639e = {
  0xb2855d483568639e, b_b2855d483568639e.words, 35, nullptr, m_b2855d483568639e,
  0, 1, i_b2855d483568639e, nullptr, nullptr, { &s_b2855d483568639e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_fe1643d6b01e7cf4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    244, 124,  30, 176, 214,  67,  22, 254,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 103,
    101, 116,  69, 110, 116, 105, 116, 105,
    101, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe1643d6b01e7cf4 = b_fe1643d6b01e7cf4.words;
#if !CAPNP_LITE
static const uint16_t m_fe1643d6b01e7cf4[] = {0};
static const uint16_t i_fe1643d6b01e7cf4[] = {0};
const ::capnp::_::RawSchema s_fe1643d6b01e7cf4 = {
  0xfe1643d6b01e7cf4, b_fe1643d6b01e7cf4.words, 36, nullptr, m_fe1643d6b01e7cf4,
  0, 1, i_fe1643d6b01e7cf4, nullptr, nullptr, { &s_fe1643d6b01e7cf4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_c3739b6f070fb5ea = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    234, 181,  15,   7, 111, 155, 115, 195,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 103,
    101, 116,  69, 110, 116, 105, 116, 105,
    101, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 105, 116, 105, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    104, 126,  14,  60,  62, 221,  25, 208,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c3739b6f070fb5ea = b_c3739b6f070fb5ea.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c3739b6f070fb5ea[] = {
  &s_eaf255b498229199,
};
static const uint16_t m_c3739b6f070fb5ea[] = {0};
static const uint16_t i_c3739b6f070fb5ea[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_c3739b6f070fb5ea[] = {
  { 16777216,  ::sandstorm::Assignable< ::capnp::List< ::sandstorm::WebSite::Entity>>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_c3739b6f070fb5ea = {
  0xc3739b6f070fb5ea, b_c3739b6f070fb5ea.words, 53, d_c3739b6f070fb5ea, m_c3739b6f070fb5ea,
  1, 1, i_c3739b6f070fb5ea, nullptr, nullptr, { &s_c3739b6f070fb5ea, nullptr, bd_c3739b6f070fb5ea, 0, sizeof(bd_c3739b6f070fb5ea) / sizeof(bd_c3739b6f070fb5ea[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_c3db68ea10a823b6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    182,  35, 168,  16, 234, 104, 219, 195,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 103,
    101, 116,  78, 111, 116,  70, 111, 117,
    110, 100,  69, 110, 116, 105, 116, 105,
    101, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c3db68ea10a823b6 = b_c3db68ea10a823b6.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c3db68ea10a823b6 = {
  0xc3db68ea10a823b6, b_c3db68ea10a823b6.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c3db68ea10a823b6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_ff383cbabc241462 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     98,  20,  36, 188, 186,  60,  56, 255,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 103,
    101, 116,  78, 111, 116,  70, 111, 117,
    110, 100,  69, 110, 116, 105, 116, 105,
    101, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 105, 116, 105, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    104, 126,  14,  60,  62, 221,  25, 208,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff383cbabc241462 = b_ff383cbabc241462.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ff383cbabc241462[] = {
  &s_eaf255b498229199,
};
static const uint16_t m_ff383cbabc241462[] = {0};
static const uint16_t i_ff383cbabc241462[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_ff383cbabc241462[] = {
  { 16777216,  ::sandstorm::Assignable< ::capnp::List< ::sandstorm::WebSite::Entity>>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_ff383cbabc241462 = {
  0xff383cbabc241462, b_ff383cbabc241462.words, 54, d_ff383cbabc241462, m_ff383cbabc241462,
  1, 1, i_ff383cbabc241462, nullptr, nullptr, { &s_ff383cbabc241462, nullptr, bd_ff383cbabc241462, 0, sizeof(bd_ff383cbabc241462) / sizeof(bd_ff383cbabc241462[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_e2ae317a2a41a9f6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    246, 169,  65,  42, 122,  49, 174, 226,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 117,
    112, 108, 111,  97, 100,  66, 108, 111,
     98,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e2ae317a2a41a9f6 = b_e2ae317a2a41a9f6.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e2ae317a2a41a9f6 = {
  0xe2ae317a2a41a9f6, b_e2ae317a2a41a9f6.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e2ae317a2a41a9f6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_c63c6c15dd189744 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     68, 151,  24, 221,  21, 108,  60, 198,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 117,
    112, 108, 111,  97, 100,  66, 108, 111,
     98,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  98,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    143,  25, 144,  93, 167,  39,  53, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 101,  97, 109,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     95, 227, 207,  41, 119,  56,  87, 205,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c63c6c15dd189744 = b_c63c6c15dd189744.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c63c6c15dd189744[] = {
  &s_cd57387729cfe35f,
  &s_e53527a75d90198f,
};
static const uint16_t m_c63c6c15dd189744[] = {0, 1};
static const uint16_t i_c63c6c15dd189744[] = {0, 1};
const ::capnp::_::RawSchema s_c63c6c15dd189744 = {
  0xc63c6c15dd189744, b_c63c6c15dd189744.words, 51, d_c63c6c15dd189744, m_c63c6c15dd189744,
  2, 2, i_c63c6c15dd189744, nullptr, nullptr, { &s_c63c6c15dd189744, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_dcbe913db7496644 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     68, 102,  73, 183,  61, 145, 190, 220,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 103,
    101, 116,  83, 117,  98, 115, 105, 116,
    101,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 101, 102, 105, 120,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dcbe913db7496644 = b_dcbe913db7496644.words;
#if !CAPNP_LITE
static const uint16_t m_dcbe913db7496644[] = {0};
static const uint16_t i_dcbe913db7496644[] = {0};
const ::capnp::_::RawSchema s_dcbe913db7496644 = {
  0xdcbe913db7496644, b_dcbe913db7496644.words, 36, nullptr, m_dcbe913db7496644,
  0, 1, i_dcbe913db7496644, nullptr, nullptr, { &s_dcbe913db7496644, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_90dec3f1a5d9b591 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145, 181, 217, 165, 241, 195, 222, 144,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 103,
    101, 116,  83, 117,  98, 115, 105, 116,
    101,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 105, 116, 101,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    119,  35,  62, 128,  71, 202, 220, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_90dec3f1a5d9b591 = b_90dec3f1a5d9b591.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_90dec3f1a5d9b591[] = {
  &s_dddcca47803e2377,
};
static const uint16_t m_90dec3f1a5d9b591[] = {0};
static const uint16_t i_90dec3f1a5d9b591[] = {0};
const ::capnp::_::RawSchema s_90dec3f1a5d9b591 = {
  0x90dec3f1a5d9b591, b_90dec3f1a5d9b591.words, 36, d_90dec3f1a5d9b591, m_90dec3f1a5d9b591,
  1, 1, i_90dec3f1a5d9b591, nullptr, nullptr, { &s_90dec3f1a5d9b591, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_87a72be8e04db694 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148, 182,  77, 224, 232,  43, 167, 135,
     39,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 108,
    105, 115, 116,  82, 101, 115, 111, 117,
    114,  99, 101, 115,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 108, 108, 111, 119,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87a72be8e04db694 = b_87a72be8e04db694.words;
#if !CAPNP_LITE
static const uint16_t m_87a72be8e04db694[] = {0};
static const uint16_t i_87a72be8e04db694[] = {0};
const ::capnp::_::RawSchema s_87a72be8e04db694 = {
  0x87a72be8e04db694, b_87a72be8e04db694.words, 36, nullptr, m_87a72be8e04db694,
  0, 1, i_87a72be8e04db694, nullptr, nullptr, { &s_87a72be8e04db694, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_f5e0920223f0b273 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115, 178, 240,  35,   2, 146, 224, 245,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 112, 117,
     98, 108, 105, 115, 104, 105, 110, 103,
     46,  99,  97, 112, 110, 112,  58,  87,
    101,  98,  83, 105, 116, 101,  46, 108,
    105, 115, 116,  82, 101, 115, 111, 117,
    114,  99, 101, 115,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f5e0920223f0b273 = b_f5e0920223f0b273.words;
#if !CAPNP_LITE
static const uint16_t m_f5e0920223f0b273[] = {0};
static const uint16_t i_f5e0920223f0b273[] = {0};
const ::capnp::_::RawSchema s_f5e0920223f0b273 = {
  0xf5e0920223f0b273, b_f5e0920223f0b273.words, 40, nullptr, m_f5e0920223f0b273,
  0, 1, i_f5e0920223f0b273, nullptr, nullptr, { &s_f5e0920223f0b273, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sandstorm {

#if !CAPNP_LITE
::capnp::Request< ::sandstorm::WebSite::GetUrlParams,  ::sandstorm::WebSite::GetUrlResults>
WebSite::Client::getUrlRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSite::GetUrlParams,  ::sandstorm::WebSite::GetUrlResults>(
      0xdddcca47803e2377ull, 0, sizeHint);
}
::kj::Promise<void> WebSite::Server::getUrl(GetUrlContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-publishing.capnp:WebSite", "getUrl",
      0xdddcca47803e2377ull, 0);
}
::capnp::Request< ::sandstorm::WebSite::GetEntitiesParams,  ::sandstorm::WebSite::GetEntitiesResults>
WebSite::Client::getEntitiesRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSite::GetEntitiesParams,  ::sandstorm::WebSite::GetEntitiesResults>(
      0xdddcca47803e2377ull, 1, sizeHint);
}
::kj::Promise<void> WebSite::Server::getEntities(GetEntitiesContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-publishing.capnp:WebSite", "getEntities",
      0xdddcca47803e2377ull, 1);
}
::capnp::Request< ::sandstorm::WebSite::GetNotFoundEntitiesParams,  ::sandstorm::WebSite::GetNotFoundEntitiesResults>
WebSite::Client::getNotFoundEntitiesRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSite::GetNotFoundEntitiesParams,  ::sandstorm::WebSite::GetNotFoundEntitiesResults>(
      0xdddcca47803e2377ull, 2, sizeHint);
}
::kj::Promise<void> WebSite::Server::getNotFoundEntities(GetNotFoundEntitiesContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-publishing.capnp:WebSite", "getNotFoundEntities",
      0xdddcca47803e2377ull, 2);
}
::capnp::Request< ::sandstorm::WebSite::UploadBlobParams,  ::sandstorm::WebSite::UploadBlobResults>
WebSite::Client::uploadBlobRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSite::UploadBlobParams,  ::sandstorm::WebSite::UploadBlobResults>(
      0xdddcca47803e2377ull, 3, sizeHint);
}
::kj::Promise<void> WebSite::Server::uploadBlob(UploadBlobContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-publishing.capnp:WebSite", "uploadBlob",
      0xdddcca47803e2377ull, 3);
}
::capnp::Request< ::sandstorm::WebSite::GetSubsiteParams,  ::sandstorm::WebSite::GetSubsiteResults>
WebSite::Client::getSubsiteRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSite::GetSubsiteParams,  ::sandstorm::WebSite::GetSubsiteResults>(
      0xdddcca47803e2377ull, 4, sizeHint);
}
::kj::Promise<void> WebSite::Server::getSubsite(GetSubsiteContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-publishing.capnp:WebSite", "getSubsite",
      0xdddcca47803e2377ull, 4);
}
::capnp::Request< ::sandstorm::WebSite::ListResourcesParams,  ::sandstorm::WebSite::ListResourcesResults>
WebSite::Client::listResourcesRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSite::ListResourcesParams,  ::sandstorm::WebSite::ListResourcesResults>(
      0xdddcca47803e2377ull, 5, sizeHint);
}
::kj::Promise<void> WebSite::Server::listResources(ListResourcesContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-publishing.capnp:WebSite", "listResources",
      0xdddcca47803e2377ull, 5);
}
::kj::Promise<void> WebSite::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xdddcca47803e2377ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/web-publishing.capnp:WebSite", interfaceId);
  }
}
::kj::Promise<void> WebSite::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return getUrl(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSite::GetUrlParams,  ::sandstorm::WebSite::GetUrlResults>(context));
    case 1:
      return getEntities(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSite::GetEntitiesParams,  ::sandstorm::WebSite::GetEntitiesResults>(context));
    case 2:
      return getNotFoundEntities(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSite::GetNotFoundEntitiesParams,  ::sandstorm::WebSite::GetNotFoundEntitiesResults>(context));
    case 3:
      return uploadBlob(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSite::UploadBlobParams,  ::sandstorm::WebSite::UploadBlobResults>(context));
    case 4:
      return getSubsite(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSite::GetSubsiteParams,  ::sandstorm::WebSite::GetSubsiteResults>(context));
    case 5:
      return listResources(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSite::ListResourcesParams,  ::sandstorm::WebSite::ListResourcesResults>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/web-publishing.capnp:WebSite",
          0xdddcca47803e2377ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// WebSite
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::Entity
constexpr uint16_t WebSite::Entity::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::Entity::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::Entity::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::Entity::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::Entity::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::Entity::Body
constexpr uint16_t WebSite::Entity::Body::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::Entity::Body::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::Entity::Body::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::Entity::Body::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::Entity::Body::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::GetUrlParams
constexpr uint16_t WebSite::GetUrlParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::GetUrlParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::GetUrlParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::GetUrlParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::GetUrlParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::GetUrlResults
constexpr uint16_t WebSite::GetUrlResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::GetUrlResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::GetUrlResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::GetUrlResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::GetUrlResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::GetEntitiesParams
constexpr uint16_t WebSite::GetEntitiesParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::GetEntitiesParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::GetEntitiesParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::GetEntitiesParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::GetEntitiesParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::GetEntitiesResults
constexpr uint16_t WebSite::GetEntitiesResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::GetEntitiesResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::GetEntitiesResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::GetEntitiesResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::GetEntitiesResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::GetNotFoundEntitiesParams
constexpr uint16_t WebSite::GetNotFoundEntitiesParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::GetNotFoundEntitiesParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::GetNotFoundEntitiesParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::GetNotFoundEntitiesParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::GetNotFoundEntitiesParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::GetNotFoundEntitiesResults
constexpr uint16_t WebSite::GetNotFoundEntitiesResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::GetNotFoundEntitiesResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::GetNotFoundEntitiesResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::GetNotFoundEntitiesResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::GetNotFoundEntitiesResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::UploadBlobParams
constexpr uint16_t WebSite::UploadBlobParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::UploadBlobParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::UploadBlobParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::UploadBlobParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::UploadBlobParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::UploadBlobResults
constexpr uint16_t WebSite::UploadBlobResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::UploadBlobResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::UploadBlobResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::UploadBlobResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::UploadBlobResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::GetSubsiteParams
constexpr uint16_t WebSite::GetSubsiteParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::GetSubsiteParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::GetSubsiteParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::GetSubsiteParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::GetSubsiteParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::GetSubsiteResults
constexpr uint16_t WebSite::GetSubsiteResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::GetSubsiteResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::GetSubsiteResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::GetSubsiteResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::GetSubsiteResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::ListResourcesParams
constexpr uint16_t WebSite::ListResourcesParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::ListResourcesParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::ListResourcesParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::ListResourcesParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::ListResourcesParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSite::ListResourcesResults
constexpr uint16_t WebSite::ListResourcesResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSite::ListResourcesResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSite::ListResourcesResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSite::ListResourcesResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSite::ListResourcesResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

