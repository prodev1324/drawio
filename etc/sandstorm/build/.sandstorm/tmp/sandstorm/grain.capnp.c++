// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: grain.capnp

#include "grain.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<234> b_d2654fcf2a7002cb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
     22,   0,   0,   0,   3,   0,   0,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 135,   2,   0,   0,
    105,   3,   0,   0,   7,   0,   0,   0,
    105,   3,   0,   0,  15,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     40,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92, 136, 109, 223,  89,  58, 135, 162,
    122,  63,  90, 244, 170, 207,  44, 180,
     49,   1,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   1,   0,   0,   0,   0,   1,   0,
     68,   1,   0,   0,   0,   0,   1,   0,
     85,   1,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     59, 180,  98, 236,  78,   3, 113, 210,
     41, 252, 254, 238,  75,  47, 214, 185,
     73,   1,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   1,   0,   0,   0,   0,   1,   0,
     96,   1,   0,   0,   0,   0,   1,   0,
    113,   1,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     62, 236, 128, 240, 175,  41,  60, 235,
      5, 167,  55, 129, 251, 197, 111, 185,
    101,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   1,   0,   0,   0,   0,   1,   0,
    116,   1,   0,   0,   0,   0,   1,   0,
    133,   1,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    215, 180, 158,  96, 172, 246, 227, 177,
     93, 243, 132,  58, 132, 191, 171, 230,
    121,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   1,   0,   0,   0,   0,   1,   0,
    136,   1,   0,   0,   0,   0,   1,   0,
    153,   1,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    240,  25,  55, 132, 181, 157, 158, 210,
     49, 199,   9,  66,  76, 241, 241, 236,
    141,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   1,   0,   0,   0,   0,   1,   0,
    152,   1,   0,   0,   0,   0,   1,   0,
    169,   1,   0,   0,   7,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    101,  92,  40, 133, 127,  34, 172, 173,
     89, 188, 114, 124,  54,  32, 188, 251,
    157,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   1,   0,   0,   0,   0,   1,   0,
    168,   1,   0,   0,   0,   0,   1,   0,
    185,   1,   0,   0,   7,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    221,  97,  60, 206,  85,  73, 217, 135,
    247,  96, 169, 148,  78, 107, 254, 248,
    173,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   1,   0,   0,   0,   0,   1,   0,
    184,   1,   0,   0,   0,   0,   1,   0,
    201,   1,   0,   0,   7,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     27, 158, 184,  35, 213, 229, 105, 180,
     33,  93, 235, 225, 146,  15, 212, 159,
    189,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   1,   0,   0,   0,   0,   1,   0,
    204,   1,   0,   0,   0,   0,   1,   0,
    221,   1,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     88,  31, 138, 186,  67, 166, 146, 214,
    126, 204, 227, 211, 168, 202,   6, 146,
    209,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   1,   0,   0,   0,   0,   1,   0,
    220,   1,   0,   0,   0,   0,   1,   0,
    237,   1,   0,   0,   7,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     88,  56, 135,  86, 223, 102, 136, 236,
    112,  40, 107,  69,   9, 172,  53, 165,
    225,   1,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   1,   0,   0,   0,   0,   1,   0,
    244,   1,   0,   0,   0,   0,   1,   0,
      5,   2,   0,   0,   7,   0,   0,   0,
    100, 101, 112, 114, 101,  99,  97, 116,
    101, 100,  80, 117,  98, 108, 105, 115,
    104,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    100, 101, 112, 114, 101,  99,  97, 116,
    101, 100,  82, 101, 103, 105, 115, 116,
    101, 114,  65,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 104,  97, 114, 101,  67,  97, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 104,  97, 114, 101,  86, 105, 101,
    119,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 115, 116, 111, 114, 101,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    100, 114, 111, 112,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    100, 101, 108, 101, 116, 101, 100,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 116,  97, 121,  65, 119,  97, 107,
    101,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115,  97, 118, 101,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     98,  97,  99, 107, 103, 114, 111, 117,
    110, 100,  65,  99, 116, 105, 118, 105,
    116, 121,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
     65, 112, 112,  79,  98, 106, 101,  99,
    116,  73, 100,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d2654fcf2a7002cb = b_d2654fcf2a7002cb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d2654fcf2a7002cb[] = {
  &s_87d94955ce3c61dd,
  &s_9206caa8d3e3cc7e,
  &s_9fd40f92e1eb5d21,
  &s_a2873a59df6d885c,
  &s_a535ac09456b2870,
  &s_adac227f85285c65,
  &s_b1e3f6ac609eb4d7,
  &s_b42ccfaaf45a3f7a,
  &s_b469e5d523b89e1b,
  &s_b96fc5fb8137a705,
  &s_b9d62f4beefefc29,
  &s_d271034eec62b43b,
  &s_d29e9db5843719f0,
  &s_d692a643ba8a1f58,
  &s_e6abbf843a84f35d,
  &s_eb3c29aff080ec3e,
  &s_ec8866df56873858,
  &s_ecf1f14c4209c731,
  &s_f8fe6b4e94a960f7,
  &s_fbbc20367c72bc59,
};
static const uint16_t m_d2654fcf2a7002cb[] = {9, 6, 0, 1, 5, 4, 8, 2, 3, 7};
const ::capnp::_::RawBrandedSchema::Dependency bd_d2654fcf2a7002cb[] = {
  { 33554432,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::DeprecatedPublishParams::_capnpPrivate::brand },
  { 33554433,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::DeprecatedRegisterActionParams::_capnpPrivate::brand },
  { 33554434,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::ShareCapParams::_capnpPrivate::brand },
  { 33554435,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::ShareViewParams::_capnpPrivate::brand },
  { 33554436,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::RestoreParams::_capnpPrivate::brand },
  { 33554437,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::DropParams::_capnpPrivate::brand },
  { 33554438,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::DeletedParams::_capnpPrivate::brand },
  { 33554439,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::StayAwakeParams::_capnpPrivate::brand },
  { 33554440,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::SaveParams::_capnpPrivate::brand },
  { 33554441,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::BackgroundActivityParams::_capnpPrivate::brand },
  { 50331648,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::DeprecatedPublishResults::_capnpPrivate::brand },
  { 50331649,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::DeprecatedRegisterActionResults::_capnpPrivate::brand },
  { 50331650,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::ShareCapResults::_capnpPrivate::brand },
  { 50331651,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::ShareViewResults::_capnpPrivate::brand },
  { 50331652,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::RestoreResults::_capnpPrivate::brand },
  { 50331653,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::DropResults::_capnpPrivate::brand },
  { 50331654,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::DeletedResults::_capnpPrivate::brand },
  { 50331655,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::StayAwakeResults::_capnpPrivate::brand },
  { 50331656,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::SaveResults::_capnpPrivate::brand },
  { 50331657,  ::sandstorm::SandstormApi< ::capnp::AnyPointer>::BackgroundActivityResults::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_d2654fcf2a7002cb = {
  0xd2654fcf2a7002cb, b_d2654fcf2a7002cb.words, 234, d_d2654fcf2a7002cb, m_d2654fcf2a7002cb,
  20, 10, nullptr, nullptr, nullptr, { &s_d2654fcf2a7002cb, nullptr, bd_d2654fcf2a7002cb, 0, sizeof(bd_d2654fcf2a7002cb) / sizeof(bd_d2654fcf2a7002cb[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_a2873a59df6d885c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     92, 136, 109, 223,  89,  58, 135, 162,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 100, 101, 112, 114, 101,
     99,  97, 116, 101, 100,  80, 117,  98,
    108, 105, 115, 104,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a2873a59df6d885c = b_a2873a59df6d885c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a2873a59df6d885c = {
  0xa2873a59df6d885c, b_a2873a59df6d885c.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a2873a59df6d885c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_b42ccfaaf45a3f7a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    122,  63,  90, 244, 170, 207,  44, 180,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 100, 101, 112, 114, 101,
     99,  97, 116, 101, 100,  80, 117,  98,
    108, 105, 115, 104,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b42ccfaaf45a3f7a = b_b42ccfaaf45a3f7a.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b42ccfaaf45a3f7a = {
  0xb42ccfaaf45a3f7a, b_b42ccfaaf45a3f7a.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b42ccfaaf45a3f7a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_d271034eec62b43b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59, 180,  98, 236,  78,   3, 113, 210,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 100, 101, 112, 114, 101,
     99,  97, 116, 101, 100,  82, 101, 103,
    105, 115, 116, 101, 114,  65,  99, 116,
    105, 111, 110,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d271034eec62b43b = b_d271034eec62b43b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d271034eec62b43b = {
  0xd271034eec62b43b, b_d271034eec62b43b.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d271034eec62b43b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_b9d62f4beefefc29 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     41, 252, 254, 238,  75,  47, 214, 185,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 100, 101, 112, 114, 101,
     99,  97, 116, 101, 100,  82, 101, 103,
    105, 115, 116, 101, 114,  65,  99, 116,
    105, 111, 110,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b9d62f4beefefc29 = b_b9d62f4beefefc29.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b9d62f4beefefc29 = {
  0xb9d62f4beefefc29, b_b9d62f4beefefc29.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b9d62f4beefefc29, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_eb3c29aff080ec3e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62, 236, 128, 240, 175,  41,  60, 235,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 115, 104,  97, 114, 101,
     67,  97, 112,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 112, 108,  97, 121,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236,  43, 227, 190,   9, 162,  83, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eb3c29aff080ec3e = b_eb3c29aff080ec3e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_eb3c29aff080ec3e[] = {
  &s_a553a209bee32bec,
};
static const uint16_t m_eb3c29aff080ec3e[] = {0, 1};
static const uint16_t i_eb3c29aff080ec3e[] = {0, 1};
const ::capnp::_::RawSchema s_eb3c29aff080ec3e = {
  0xeb3c29aff080ec3e, b_eb3c29aff080ec3e.words, 51, d_eb3c29aff080ec3e, m_eb3c29aff080ec3e,
  1, 2, i_eb3c29aff080ec3e, nullptr, nullptr, { &s_eb3c29aff080ec3e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_b96fc5fb8137a705 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5, 167,  55, 129, 251, 197, 111, 185,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 115, 104,  97, 114, 101,
     67,  97, 112,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 114, 101, 100,  67,  97,
    112,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 110, 107,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    211,  74, 153, 176, 201,  32,  85, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b96fc5fb8137a705 = b_b96fc5fb8137a705.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b96fc5fb8137a705[] = {
  &s_c05520c9b0994ad3,
};
static const uint16_t m_b96fc5fb8137a705[] = {1, 0};
static const uint16_t i_b96fc5fb8137a705[] = {0, 1};
const ::capnp::_::RawSchema s_b96fc5fb8137a705 = {
  0xb96fc5fb8137a705, b_b96fc5fb8137a705.words, 51, d_b96fc5fb8137a705, m_b96fc5fb8137a705,
  1, 2, i_b96fc5fb8137a705, nullptr, nullptr, { &s_b96fc5fb8137a705, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_b1e3f6ac609eb4d7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215, 180, 158,  96, 172, 246, 227, 177,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 115, 104,  97, 114, 101,
     86, 105, 101, 119,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    118, 105, 101, 119,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    231, 226, 103, 234, 152, 215, 180, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1e3f6ac609eb4d7 = b_b1e3f6ac609eb4d7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b1e3f6ac609eb4d7[] = {
  &s_dbb4d798ea67e2e7,
};
static const uint16_t m_b1e3f6ac609eb4d7[] = {0};
static const uint16_t i_b1e3f6ac609eb4d7[] = {0};
const ::capnp::_::RawSchema s_b1e3f6ac609eb4d7 = {
  0xb1e3f6ac609eb4d7, b_b1e3f6ac609eb4d7.words, 35, d_b1e3f6ac609eb4d7, m_b1e3f6ac609eb4d7,
  1, 1, i_b1e3f6ac609eb4d7, nullptr, nullptr, { &s_b1e3f6ac609eb4d7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_e6abbf843a84f35d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93, 243, 132,  58, 132, 191, 171, 230,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 115, 104,  97, 114, 101,
     86, 105, 101, 119,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 104,  97, 114, 101, 100,  86, 105,
    101, 119,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    231, 226, 103, 234, 152, 215, 180, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 110, 107,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    232, 254, 195,  77, 118,  47, 248, 164,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e6abbf843a84f35d = b_e6abbf843a84f35d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e6abbf843a84f35d[] = {
  &s_a4f82f764dc3fee8,
  &s_dbb4d798ea67e2e7,
};
static const uint16_t m_e6abbf843a84f35d[] = {1, 0};
static const uint16_t i_e6abbf843a84f35d[] = {0, 1};
const ::capnp::_::RawSchema s_e6abbf843a84f35d = {
  0xe6abbf843a84f35d, b_e6abbf843a84f35d.words, 51, d_e6abbf843a84f35d, m_e6abbf843a84f35d,
  2, 2, i_e6abbf843a84f35d, nullptr, nullptr, { &s_e6abbf843a84f35d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_d29e9db5843719f0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    240,  25,  55, 132, 181, 157, 158, 210,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 114, 101, 115, 116, 111,
    114, 101,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d29e9db5843719f0 = b_d29e9db5843719f0.words;
#if !CAPNP_LITE
static const uint16_t m_d29e9db5843719f0[] = {0};
static const uint16_t i_d29e9db5843719f0[] = {0};
const ::capnp::_::RawSchema s_d29e9db5843719f0 = {
  0xd29e9db5843719f0, b_d29e9db5843719f0.words, 35, nullptr, m_d29e9db5843719f0,
  0, 1, i_d29e9db5843719f0, nullptr, nullptr, { &s_d29e9db5843719f0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_ecf1f14c4209c731 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49, 199,   9,  66,  76, 241, 241, 236,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 114, 101, 115, 116, 111,
    114, 101,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ecf1f14c4209c731 = b_ecf1f14c4209c731.words;
#if !CAPNP_LITE
static const uint16_t m_ecf1f14c4209c731[] = {0};
static const uint16_t i_ecf1f14c4209c731[] = {0};
const ::capnp::_::RawSchema s_ecf1f14c4209c731 = {
  0xecf1f14c4209c731, b_ecf1f14c4209c731.words, 35, nullptr, m_ecf1f14c4209c731,
  0, 1, i_ecf1f14c4209c731, nullptr, nullptr, { &s_ecf1f14c4209c731, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_adac227f85285c65 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    101,  92,  40, 133, 127,  34, 172, 173,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 100, 114, 111, 112,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adac227f85285c65 = b_adac227f85285c65.words;
#if !CAPNP_LITE
static const uint16_t m_adac227f85285c65[] = {0};
static const uint16_t i_adac227f85285c65[] = {0};
const ::capnp::_::RawSchema s_adac227f85285c65 = {
  0xadac227f85285c65, b_adac227f85285c65.words, 34, nullptr, m_adac227f85285c65,
  0, 1, i_adac227f85285c65, nullptr, nullptr, { &s_adac227f85285c65, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_fbbc20367c72bc59 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89, 188, 114, 124,  54,  32, 188, 251,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 100, 114, 111, 112,  36,
     82, 101, 115, 117, 108, 116, 115,   0, }
};
::capnp::word const* const bp_fbbc20367c72bc59 = b_fbbc20367c72bc59.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fbbc20367c72bc59 = {
  0xfbbc20367c72bc59, b_fbbc20367c72bc59.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fbbc20367c72bc59, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_87d94955ce3c61dd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    221,  97,  60, 206,  85,  73, 217, 135,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 100, 101, 108, 101, 116,
    101, 100,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    203,   2, 112,  42, 207,  79, 101, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87d94955ce3c61dd = b_87d94955ce3c61dd.words;
#if !CAPNP_LITE
static const uint16_t m_87d94955ce3c61dd[] = {0};
static const uint16_t i_87d94955ce3c61dd[] = {0};
const ::capnp::_::RawSchema s_87d94955ce3c61dd = {
  0x87d94955ce3c61dd, b_87d94955ce3c61dd.words, 35, nullptr, m_87d94955ce3c61dd,
  0, 1, i_87d94955ce3c61dd, nullptr, nullptr, { &s_87d94955ce3c61dd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_f8fe6b4e94a960f7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247,  96, 169, 148,  78, 107, 254, 248,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 100, 101, 108, 101, 116,
    101, 100,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f8fe6b4e94a960f7 = b_f8fe6b4e94a960f7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f8fe6b4e94a960f7 = {
  0xf8fe6b4e94a960f7, b_f8fe6b4e94a960f7.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f8fe6b4e94a960f7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_b469e5d523b89e1b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     27, 158, 184,  35, 213, 229, 105, 180,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 115, 116,  97, 121,  65,
    119,  97, 107, 101,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    100, 105, 115, 112, 108,  97, 121,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    131, 247, 212,  66, 202, 242, 185, 211,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116, 105, 102, 105,  99,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    205,  64, 137, 184, 219,  29, 133, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b469e5d523b89e1b = b_b469e5d523b89e1b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b469e5d523b89e1b[] = {
  &s_d3b9f2ca42d4f783,
  &s_fe851ddbb88940cd,
};
static const uint16_t m_b469e5d523b89e1b[] = {0, 1};
static const uint16_t i_b469e5d523b89e1b[] = {0, 1};
const ::capnp::_::RawSchema s_b469e5d523b89e1b = {
  0xb469e5d523b89e1b, b_b469e5d523b89e1b.words, 52, d_b469e5d523b89e1b, m_b469e5d523b89e1b,
  2, 2, i_b469e5d523b89e1b, nullptr, nullptr, { &s_b469e5d523b89e1b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_9fd40f92e1eb5d21 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     33,  93, 235, 225, 146,  15, 212, 159,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 115, 116,  97, 121,  65,
    119,  97, 107, 101,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 110, 100, 108, 101,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    224,  66,  96,  96, 172,  36, 244, 152,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9fd40f92e1eb5d21 = b_9fd40f92e1eb5d21.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9fd40f92e1eb5d21[] = {
  &s_98f424ac606042e0,
};
static const uint16_t m_9fd40f92e1eb5d21[] = {0};
static const uint16_t i_9fd40f92e1eb5d21[] = {0};
const ::capnp::_::RawSchema s_9fd40f92e1eb5d21 = {
  0x9fd40f92e1eb5d21, b_9fd40f92e1eb5d21.words, 35, d_9fd40f92e1eb5d21, m_9fd40f92e1eb5d21,
  1, 1, i_9fd40f92e1eb5d21, nullptr, nullptr, { &s_9fd40f92e1eb5d21, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_d692a643ba8a1f58 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     88,  31, 138, 186,  67, 166, 146, 214,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 115,  97, 118, 101,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97,  98, 101, 108,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d692a643ba8a1f58 = b_d692a643ba8a1f58.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d692a643ba8a1f58[] = {
  &s_8b5db772377be249,
};
static const uint16_t m_d692a643ba8a1f58[] = {0, 1};
static const uint16_t i_d692a643ba8a1f58[] = {0, 1};
const ::capnp::_::RawSchema s_d692a643ba8a1f58 = {
  0xd692a643ba8a1f58, b_d692a643ba8a1f58.words, 49, d_d692a643ba8a1f58, m_d692a643ba8a1f58,
  1, 2, i_d692a643ba8a1f58, nullptr, nullptr, { &s_d692a643ba8a1f58, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9206caa8d3e3cc7e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    126, 204, 227, 211, 168, 202,   6, 146,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46, 115,  97, 118, 101,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 111, 107, 101, 110,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9206caa8d3e3cc7e = b_9206caa8d3e3cc7e.words;
#if !CAPNP_LITE
static const uint16_t m_9206caa8d3e3cc7e[] = {0};
static const uint16_t i_9206caa8d3e3cc7e[] = {0};
const ::capnp::_::RawSchema s_9206caa8d3e3cc7e = {
  0x9206caa8d3e3cc7e, b_9206caa8d3e3cc7e.words, 34, nullptr, m_9206caa8d3e3cc7e,
  0, 1, i_9206caa8d3e3cc7e, nullptr, nullptr, { &s_9206caa8d3e3cc7e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_ec8866df56873858 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     88,  56, 135,  86, 223, 102, 136, 236,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46,  98,  97,  99, 107, 103,
    114, 111, 117, 110, 100,  65,  99, 116,
    105, 118, 105, 116, 121,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     75, 108, 140, 169, 234, 182, 192, 167,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ec8866df56873858 = b_ec8866df56873858.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ec8866df56873858[] = {
  &s_a7c0b6eaa98c6c4b,
};
static const uint16_t m_ec8866df56873858[] = {0};
static const uint16_t i_ec8866df56873858[] = {0};
const ::capnp::_::RawSchema s_ec8866df56873858 = {
  0xec8866df56873858, b_ec8866df56873858.words, 36, d_ec8866df56873858, m_ec8866df56873858,
  1, 1, i_ec8866df56873858, nullptr, nullptr, { &s_ec8866df56873858, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_a535ac09456b2870 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    112,  40, 107,  69,   9, 172,  53, 165,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 242,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83,  97,
    110, 100, 115, 116, 111, 114, 109,  65,
    112, 105,  46,  98,  97,  99, 107, 103,
    114, 111, 117, 110, 100,  65,  99, 116,
    105, 118, 105, 116, 121,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0, }
};
::capnp::word const* const bp_a535ac09456b2870 = b_a535ac09456b2870.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a535ac09456b2870 = {
  0xa535ac09456b2870, b_a535ac09456b2870.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a535ac09456b2870, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_dbb4d798ea67e2e7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    231, 226, 103, 234, 152, 215, 180, 219,
     22,   0,   0,   0,   3,   0,   0,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,   7,   1,   0,   0,
    241,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    101, 230, 168,  65,  71,  53,  94, 188,
      9,   0,   0,   0,  74,   0,   0,   0,
    236,  88,  25, 139, 192, 144,  39, 152,
      9,   0,   0,   0,  98,   0,   0,   0,
     86, 105, 101, 119,  73, 110, 102, 111,
      0,   0,   0,   0,   0,   0,   0,   0,
     80, 111, 119, 101, 114,  98, 111, 120,
     84,  97, 103,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    134,  78, 214,  73, 149, 244,  46, 143,
    101, 230, 168,  65,  71,  53,  94, 188,
    113,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     40, 104, 153, 159,  90,  44, 122, 248,
    199, 148, 146,  40, 151, 255, 244, 168,
     93,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    203, 139,  89,  25,  66,  58,  25, 188,
    120, 151,  87, 249,  28,  45,  42, 162,
     73,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    223, 148, 137, 206, 179, 237,  58, 165,
    121,  32, 236,   1, 140, 112, 182, 158,
     57,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  86, 105, 101, 119,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    110, 101, 119,  83, 101, 115, 115, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    110, 101, 119,  82, 101, 113, 117, 101,
    115, 116,  83, 101, 115, 115, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    110, 101, 119,  79, 102, 102, 101, 114,
     83, 101, 115, 115, 105, 111, 110,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_dbb4d798ea67e2e7 = b_dbb4d798ea67e2e7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dbb4d798ea67e2e7[] = {
  &s_8f2ef49549d64e86,
  &s_9eb6708c01ec2079,
  &s_a22a2d1cf9579778,
  &s_a53aedb3ce8994df,
  &s_a8f4ff97289294c7,
  &s_bc193a4219598bcb,
  &s_bc5e354741a8e665,
  &s_f87a2c5a9f996828,
};
static const uint16_t m_dbb4d798ea67e2e7[] = {0, 3, 2, 1};
const ::capnp::_::RawSchema s_dbb4d798ea67e2e7 = {
  0xdbb4d798ea67e2e7, b_dbb4d798ea67e2e7.words, 72, d_dbb4d798ea67e2e7, m_dbb4d798ea67e2e7,
  8, 4, nullptr, nullptr, nullptr, { &s_dbb4d798ea67e2e7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<171> b_bc5e354741a8e665 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    101, 230, 168,  65,  71,  53,  94, 188,
     29,   0,   0,   0,   1,   0,   0,   0,
    231, 226, 103, 234, 152, 215, 180, 219,
      8,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46,  86, 105, 101,
    119,  73, 110, 102, 111,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     28,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   1,   0,   0,   3,   0,   1,   0,
     76,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   1,   0,   0,   3,   0,   1,   0,
     84,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   1,   0,   0,   3,   0,   1,   0,
     92,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   1,   0,   0,   3,   0,   1,   0,
    116,   1,   0,   0,   2,   0,   1,   0,
    112, 101, 114, 109, 105, 115, 115, 105,
    111, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    251, 218, 137, 136, 229, 165,  68, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 108, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     90, 220, 228, 234, 100, 112,  63, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 110, 105, 101, 100,  80, 101,
    114, 109, 105, 115, 115, 105, 111, 110,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116,  99, 104,  82, 101, 113,
    117, 101, 115, 116, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88,  28, 199, 191, 163,  15, 207, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116,  99, 104,  79, 102, 102,
    101, 114, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88,  28, 199, 191, 163,  15, 207, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 112, 112,  84, 105, 116, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 114,  97, 105, 110,  73,  99, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     63, 162, 169,  31,  98,  94, 187, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  84, 121, 112,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     43, 154, 200, 215,  10, 222,  56, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc5e354741a8e665 = b_bc5e354741a8e665.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bc5e354741a8e665[] = {
  &s_8b5db772377be249,
  &s_cb3f7064eae4dc5a,
  &s_e638de0ad7c89a2b,
  &s_edcf0fa3bfc71c58,
  &s_f144a5e58889dafb,
  &s_fabb5e621fa9a23f,
};
static const uint16_t m_bc5e354741a8e665[] = {5, 2, 7, 6, 4, 3, 0, 1};
static const uint16_t i_bc5e354741a8e665[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_bc5e354741a8e665 = {
  0xbc5e354741a8e665, b_bc5e354741a8e665.words, 171, d_bc5e354741a8e665, m_bc5e354741a8e665,
  6, 8, i_bc5e354741a8e665, nullptr, nullptr, { &s_bc5e354741a8e665, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_982790c08b1958ec = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    236,  88,  25, 139, 192, 144,  39, 152,
     29,   0,   0,   0,   1,   0,   0,   0,
    231, 226, 103, 234, 152, 215, 180, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46,  80, 111, 119,
    101, 114,  98, 111, 120,  84,  97, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 116, 108, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_982790c08b1958ec = b_982790c08b1958ec.words;
#if !CAPNP_LITE
static const uint16_t m_982790c08b1958ec[] = {0};
static const uint16_t i_982790c08b1958ec[] = {0};
const ::capnp::_::RawSchema s_982790c08b1958ec = {
  0x982790c08b1958ec, b_982790c08b1958ec.words, 35, nullptr, m_982790c08b1958ec,
  0, 1, i_982790c08b1958ec, nullptr, nullptr, { &s_982790c08b1958ec, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_8f2ef49549d64e86 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134,  78, 214,  73, 149, 244,  46, 143,
     29,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46, 103, 101, 116,
     86, 105, 101, 119,  73, 110, 102, 111,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_8f2ef49549d64e86 = b_8f2ef49549d64e86.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_8f2ef49549d64e86 = {
  0x8f2ef49549d64e86, b_8f2ef49549d64e86.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_8f2ef49549d64e86, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<97> b_f87a2c5a9f996828 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     40, 104, 153, 159,  90,  44, 122, 248,
     29,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46, 110, 101, 119,
     83, 101, 115, 115, 105, 111, 110,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
    117, 115, 101, 114,  73, 110, 102, 111,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211,  17,  93, 179, 239, 209, 185, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     54, 243,  99,  90,  29,  64,  62, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97,  98,  73, 100,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f87a2c5a9f996828 = b_f87a2c5a9f996828.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f87a2c5a9f996828[] = {
  &s_94b9d1efb35d11d3,
  &s_bf3e401d5a63f336,
};
static const uint16_t m_f87a2c5a9f996828[] = {1, 3, 2, 4, 0};
static const uint16_t i_f87a2c5a9f996828[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_f87a2c5a9f996828 = {
  0xf87a2c5a9f996828, b_f87a2c5a9f996828.words, 97, d_f87a2c5a9f996828, m_f87a2c5a9f996828,
  2, 5, i_f87a2c5a9f996828, nullptr, nullptr, { &s_f87a2c5a9f996828, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_a8f4ff97289294c7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    199, 148, 146,  40, 151, 255, 244, 168,
     29,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46, 110, 101, 119,
     83, 101, 115, 115, 105, 111, 110,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    111,  22, 181,  88, 238,  65,  50, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a8f4ff97289294c7 = b_a8f4ff97289294c7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a8f4ff97289294c7[] = {
  &s_f63241ee58b5166f,
};
static const uint16_t m_a8f4ff97289294c7[] = {0};
static const uint16_t i_a8f4ff97289294c7[] = {0};
const ::capnp::_::RawSchema s_a8f4ff97289294c7 = {
  0xa8f4ff97289294c7, b_a8f4ff97289294c7.words, 34, d_a8f4ff97289294c7, m_a8f4ff97289294c7,
  1, 1, i_a8f4ff97289294c7, nullptr, nullptr, { &s_a8f4ff97289294c7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<118> b_bc193a4219598bcb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    203, 139,  89,  25,  66,  58,  25, 188,
     29,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46, 110, 101, 119,
     82, 101, 113, 117, 101, 115, 116,  83,
    101, 115, 115, 105, 111, 110,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
    117, 115, 101, 114,  73, 110, 102, 111,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211,  17,  93, 179, 239, 209, 185, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     54, 243,  99,  90,  29,  64,  62, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88,  28, 199, 191, 163,  15, 207, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97,  98,  73, 100,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc193a4219598bcb = b_bc193a4219598bcb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bc193a4219598bcb[] = {
  &s_94b9d1efb35d11d3,
  &s_bf3e401d5a63f336,
  &s_edcf0fa3bfc71c58,
};
static const uint16_t m_bc193a4219598bcb[] = {1, 4, 3, 2, 5, 0};
static const uint16_t i_bc193a4219598bcb[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_bc193a4219598bcb = {
  0xbc193a4219598bcb, b_bc193a4219598bcb.words, 118, d_bc193a4219598bcb, m_bc193a4219598bcb,
  3, 6, i_bc193a4219598bcb, nullptr, nullptr, { &s_bc193a4219598bcb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_a22a2d1cf9579778 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    120, 151,  87, 249,  28,  45,  42, 162,
     29,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46, 110, 101, 119,
     82, 101, 113, 117, 101, 115, 116,  83,
    101, 115, 115, 105, 111, 110,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    111,  22, 181,  88, 238,  65,  50, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a22a2d1cf9579778 = b_a22a2d1cf9579778.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a22a2d1cf9579778[] = {
  &s_f63241ee58b5166f,
};
static const uint16_t m_a22a2d1cf9579778[] = {0};
static const uint16_t i_a22a2d1cf9579778[] = {0};
const ::capnp::_::RawSchema s_a22a2d1cf9579778 = {
  0xa22a2d1cf9579778, b_a22a2d1cf9579778.words, 35, d_a22a2d1cf9579778, m_a22a2d1cf9579778,
  1, 1, i_a22a2d1cf9579778, nullptr, nullptr, { &s_a22a2d1cf9579778, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<129> b_a53aedb3ce8994df = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    223, 148, 137, 206, 179, 237,  58, 165,
     29,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46, 110, 101, 119,
     79, 102, 102, 101, 114,  83, 101, 115,
    115, 105, 111, 110,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
    117, 115, 101, 114,  73, 110, 102, 111,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211,  17,  93, 179, 239, 209, 185, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     54, 243,  99,  90,  29,  64,  62, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 115, 115, 105, 111, 110,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 102, 102, 101, 114,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    111, 114,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88,  28, 199, 191, 163,  15, 207, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97,  98,  73, 100,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a53aedb3ce8994df = b_a53aedb3ce8994df.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a53aedb3ce8994df[] = {
  &s_94b9d1efb35d11d3,
  &s_bf3e401d5a63f336,
  &s_edcf0fa3bfc71c58,
};
static const uint16_t m_a53aedb3ce8994df[] = {1, 5, 4, 3, 2, 6, 0};
static const uint16_t i_a53aedb3ce8994df[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_a53aedb3ce8994df = {
  0xa53aedb3ce8994df, b_a53aedb3ce8994df.words, 129, d_a53aedb3ce8994df, m_a53aedb3ce8994df,
  3, 7, i_a53aedb3ce8994df, nullptr, nullptr, { &s_a53aedb3ce8994df, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_9eb6708c01ec2079 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121,  32, 236,   1, 140, 112, 182, 158,
     29,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     86, 105, 101, 119,  46, 110, 101, 119,
     79, 102, 102, 101, 114,  83, 101, 115,
    115, 105, 111, 110,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 115, 115, 105, 111, 110,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    111,  22, 181,  88, 238,  65,  50, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9eb6708c01ec2079 = b_9eb6708c01ec2079.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9eb6708c01ec2079[] = {
  &s_f63241ee58b5166f,
};
static const uint16_t m_9eb6708c01ec2079[] = {0};
static const uint16_t i_9eb6708c01ec2079[] = {0};
const ::capnp::_::RawSchema s_9eb6708c01ec2079 = {
  0x9eb6708c01ec2079, b_9eb6708c01ec2079.words, 35, d_9eb6708c01ec2079, m_9eb6708c01ec2079,
  1, 1, i_9eb6708c01ec2079, nullptr, nullptr, { &s_9eb6708c01ec2079, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_f63241ee58b5166f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    111,  22, 181,  88, 238,  65,  50, 246,
     22,   0,   0,   0,   3,   0,   0,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  85, 105,
     83, 101, 115, 115, 105, 111, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f63241ee58b5166f = b_f63241ee58b5166f.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f63241ee58b5166f = {
  0xf63241ee58b5166f, b_f63241ee58b5166f.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f63241ee58b5166f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<117> b_bf3e401d5a63f336 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     54, 243,  99,  90,  29,  64,  62, 191,
     22,   0,   0,   0,   3,   0,   0,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  71,   2,   0,   0,
    165,   1,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     36,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 110, 218, 119, 207,  89, 104, 233,
    136, 123, 203, 206, 119, 216,  11, 183,
     17,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   1,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    108,   8, 147, 216, 232, 113,  30, 196,
    229, 167,  75, 128, 196,  17, 249, 246,
      1,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    230, 174, 158,  12, 218,  56,  61, 251,
     91, 189,  57,  93, 241,  53, 113, 254,
    237,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    225, 232, 142,  40,  70, 133,  59, 246,
    253, 154, 224,  86, 247, 132,  38, 212,
    213,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    146, 253,  13,  73, 239,  54, 108, 159,
    232,  45, 126, 201, 154, 214, 236, 180,
    189,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,   7,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    212, 132, 121, 198, 235,  96,  44, 241,
    156,   6,  79, 219, 250,   2,  65, 157,
    169,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,   7,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    170, 104,  76,  83,   8,  94, 127, 243,
     35, 193,   7, 210, 198, 200, 214, 249,
    145,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    207, 226, 156, 145, 242, 164,  19, 218,
     86, 183,  86,  75, 109, 101, 234, 239,
    125,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,   7,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    224,  35,  93,  74, 241,  32, 227, 133,
    139, 160,  30, 103, 201, 173,  62, 169,
    105,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  83, 104,  97, 114, 101,
    100,  80, 101, 114, 109, 105, 115, 115,
    105, 111, 110, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    116, 105, 101,  84, 111,  85, 115, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    111, 102, 102, 101, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 113, 117, 101, 115, 116,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 117, 108, 102, 105, 108, 108,  82,
    101, 113, 117, 101, 115, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 108, 111, 115, 101,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    111, 112, 101, 110,  86, 105, 101, 119,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 108,  97, 105, 109,  82, 101, 113,
    117, 101, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     97,  99, 116, 105, 118, 105, 116, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_bf3e401d5a63f336 = b_bf3e401d5a63f336.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bf3e401d5a63f336[] = {
  &s_85e320f14a5d23e0,
  &s_9d4102fadb4f069c,
  &s_9f6c36ef490dfd92,
  &s_a93eadc9671ea08b,
  &s_b4ecd69ac97e2de8,
  &s_b70bd877cecb7b88,
  &s_c41e71e8d893086c,
  &s_d42684f756e09afd,
  &s_da13a4f2919ce2cf,
  &s_e96859cf77da6e6b,
  &s_efea656d4b56b756,
  &s_f12c60ebc67984d4,
  &s_f37f5e08534c68aa,
  &s_f63b8546288ee8e1,
  &s_f6f911c4804ba7e5,
  &s_f9d6c8c6d207c123,
  &s_fb3d38da0c9eaee6,
  &s_fe7135f15d39bd5b,
};
static const uint16_t m_bf3e401d5a63f336[] = {8, 7, 5, 4, 0, 2, 6, 3, 1};
const ::capnp::_::RawSchema s_bf3e401d5a63f336 = {
  0xbf3e401d5a63f336, b_bf3e401d5a63f336.words, 117, d_bf3e401d5a63f336, m_bf3e401d5a63f336,
  18, 9, nullptr, nullptr, nullptr, { &s_bf3e401d5a63f336, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_e96859cf77da6e6b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    107, 110, 218, 119, 207,  89, 104, 233,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 103, 101, 116,
     83, 104,  97, 114, 101, 100,  80, 101,
    114, 109, 105, 115, 115, 105, 111, 110,
    115,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e96859cf77da6e6b = b_e96859cf77da6e6b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e96859cf77da6e6b = {
  0xe96859cf77da6e6b, b_e96859cf77da6e6b.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e96859cf77da6e6b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_b70bd877cecb7b88 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    136, 123, 203, 206, 119, 216,  11, 183,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 103, 101, 116,
     83, 104,  97, 114, 101, 100,  80, 101,
    114, 109, 105, 115, 115, 105, 111, 110,
    115,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 114,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     36,  66, 214,  96,  83, 246, 242, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b70bd877cecb7b88 = b_b70bd877cecb7b88.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b70bd877cecb7b88[] = {
  &s_80f2f65360d64224,
};
static const uint16_t m_b70bd877cecb7b88[] = {0};
static const uint16_t i_b70bd877cecb7b88[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_b70bd877cecb7b88[] = {
  { 16777216,  ::sandstorm::Assignable< ::capnp::List<bool>>::Getter::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_b70bd877cecb7b88 = {
  0xb70bd877cecb7b88, b_b70bd877cecb7b88.words, 53, d_b70bd877cecb7b88, m_b70bd877cecb7b88,
  1, 1, i_b70bd877cecb7b88, nullptr, nullptr, { &s_b70bd877cecb7b88, nullptr, bd_b70bd877cecb7b88, 0, sizeof(bd_b70bd877cecb7b88) / sizeof(bd_b70bd877cecb7b88[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_c41e71e8d893086c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108,   8, 147, 216, 232, 113,  30, 196,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 116, 105, 101,
     84, 111,  85, 115, 101, 114,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 105, 114, 101, 100,
     80, 101, 114, 109, 105, 115, 115, 105,
    111, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 112, 108,  97, 121,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236,  43, 227, 190,   9, 162,  83, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c41e71e8d893086c = b_c41e71e8d893086c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c41e71e8d893086c[] = {
  &s_a553a209bee32bec,
};
static const uint16_t m_c41e71e8d893086c[] = {0, 2, 1};
static const uint16_t i_c41e71e8d893086c[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c41e71e8d893086c = {
  0xc41e71e8d893086c, b_c41e71e8d893086c.words, 72, d_c41e71e8d893086c, m_c41e71e8d893086c,
  1, 3, i_c41e71e8d893086c, nullptr, nullptr, { &s_c41e71e8d893086c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_f6f911c4804ba7e5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    229, 167,  75, 128, 196,  17, 249, 246,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 116, 105, 101,
     84, 111,  85, 115, 101, 114,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 101, 100,  67,  97, 112,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f6f911c4804ba7e5 = b_f6f911c4804ba7e5.words;
#if !CAPNP_LITE
static const uint16_t m_f6f911c4804ba7e5[] = {0};
static const uint16_t i_f6f911c4804ba7e5[] = {0};
const ::capnp::_::RawSchema s_f6f911c4804ba7e5 = {
  0xf6f911c4804ba7e5, b_f6f911c4804ba7e5.words, 35, nullptr, m_f6f911c4804ba7e5,
  0, 1, i_f6f911c4804ba7e5, nullptr, nullptr, { &s_f6f911c4804ba7e5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<88> b_fb3d38da0c9eaee6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 174, 158,  12, 218,  56,  61, 251,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 111, 102, 102,
    101, 114,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 105, 114, 101, 100,
     80, 101, 114, 109, 105, 115, 115, 105,
    111, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    111, 114,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88,  28, 199, 191, 163,  15, 207, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 112, 108,  97, 121,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236,  43, 227, 190,   9, 162,  83, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fb3d38da0c9eaee6 = b_fb3d38da0c9eaee6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fb3d38da0c9eaee6[] = {
  &s_a553a209bee32bec,
  &s_edcf0fa3bfc71c58,
};
static const uint16_t m_fb3d38da0c9eaee6[] = {0, 2, 3, 1};
static const uint16_t i_fb3d38da0c9eaee6[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_fb3d38da0c9eaee6 = {
  0xfb3d38da0c9eaee6, b_fb3d38da0c9eaee6.words, 88, d_fb3d38da0c9eaee6, m_fb3d38da0c9eaee6,
  2, 4, i_fb3d38da0c9eaee6, nullptr, nullptr, { &s_fb3d38da0c9eaee6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_fe7135f15d39bd5b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     91, 189,  57,  93, 241,  53, 113, 254,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 111, 102, 102,
    101, 114,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe7135f15d39bd5b = b_fe7135f15d39bd5b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fe7135f15d39bd5b = {
  0xfe7135f15d39bd5b, b_fe7135f15d39bd5b.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fe7135f15d39bd5b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<60> b_f63b8546288ee8e1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225, 232, 142,  40,  70, 133,  59, 246,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 114, 101, 113,
    117, 101, 115, 116,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    113, 117, 101, 114, 121,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88,  28, 199, 191, 163,  15, 207, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 105, 114, 101, 100,
     80, 101, 114, 109, 105, 115, 115, 105,
    111, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f63b8546288ee8e1 = b_f63b8546288ee8e1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f63b8546288ee8e1[] = {
  &s_edcf0fa3bfc71c58,
};
static const uint16_t m_f63b8546288ee8e1[] = {0, 1};
static const uint16_t i_f63b8546288ee8e1[] = {0, 1};
const ::capnp::_::RawSchema s_f63b8546288ee8e1 = {
  0xf63b8546288ee8e1, b_f63b8546288ee8e1.words, 60, d_f63b8546288ee8e1, m_f63b8546288ee8e1,
  1, 2, i_f63b8546288ee8e1, nullptr, nullptr, { &s_f63b8546288ee8e1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_d42684f756e09afd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    253, 154, 224,  86, 247, 132,  38, 212,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 114, 101, 113,
    117, 101, 115, 116,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    111, 114,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88,  28, 199, 191, 163,  15, 207, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d42684f756e09afd = b_d42684f756e09afd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d42684f756e09afd[] = {
  &s_edcf0fa3bfc71c58,
};
static const uint16_t m_d42684f756e09afd[] = {0, 1};
static const uint16_t i_d42684f756e09afd[] = {0, 1};
const ::capnp::_::RawSchema s_d42684f756e09afd = {
  0xd42684f756e09afd, b_d42684f756e09afd.words, 51, d_d42684f756e09afd, m_d42684f756e09afd,
  1, 2, i_d42684f756e09afd, nullptr, nullptr, { &s_d42684f756e09afd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<89> b_9f6c36ef490dfd92 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    146, 253,  13,  73, 239,  54, 108, 159,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 102, 117, 108,
    102, 105, 108, 108,  82, 101, 113, 117,
    101, 115, 116,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 105, 114, 101, 100,
     80, 101, 114, 109, 105, 115, 115, 105,
    111, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    111, 114,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88,  28, 199, 191, 163,  15, 207, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 112, 108,  97, 121,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236,  43, 227, 190,   9, 162,  83, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f6c36ef490dfd92 = b_9f6c36ef490dfd92.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9f6c36ef490dfd92[] = {
  &s_a553a209bee32bec,
  &s_edcf0fa3bfc71c58,
};
static const uint16_t m_9f6c36ef490dfd92[] = {0, 2, 3, 1};
static const uint16_t i_9f6c36ef490dfd92[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9f6c36ef490dfd92 = {
  0x9f6c36ef490dfd92, b_9f6c36ef490dfd92.words, 89, d_9f6c36ef490dfd92, m_9f6c36ef490dfd92,
  2, 4, i_9f6c36ef490dfd92, nullptr, nullptr, { &s_9f6c36ef490dfd92, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_b4ecd69ac97e2de8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232,  45, 126, 201, 154, 214, 236, 180,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 102, 117, 108,
    102, 105, 108, 108,  82, 101, 113, 117,
    101, 115, 116,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b4ecd69ac97e2de8 = b_b4ecd69ac97e2de8.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b4ecd69ac97e2de8 = {
  0xb4ecd69ac97e2de8, b_b4ecd69ac97e2de8.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b4ecd69ac97e2de8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_f12c60ebc67984d4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    212, 132, 121, 198, 235,  96,  44, 241,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46,  99, 108, 111,
    115, 101,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f12c60ebc67984d4 = b_f12c60ebc67984d4.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f12c60ebc67984d4 = {
  0xf12c60ebc67984d4, b_f12c60ebc67984d4.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f12c60ebc67984d4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_9d4102fadb4f069c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    156,   6,  79, 219, 250,   2,  65, 157,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46,  99, 108, 111,
    115, 101,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9d4102fadb4f069c = b_9d4102fadb4f069c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9d4102fadb4f069c = {
  0x9d4102fadb4f069c, b_9d4102fadb4f069c.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9d4102fadb4f069c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_f37f5e08534c68aa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    170, 104,  76,  83,   8,  94, 127, 243,
     37,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 111, 112, 101,
    110,  86, 105, 101, 119,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    118, 105, 101, 119,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    231, 226, 103, 234, 152, 215, 180, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 101, 119,  84,  97,  98,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f37f5e08534c68aa = b_f37f5e08534c68aa.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f37f5e08534c68aa[] = {
  &s_dbb4d798ea67e2e7,
};
static const uint16_t m_f37f5e08534c68aa[] = {2, 1, 0};
static const uint16_t i_f37f5e08534c68aa[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f37f5e08534c68aa = {
  0xf37f5e08534c68aa, b_f37f5e08534c68aa.words, 66, d_f37f5e08534c68aa, m_f37f5e08534c68aa,
  1, 3, i_f37f5e08534c68aa, nullptr, nullptr, { &s_f37f5e08534c68aa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_f9d6c8c6d207c123 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35, 193,   7, 210, 198, 200, 214, 249,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46, 111, 112, 101,
    110,  86, 105, 101, 119,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0, }
};
::capnp::word const* const bp_f9d6c8c6d207c123 = b_f9d6c8c6d207c123.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f9d6c8c6d207c123 = {
  0xf9d6c8c6d207c123, b_f9d6c8c6d207c123.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f9d6c8c6d207c123, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_da13a4f2919ce2cf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    207, 226, 156, 145, 242, 164,  19, 218,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46,  99, 108,  97,
    105, 109,  82, 101, 113, 117, 101, 115,
    116,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 113, 117, 101, 115, 116,  84,
    111, 107, 101, 110,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 105, 114, 101, 100,
     80, 101, 114, 109, 105, 115, 115, 105,
    111, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da13a4f2919ce2cf = b_da13a4f2919ce2cf.words;
#if !CAPNP_LITE
static const uint16_t m_da13a4f2919ce2cf[] = {0, 1};
static const uint16_t i_da13a4f2919ce2cf[] = {0, 1};
const ::capnp::_::RawSchema s_da13a4f2919ce2cf = {
  0xda13a4f2919ce2cf, b_da13a4f2919ce2cf.words, 58, nullptr, m_da13a4f2919ce2cf,
  0, 2, i_da13a4f2919ce2cf, nullptr, nullptr, { &s_da13a4f2919ce2cf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_efea656d4b56b756 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86, 183,  86,  75, 109, 101, 234, 239,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46,  99, 108,  97,
    105, 109,  82, 101, 113, 117, 101, 115,
    116,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_efea656d4b56b756 = b_efea656d4b56b756.words;
#if !CAPNP_LITE
static const uint16_t m_efea656d4b56b756[] = {0};
static const uint16_t i_efea656d4b56b756[] = {0};
const ::capnp::_::RawSchema s_efea656d4b56b756 = {
  0xefea656d4b56b756, b_efea656d4b56b756.words, 36, nullptr, m_efea656d4b56b756,
  0, 1, i_efea656d4b56b756, nullptr, nullptr, { &s_efea656d4b56b756, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_85e320f14a5d23e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224,  35,  93,  74, 241,  32, 227, 133,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46,  97,  99, 116,
    105, 118, 105, 116, 121,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     75, 108, 140, 169, 234, 182, 192, 167,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_85e320f14a5d23e0 = b_85e320f14a5d23e0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_85e320f14a5d23e0[] = {
  &s_a7c0b6eaa98c6c4b,
};
static const uint16_t m_85e320f14a5d23e0[] = {0};
static const uint16_t i_85e320f14a5d23e0[] = {0};
const ::capnp::_::RawSchema s_85e320f14a5d23e0 = {
  0x85e320f14a5d23e0, b_85e320f14a5d23e0.words, 35, d_85e320f14a5d23e0, m_85e320f14a5d23e0,
  1, 1, i_85e320f14a5d23e0, nullptr, nullptr, { &s_85e320f14a5d23e0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_a93eadc9671ea08b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    139, 160,  30, 103, 201, 173,  62, 169,
     37,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
    115, 115, 105, 111, 110,  67, 111, 110,
    116, 101, 120, 116,  46,  97,  99, 116,
    105, 118, 105, 116, 121,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0, }
};
::capnp::word const* const bp_a93eadc9671ea08b = b_a93eadc9671ea08b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a93eadc9671ea08b = {
  0xa93eadc9671ea08b, b_a93eadc9671ea08b.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a93eadc9671ea08b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_f144a5e58889dafb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    251, 218, 137, 136, 229, 165,  68, 241,
     22,   0,   0,   0,   1,   0,   1,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  80, 101,
    114, 109, 105, 115, 115, 105, 111, 110,
     68, 101, 102,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 116, 108, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111,  98, 115, 111, 108, 101, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f144a5e58889dafb = b_f144a5e58889dafb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f144a5e58889dafb[] = {
  &s_8b5db772377be249,
};
static const uint16_t m_f144a5e58889dafb[] = {1, 3, 2, 0};
static const uint16_t i_f144a5e58889dafb[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_f144a5e58889dafb = {
  0xf144a5e58889dafb, b_f144a5e58889dafb.words, 81, d_f144a5e58889dafb, m_f144a5e58889dafb,
  1, 4, i_f144a5e58889dafb, nullptr, nullptr, { &s_f144a5e58889dafb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<116> b_cb3f7064eae4dc5a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     90, 220, 228, 234, 100, 112,  63, 203,
     22,   0,   0,   0,   1,   0,   1,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  82, 111,
    108, 101,  68, 101, 102,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 116, 108, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114,  98,  80, 104, 114,  97,
    115, 101,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 114, 109, 105, 115, 115, 105,
    111, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111,  98, 115, 111, 108, 101, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  97, 117, 108, 116,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cb3f7064eae4dc5a = b_cb3f7064eae4dc5a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cb3f7064eae4dc5a[] = {
  &s_8b5db772377be249,
};
static const uint16_t m_cb3f7064eae4dc5a[] = {5, 2, 4, 3, 0, 1};
static const uint16_t i_cb3f7064eae4dc5a[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_cb3f7064eae4dc5a = {
  0xcb3f7064eae4dc5a, b_cb3f7064eae4dc5a.words, 116, d_cb3f7064eae4dc5a, m_cb3f7064eae4dc5a,
  1, 6, i_cb3f7064eae4dc5a, nullptr, nullptr, { &s_cb3f7064eae4dc5a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<31> b_c05520c9b0994ad3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211,  74, 153, 176, 201,  32,  85, 192,
     22,   0,   0,   0,   3,   0,   0,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  71,   0,   0,   0,
     77,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 104,
     97, 114, 105, 110, 103,  76, 105, 110,
    107,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,  84,  54,   9,  86,  24, 147, 240,
    209, 202, 113,  70,   3,  39, 217, 154,
     17,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  80, 101, 116, 110,  97,
    109, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c05520c9b0994ad3 = b_c05520c9b0994ad3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c05520c9b0994ad3[] = {
  &s_9ad927034671cad1,
  &s_f0931856093654c1,
};
static const uint16_t m_c05520c9b0994ad3[] = {0};
const ::capnp::_::RawSchema s_c05520c9b0994ad3 = {
  0xc05520c9b0994ad3, b_c05520c9b0994ad3.words, 31, d_c05520c9b0994ad3, m_c05520c9b0994ad3,
  2, 1, nullptr, nullptr, nullptr, { &s_c05520c9b0994ad3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<19> b_f0931856093654c1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    193,  84,  54,   9,  86,  24, 147, 240,
     34,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 104,
     97, 114, 105, 110, 103,  76, 105, 110,
    107,  46, 103, 101, 116,  80, 101, 116,
    110,  97, 109, 101,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f0931856093654c1 = b_f0931856093654c1.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f0931856093654c1 = {
  0xf0931856093654c1, b_f0931856093654c1.words, 19, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f0931856093654c1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_9ad927034671cad1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 202, 113,  70,   3,  39, 217, 154,
     34,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 104,
     97, 114, 105, 110, 103,  76, 105, 110,
    107,  46, 103, 101, 116,  80, 101, 116,
    110,  97, 109, 101,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ad927034671cad1 = b_9ad927034671cad1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9ad927034671cad1[] = {
  &s_eaf255b498229199,
};
static const uint16_t m_9ad927034671cad1[] = {0};
static const uint16_t i_9ad927034671cad1[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_9ad927034671cad1[] = {
  { 16777216,  ::sandstorm::Assignable< ::sandstorm::LocalizedText>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_9ad927034671cad1 = {
  0x9ad927034671cad1, b_9ad927034671cad1.words, 47, d_9ad927034671cad1, m_9ad927034671cad1,
  1, 1, i_9ad927034671cad1, nullptr, nullptr, { &s_9ad927034671cad1, nullptr, bd_9ad927034671cad1, 0, sizeof(bd_9ad927034671cad1) / sizeof(bd_9ad927034671cad1[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_a4f82f764dc3fee8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232, 254, 195,  77, 118,  47, 248, 164,
     22,   0,   0,   0,   3,   0,   0,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  71,   0,   0,   0,
     97,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  86, 105,
    101, 119,  83, 104,  97, 114, 105, 110,
    103,  76, 105, 110, 107,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    181, 226, 232,  53, 190, 242,  32, 240,
      1,   0,   0,   0, 122,   0,   0,   0,
     82, 111, 108, 101,  65, 115, 115, 105,
    103, 110, 109, 101, 110, 116,   0,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 199,  36,  90, 214,  61,   8, 184,
    157, 243, 115, 222, 102, 150,  21, 157,
     17,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  82, 111, 108, 101,  65,
    115, 115, 105, 103, 110, 109, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    211,  74, 153, 176, 201,  32,  85, 192,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a4f82f764dc3fee8 = b_a4f82f764dc3fee8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a4f82f764dc3fee8[] = {
  &s_9d159666de73f39d,
  &s_b8083dd65a24c770,
  &s_c05520c9b0994ad3,
};
static const uint16_t m_a4f82f764dc3fee8[] = {0};
const ::capnp::_::RawSchema s_a4f82f764dc3fee8 = {
  0xa4f82f764dc3fee8, b_a4f82f764dc3fee8.words, 38, d_a4f82f764dc3fee8, m_a4f82f764dc3fee8,
  3, 1, nullptr, nullptr, nullptr, { &s_a4f82f764dc3fee8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<108> b_f020f2be35e8e2b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181, 226, 232,  53, 190, 242,  32, 240,
     38,   0,   0,   0,   1,   0,   1,   0,
    232, 254, 195,  77, 118,  47, 248, 164,
      2,   0,   7,   0,   0,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  86, 105,
    101, 119,  83, 104,  97, 114, 105, 110,
    103,  76, 105, 110, 107,  46,  82, 111,
    108, 101,  65, 115, 115, 105, 103, 110,
    109, 101, 110, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 108, 108,  65,  99,  99, 101, 115,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 108, 101,  73, 100,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100,  80, 101, 114, 109, 105,
    115, 115, 105, 111, 110, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 109, 111, 118, 101,  80, 101,
    114, 109, 105, 115, 115, 105, 111, 110,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f020f2be35e8e2b5 = b_f020f2be35e8e2b5.words;
#if !CAPNP_LITE
static const uint16_t m_f020f2be35e8e2b5[] = {3, 1, 0, 4, 2};
static const uint16_t i_f020f2be35e8e2b5[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_f020f2be35e8e2b5 = {
  0xf020f2be35e8e2b5, b_f020f2be35e8e2b5.words, 108, nullptr, m_f020f2be35e8e2b5,
  0, 5, i_f020f2be35e8e2b5, nullptr, nullptr, { &s_f020f2be35e8e2b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_b8083dd65a24c770 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    112, 199,  36,  90, 214,  61,   8, 184,
     38,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  86, 105,
    101, 119,  83, 104,  97, 114, 105, 110,
    103,  76, 105, 110, 107,  46, 103, 101,
    116,  82, 111, 108, 101,  65, 115, 115,
    105, 103, 110, 109, 101, 110, 116,  36,
     80,  97, 114,  97, 109, 115,   0,   0, }
};
::capnp::word const* const bp_b8083dd65a24c770 = b_b8083dd65a24c770.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b8083dd65a24c770 = {
  0xb8083dd65a24c770, b_b8083dd65a24c770.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b8083dd65a24c770, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_9d159666de73f39d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    157, 243, 115, 222, 102, 150,  21, 157,
     38,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  86, 105,
    101, 119,  83, 104,  97, 114, 105, 110,
    103,  76, 105, 110, 107,  46, 103, 101,
    116,  82, 111, 108, 101,  65, 115, 115,
    105, 103, 110, 109, 101, 110, 116,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 114,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    153, 145,  34, 152, 180,  85, 242, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  23,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    181, 226, 232,  53, 190, 242,  32, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9d159666de73f39d = b_9d159666de73f39d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9d159666de73f39d[] = {
  &s_eaf255b498229199,
};
static const uint16_t m_9d159666de73f39d[] = {0};
static const uint16_t i_9d159666de73f39d[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_9d159666de73f39d[] = {
  { 16777216,  ::sandstorm::Assignable< ::sandstorm::ViewSharingLink::RoleAssignment>::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_9d159666de73f39d = {
  0x9d159666de73f39d, b_9d159666de73f39d.words, 48, d_9d159666de73f39d, m_9d159666de73f39d,
  1, 1, i_9d159666de73f39d, nullptr, nullptr, { &s_9d159666de73f39d, nullptr, bd_9d159666de73f39d, 0, sizeof(bd_9d159666de73f39d) / sizeof(bd_9d159666de73f39d[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_b5fcc0e153671d68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104,  29, 103,  83, 225, 192, 252, 181,
     22,   0,   0,   0,   1,   0,   1,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  71, 114,
     97, 105, 110,  73, 110, 102, 111,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 112,  73, 100,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 112, 112,  86, 101, 114, 115, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 116, 108, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b5fcc0e153671d68 = b_b5fcc0e153671d68.words;
#if !CAPNP_LITE
static const uint16_t m_b5fcc0e153671d68[] = {0, 1, 2};
static const uint16_t i_b5fcc0e153671d68[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b5fcc0e153671d68 = {
  0xb5fcc0e153671d68, b_b5fcc0e153671d68.words, 64, nullptr, m_b5fcc0e153671d68,
  0, 3, i_b5fcc0e153671d68, nullptr, nullptr, { &s_b5fcc0e153671d68, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<44> b_affa789add8747b8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    184,  71, 135, 221, 154, 120, 250, 175,
     22,   0,   0,   0,   3,   0,   0,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  71,   0,   0,   0,
    113,   0,   0,   0,   7,   0,   0,   0,
    113,   0,   0,   0,  15,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  65, 112,
    112,  80, 101, 114, 115, 105, 115, 116,
    101, 110, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60, 157,   1, 216,  20, 110,  19, 240,
     63,  72, 235,  78,  75, 163,  54, 186,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
    115,  97, 118, 101,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    184,  71, 135, 221, 154, 120, 250, 175,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    184,  71, 135, 221, 154, 120, 250, 175,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
     65, 112, 112,  79,  98, 106, 101,  99,
    116,  73, 100,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_affa789add8747b8 = b_affa789add8747b8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_affa789add8747b8[] = {
  &s_ba36a34b4eeb483f,
  &s_f0136e14d8019d3c,
};
static const uint16_t m_affa789add8747b8[] = {0};
const ::capnp::_::RawBrandedSchema::Dependency bd_affa789add8747b8[] = {
  { 33554432,  ::sandstorm::AppPersistent< ::capnp::AnyPointer>::SaveParams::_capnpPrivate::brand },
  { 50331648,  ::sandstorm::AppPersistent< ::capnp::AnyPointer>::SaveResults::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_affa789add8747b8 = {
  0xaffa789add8747b8, b_affa789add8747b8.words, 44, d_affa789add8747b8, m_affa789add8747b8,
  2, 1, nullptr, nullptr, nullptr, { &s_affa789add8747b8, nullptr, bd_affa789add8747b8, 0, sizeof(bd_affa789add8747b8) / sizeof(bd_affa789add8747b8[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_f0136e14d8019d3c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60, 157,   1, 216,  20, 110,  19, 240,
     36,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  65, 112,
    112,  80, 101, 114, 115, 105, 115, 116,
    101, 110, 116,  46, 115,  97, 118, 101,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_f0136e14d8019d3c = b_f0136e14d8019d3c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f0136e14d8019d3c = {
  0xf0136e14d8019d3c, b_f0136e14d8019d3c.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f0136e14d8019d3c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_ba36a34b4eeb483f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     63,  72, 235,  78,  75, 163,  54, 186,
     36,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  65, 112,
    112,  80, 101, 114, 115, 105, 115, 116,
    101, 110, 116,  46, 115,  97, 118, 101,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    184,  71, 135, 221, 154, 120, 250, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97,  98, 101, 108,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 226, 123,  55, 114, 183,  93, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ba36a34b4eeb483f = b_ba36a34b4eeb483f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ba36a34b4eeb483f[] = {
  &s_8b5db772377be249,
};
static const uint16_t m_ba36a34b4eeb483f[] = {1, 0};
static const uint16_t i_ba36a34b4eeb483f[] = {0, 1};
const ::capnp::_::RawSchema s_ba36a34b4eeb483f = {
  0xba36a34b4eeb483f, b_ba36a34b4eeb483f.words, 51, d_ba36a34b4eeb483f, m_ba36a34b4eeb483f,
  1, 2, i_ba36a34b4eeb483f, nullptr, nullptr, { &s_ba36a34b4eeb483f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_c277e9822ae2c8fc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    252, 200, 226,  42, 130, 233, 119, 194,
     22,   0,   0,   0,   3,   0,   0,   0,
     74, 251, 196, 207,  99,  20, 217, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 135,   0,   0,   0,
    189,   0,   0,   0,  23,   0,   0,   0,
    197,   0,   0,   0,  15,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    105, 110,  86, 105, 101, 119,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25, 100, 252, 125, 224,  45, 214, 154,
     53, 174, 187,  35, 191, 206, 239, 153,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   0,   0,   1,   0,
     60,   0,   0,   0,   0,   0,   1,   0,
     77,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    115, 125, 193, 237,  13, 158,  81, 140,
     53, 250,  20, 157, 230, 217,  16, 146,
     65,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   0,   0,   1,   0,
     76,   0,   0,   0,   0,   0,   1,   0,
     93,   0,   0,   0,   7,   0,   0,   0,
    114, 101, 115, 116, 111, 114, 101,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    252, 200, 226,  42, 130, 233, 119, 194,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    252, 200, 226,  42, 130, 233, 119, 194,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    100, 114, 111, 112,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    252, 200, 226,  42, 130, 233, 119, 194,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    252, 200, 226,  42, 130, 233, 119, 194,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    231, 226, 103, 234, 152, 215, 180, 219,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
     65, 112, 112,  79,  98, 106, 101,  99,
    116,  73, 100,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c277e9822ae2c8fc = b_c277e9822ae2c8fc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c277e9822ae2c8fc[] = {
  &s_8c519e0dedc17d73,
  &s_9210d9e69d14fa35,
  &s_99efcebf23bbae35,
  &s_9ad62de07dfc6419,
  &s_dbb4d798ea67e2e7,
};
static const uint16_t m_c277e9822ae2c8fc[] = {1, 0};
const ::capnp::_::RawBrandedSchema::Dependency bd_c277e9822ae2c8fc[] = {
  { 33554432,  ::sandstorm::MainView< ::capnp::AnyPointer>::RestoreParams::_capnpPrivate::brand },
  { 33554433,  ::sandstorm::MainView< ::capnp::AnyPointer>::DropParams::_capnpPrivate::brand },
  { 50331648,  ::sandstorm::MainView< ::capnp::AnyPointer>::RestoreResults::_capnpPrivate::brand },
  { 50331649,  ::sandstorm::MainView< ::capnp::AnyPointer>::DropResults::_capnpPrivate::brand },
};
const ::capnp::_::RawSchema s_c277e9822ae2c8fc = {
  0xc277e9822ae2c8fc, b_c277e9822ae2c8fc.words, 65, d_c277e9822ae2c8fc, m_c277e9822ae2c8fc,
  5, 2, nullptr, nullptr, nullptr, { &s_c277e9822ae2c8fc, nullptr, bd_c277e9822ae2c8fc, 0, sizeof(bd_c277e9822ae2c8fc) / sizeof(bd_c277e9822ae2c8fc[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_9ad62de07dfc6419 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 100, 252, 125, 224,  45, 214, 154,
     31,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    105, 110,  86, 105, 101, 119,  46, 114,
    101, 115, 116, 111, 114, 101,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    252, 200, 226,  42, 130, 233, 119, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ad62de07dfc6419 = b_9ad62de07dfc6419.words;
#if !CAPNP_LITE
static const uint16_t m_9ad62de07dfc6419[] = {0};
static const uint16_t i_9ad62de07dfc6419[] = {0};
const ::capnp::_::RawSchema s_9ad62de07dfc6419 = {
  0x9ad62de07dfc6419, b_9ad62de07dfc6419.words, 35, nullptr, m_9ad62de07dfc6419,
  0, 1, i_9ad62de07dfc6419, nullptr, nullptr, { &s_9ad62de07dfc6419, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_99efcebf23bbae35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53, 174, 187,  35, 191, 206, 239, 153,
     31,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    105, 110,  86, 105, 101, 119,  46, 114,
    101, 115, 116, 111, 114, 101,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 112,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_99efcebf23bbae35 = b_99efcebf23bbae35.words;
#if !CAPNP_LITE
static const uint16_t m_99efcebf23bbae35[] = {0};
static const uint16_t i_99efcebf23bbae35[] = {0};
const ::capnp::_::RawSchema s_99efcebf23bbae35 = {
  0x99efcebf23bbae35, b_99efcebf23bbae35.words, 34, nullptr, m_99efcebf23bbae35,
  0, 1, i_99efcebf23bbae35, nullptr, nullptr, { &s_99efcebf23bbae35, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_8c519e0dedc17d73 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115, 125, 193, 237,  13, 158,  81, 140,
     31,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    105, 110,  86, 105, 101, 119,  46, 100,
    114, 111, 112,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    252, 200, 226,  42, 130, 233, 119, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8c519e0dedc17d73 = b_8c519e0dedc17d73.words;
#if !CAPNP_LITE
static const uint16_t m_8c519e0dedc17d73[] = {0};
static const uint16_t i_8c519e0dedc17d73[] = {0};
const ::capnp::_::RawSchema s_8c519e0dedc17d73 = {
  0x8c519e0dedc17d73, b_8c519e0dedc17d73.words, 35, nullptr, m_8c519e0dedc17d73,
  0, 1, i_8c519e0dedc17d73, nullptr, nullptr, { &s_8c519e0dedc17d73, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_9210d9e69d14fa35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53, 250,  20, 157, 230, 217,  16, 146,
     31,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 103, 114,  97, 105, 110,  46,
     99,  97, 112, 110, 112,  58,  77,  97,
    105, 110,  86, 105, 101, 119,  46, 100,
    114, 111, 112,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9210d9e69d14fa35 = b_9210d9e69d14fa35.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9210d9e69d14fa35 = {
  0x9210d9e69d14fa35, b_9210d9e69d14fa35.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9210d9e69d14fa35, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sandstorm {

#if !CAPNP_LITE
::capnp::Request< ::sandstorm::UiView::GetViewInfoParams,  ::sandstorm::UiView::ViewInfo>
UiView::Client::getViewInfoRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::UiView::GetViewInfoParams,  ::sandstorm::UiView::ViewInfo>(
      0xdbb4d798ea67e2e7ull, 0, sizeHint);
}
::kj::Promise<void> UiView::Server::getViewInfo(GetViewInfoContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:UiView", "getViewInfo",
      0xdbb4d798ea67e2e7ull, 0);
}
::capnp::Request< ::sandstorm::UiView::NewSessionParams,  ::sandstorm::UiView::NewSessionResults>
UiView::Client::newSessionRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::UiView::NewSessionParams,  ::sandstorm::UiView::NewSessionResults>(
      0xdbb4d798ea67e2e7ull, 1, sizeHint);
}
::kj::Promise<void> UiView::Server::newSession(NewSessionContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:UiView", "newSession",
      0xdbb4d798ea67e2e7ull, 1);
}
::capnp::Request< ::sandstorm::UiView::NewRequestSessionParams,  ::sandstorm::UiView::NewRequestSessionResults>
UiView::Client::newRequestSessionRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::UiView::NewRequestSessionParams,  ::sandstorm::UiView::NewRequestSessionResults>(
      0xdbb4d798ea67e2e7ull, 2, sizeHint);
}
::kj::Promise<void> UiView::Server::newRequestSession(NewRequestSessionContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:UiView", "newRequestSession",
      0xdbb4d798ea67e2e7ull, 2);
}
::capnp::Request< ::sandstorm::UiView::NewOfferSessionParams,  ::sandstorm::UiView::NewOfferSessionResults>
UiView::Client::newOfferSessionRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::UiView::NewOfferSessionParams,  ::sandstorm::UiView::NewOfferSessionResults>(
      0xdbb4d798ea67e2e7ull, 3, sizeHint);
}
::kj::Promise<void> UiView::Server::newOfferSession(NewOfferSessionContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:UiView", "newOfferSession",
      0xdbb4d798ea67e2e7ull, 3);
}
::kj::Promise<void> UiView::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xdbb4d798ea67e2e7ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/grain.capnp:UiView", interfaceId);
  }
}
::kj::Promise<void> UiView::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return getViewInfo(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::UiView::GetViewInfoParams,  ::sandstorm::UiView::ViewInfo>(context));
    case 1:
      return newSession(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::UiView::NewSessionParams,  ::sandstorm::UiView::NewSessionResults>(context));
    case 2:
      return newRequestSession(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::UiView::NewRequestSessionParams,  ::sandstorm::UiView::NewRequestSessionResults>(context));
    case 3:
      return newOfferSession(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::UiView::NewOfferSessionParams,  ::sandstorm::UiView::NewOfferSessionResults>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/grain.capnp:UiView",
          0xdbb4d798ea67e2e7ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// UiView
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::ViewInfo
constexpr uint16_t UiView::ViewInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::ViewInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::ViewInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::ViewInfo::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::ViewInfo::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::PowerboxTag
constexpr uint16_t UiView::PowerboxTag::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::PowerboxTag::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::PowerboxTag::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::PowerboxTag::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::PowerboxTag::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::GetViewInfoParams
constexpr uint16_t UiView::GetViewInfoParams::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::GetViewInfoParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::GetViewInfoParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::GetViewInfoParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::GetViewInfoParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::NewSessionParams
constexpr uint16_t UiView::NewSessionParams::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::NewSessionParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::NewSessionParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::NewSessionParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::NewSessionParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::NewSessionResults
constexpr uint16_t UiView::NewSessionResults::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::NewSessionResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::NewSessionResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::NewSessionResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::NewSessionResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::NewRequestSessionParams
constexpr uint16_t UiView::NewRequestSessionParams::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::NewRequestSessionParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::NewRequestSessionParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::NewRequestSessionParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::NewRequestSessionParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::NewRequestSessionResults
constexpr uint16_t UiView::NewRequestSessionResults::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::NewRequestSessionResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::NewRequestSessionResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::NewRequestSessionResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::NewRequestSessionResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::NewOfferSessionParams
constexpr uint16_t UiView::NewOfferSessionParams::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::NewOfferSessionParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::NewOfferSessionParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::NewOfferSessionParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::NewOfferSessionParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// UiView::NewOfferSessionResults
constexpr uint16_t UiView::NewOfferSessionResults::_capnpPrivate::dataWordSize;
constexpr uint16_t UiView::NewOfferSessionResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind UiView::NewOfferSessionResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiView::NewOfferSessionResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiView::NewOfferSessionResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::kj::Promise<void> UiSession::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xf63241ee58b5166full:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/grain.capnp:UiSession", interfaceId);
  }
}
::kj::Promise<void> UiSession::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/grain.capnp:UiSession",
          0xf63241ee58b5166full, methodId);
  }
}
#endif  // !CAPNP_LITE

// UiSession
#if !CAPNP_LITE
constexpr ::capnp::Kind UiSession::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UiSession::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UiSession::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::sandstorm::SessionContext::GetSharedPermissionsParams,  ::sandstorm::SessionContext::GetSharedPermissionsResults>
SessionContext::Client::getSharedPermissionsRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::GetSharedPermissionsParams,  ::sandstorm::SessionContext::GetSharedPermissionsResults>(
      0xbf3e401d5a63f336ull, 0, sizeHint);
}
::kj::Promise<void> SessionContext::Server::getSharedPermissions(GetSharedPermissionsContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "getSharedPermissions",
      0xbf3e401d5a63f336ull, 0);
}
::capnp::Request< ::sandstorm::SessionContext::TieToUserParams,  ::sandstorm::SessionContext::TieToUserResults>
SessionContext::Client::tieToUserRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::TieToUserParams,  ::sandstorm::SessionContext::TieToUserResults>(
      0xbf3e401d5a63f336ull, 1, sizeHint);
}
::kj::Promise<void> SessionContext::Server::tieToUser(TieToUserContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "tieToUser",
      0xbf3e401d5a63f336ull, 1);
}
::capnp::Request< ::sandstorm::SessionContext::OfferParams,  ::sandstorm::SessionContext::OfferResults>
SessionContext::Client::offerRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::OfferParams,  ::sandstorm::SessionContext::OfferResults>(
      0xbf3e401d5a63f336ull, 2, sizeHint);
}
::kj::Promise<void> SessionContext::Server::offer(OfferContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "offer",
      0xbf3e401d5a63f336ull, 2);
}
::capnp::Request< ::sandstorm::SessionContext::RequestParams,  ::sandstorm::SessionContext::RequestResults>
SessionContext::Client::requestRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::RequestParams,  ::sandstorm::SessionContext::RequestResults>(
      0xbf3e401d5a63f336ull, 3, sizeHint);
}
::kj::Promise<void> SessionContext::Server::request(RequestContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "request",
      0xbf3e401d5a63f336ull, 3);
}
::capnp::Request< ::sandstorm::SessionContext::FulfillRequestParams,  ::sandstorm::SessionContext::FulfillRequestResults>
SessionContext::Client::fulfillRequestRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::FulfillRequestParams,  ::sandstorm::SessionContext::FulfillRequestResults>(
      0xbf3e401d5a63f336ull, 4, sizeHint);
}
::kj::Promise<void> SessionContext::Server::fulfillRequest(FulfillRequestContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "fulfillRequest",
      0xbf3e401d5a63f336ull, 4);
}
::capnp::Request< ::sandstorm::SessionContext::CloseParams,  ::sandstorm::SessionContext::CloseResults>
SessionContext::Client::closeRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::CloseParams,  ::sandstorm::SessionContext::CloseResults>(
      0xbf3e401d5a63f336ull, 5, sizeHint);
}
::kj::Promise<void> SessionContext::Server::close(CloseContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "close",
      0xbf3e401d5a63f336ull, 5);
}
::capnp::Request< ::sandstorm::SessionContext::OpenViewParams,  ::sandstorm::SessionContext::OpenViewResults>
SessionContext::Client::openViewRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::OpenViewParams,  ::sandstorm::SessionContext::OpenViewResults>(
      0xbf3e401d5a63f336ull, 6, sizeHint);
}
::kj::Promise<void> SessionContext::Server::openView(OpenViewContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "openView",
      0xbf3e401d5a63f336ull, 6);
}
::capnp::Request< ::sandstorm::SessionContext::ClaimRequestParams,  ::sandstorm::SessionContext::ClaimRequestResults>
SessionContext::Client::claimRequestRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::ClaimRequestParams,  ::sandstorm::SessionContext::ClaimRequestResults>(
      0xbf3e401d5a63f336ull, 7, sizeHint);
}
::kj::Promise<void> SessionContext::Server::claimRequest(ClaimRequestContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "claimRequest",
      0xbf3e401d5a63f336ull, 7);
}
::capnp::Request< ::sandstorm::SessionContext::ActivityParams,  ::sandstorm::SessionContext::ActivityResults>
SessionContext::Client::activityRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SessionContext::ActivityParams,  ::sandstorm::SessionContext::ActivityResults>(
      0xbf3e401d5a63f336ull, 8, sizeHint);
}
::kj::Promise<void> SessionContext::Server::activity(ActivityContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SessionContext", "activity",
      0xbf3e401d5a63f336ull, 8);
}
::kj::Promise<void> SessionContext::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xbf3e401d5a63f336ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/grain.capnp:SessionContext", interfaceId);
  }
}
::kj::Promise<void> SessionContext::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return getSharedPermissions(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::GetSharedPermissionsParams,  ::sandstorm::SessionContext::GetSharedPermissionsResults>(context));
    case 1:
      return tieToUser(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::TieToUserParams,  ::sandstorm::SessionContext::TieToUserResults>(context));
    case 2:
      return offer(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::OfferParams,  ::sandstorm::SessionContext::OfferResults>(context));
    case 3:
      return request(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::RequestParams,  ::sandstorm::SessionContext::RequestResults>(context));
    case 4:
      return fulfillRequest(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::FulfillRequestParams,  ::sandstorm::SessionContext::FulfillRequestResults>(context));
    case 5:
      return close(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::CloseParams,  ::sandstorm::SessionContext::CloseResults>(context));
    case 6:
      return openView(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::OpenViewParams,  ::sandstorm::SessionContext::OpenViewResults>(context));
    case 7:
      return claimRequest(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::ClaimRequestParams,  ::sandstorm::SessionContext::ClaimRequestResults>(context));
    case 8:
      return activity(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SessionContext::ActivityParams,  ::sandstorm::SessionContext::ActivityResults>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/grain.capnp:SessionContext",
          0xbf3e401d5a63f336ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// SessionContext
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::GetSharedPermissionsParams
constexpr uint16_t SessionContext::GetSharedPermissionsParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::GetSharedPermissionsParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::GetSharedPermissionsParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::GetSharedPermissionsParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::GetSharedPermissionsParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::GetSharedPermissionsResults
constexpr uint16_t SessionContext::GetSharedPermissionsResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::GetSharedPermissionsResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::GetSharedPermissionsResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::GetSharedPermissionsResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::GetSharedPermissionsResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::TieToUserParams
constexpr uint16_t SessionContext::TieToUserParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::TieToUserParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::TieToUserParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::TieToUserParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::TieToUserParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::TieToUserResults
constexpr uint16_t SessionContext::TieToUserResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::TieToUserResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::TieToUserResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::TieToUserResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::TieToUserResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::OfferParams
constexpr uint16_t SessionContext::OfferParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::OfferParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::OfferParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::OfferParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::OfferParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::OfferResults
constexpr uint16_t SessionContext::OfferResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::OfferResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::OfferResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::OfferResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::OfferResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::RequestParams
constexpr uint16_t SessionContext::RequestParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::RequestParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::RequestParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::RequestParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::RequestParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::RequestResults
constexpr uint16_t SessionContext::RequestResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::RequestResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::RequestResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::RequestResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::RequestResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::FulfillRequestParams
constexpr uint16_t SessionContext::FulfillRequestParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::FulfillRequestParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::FulfillRequestParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::FulfillRequestParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::FulfillRequestParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::FulfillRequestResults
constexpr uint16_t SessionContext::FulfillRequestResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::FulfillRequestResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::FulfillRequestResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::FulfillRequestResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::FulfillRequestResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::CloseParams
constexpr uint16_t SessionContext::CloseParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::CloseParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::CloseParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::CloseParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::CloseParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::CloseResults
constexpr uint16_t SessionContext::CloseResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::CloseResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::CloseResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::CloseResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::CloseResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::OpenViewParams
constexpr uint16_t SessionContext::OpenViewParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::OpenViewParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::OpenViewParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::OpenViewParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::OpenViewParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::OpenViewResults
constexpr uint16_t SessionContext::OpenViewResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::OpenViewResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::OpenViewResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::OpenViewResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::OpenViewResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::ClaimRequestParams
constexpr uint16_t SessionContext::ClaimRequestParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::ClaimRequestParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::ClaimRequestParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::ClaimRequestParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::ClaimRequestParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::ClaimRequestResults
constexpr uint16_t SessionContext::ClaimRequestResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::ClaimRequestResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::ClaimRequestResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::ClaimRequestResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::ClaimRequestResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::ActivityParams
constexpr uint16_t SessionContext::ActivityParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::ActivityParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::ActivityParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::ActivityParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::ActivityParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SessionContext::ActivityResults
constexpr uint16_t SessionContext::ActivityResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SessionContext::ActivityResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SessionContext::ActivityResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SessionContext::ActivityResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SessionContext::ActivityResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// PermissionDef
constexpr uint16_t PermissionDef::_capnpPrivate::dataWordSize;
constexpr uint16_t PermissionDef::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PermissionDef::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PermissionDef::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PermissionDef::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RoleDef
constexpr uint16_t RoleDef::_capnpPrivate::dataWordSize;
constexpr uint16_t RoleDef::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind RoleDef::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RoleDef::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RoleDef::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::sandstorm::SharingLink::GetPetnameParams,  ::sandstorm::SharingLink::GetPetnameResults>
SharingLink::Client::getPetnameRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::SharingLink::GetPetnameParams,  ::sandstorm::SharingLink::GetPetnameResults>(
      0xc05520c9b0994ad3ull, 0, sizeHint);
}
::kj::Promise<void> SharingLink::Server::getPetname(GetPetnameContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:SharingLink", "getPetname",
      0xc05520c9b0994ad3ull, 0);
}
::kj::Promise<void> SharingLink::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xc05520c9b0994ad3ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/grain.capnp:SharingLink", interfaceId);
  }
}
::kj::Promise<void> SharingLink::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return getPetname(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::SharingLink::GetPetnameParams,  ::sandstorm::SharingLink::GetPetnameResults>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/grain.capnp:SharingLink",
          0xc05520c9b0994ad3ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// SharingLink
#if !CAPNP_LITE
constexpr ::capnp::Kind SharingLink::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharingLink::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SharingLink::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SharingLink::GetPetnameParams
constexpr uint16_t SharingLink::GetPetnameParams::_capnpPrivate::dataWordSize;
constexpr uint16_t SharingLink::GetPetnameParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SharingLink::GetPetnameParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharingLink::GetPetnameParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SharingLink::GetPetnameParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SharingLink::GetPetnameResults
constexpr uint16_t SharingLink::GetPetnameResults::_capnpPrivate::dataWordSize;
constexpr uint16_t SharingLink::GetPetnameResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SharingLink::GetPetnameResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SharingLink::GetPetnameResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SharingLink::GetPetnameResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::sandstorm::ViewSharingLink::GetRoleAssignmentParams,  ::sandstorm::ViewSharingLink::GetRoleAssignmentResults>
ViewSharingLink::Client::getRoleAssignmentRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::ViewSharingLink::GetRoleAssignmentParams,  ::sandstorm::ViewSharingLink::GetRoleAssignmentResults>(
      0xa4f82f764dc3fee8ull, 0, sizeHint);
}
::kj::Promise<void> ViewSharingLink::Server::getRoleAssignment(GetRoleAssignmentContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/grain.capnp:ViewSharingLink", "getRoleAssignment",
      0xa4f82f764dc3fee8ull, 0);
}
::kj::Promise<void> ViewSharingLink::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xa4f82f764dc3fee8ull:
      return dispatchCallInternal(methodId, context);
    case 0xc05520c9b0994ad3ull:
      return  ::sandstorm::SharingLink::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/grain.capnp:ViewSharingLink", interfaceId);
  }
}
::kj::Promise<void> ViewSharingLink::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return getRoleAssignment(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::ViewSharingLink::GetRoleAssignmentParams,  ::sandstorm::ViewSharingLink::GetRoleAssignmentResults>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/grain.capnp:ViewSharingLink",
          0xa4f82f764dc3fee8ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// ViewSharingLink
#if !CAPNP_LITE
constexpr ::capnp::Kind ViewSharingLink::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ViewSharingLink::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ViewSharingLink::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ViewSharingLink::RoleAssignment
constexpr uint16_t ViewSharingLink::RoleAssignment::_capnpPrivate::dataWordSize;
constexpr uint16_t ViewSharingLink::RoleAssignment::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ViewSharingLink::RoleAssignment::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ViewSharingLink::RoleAssignment::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ViewSharingLink::RoleAssignment::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ViewSharingLink::GetRoleAssignmentParams
constexpr uint16_t ViewSharingLink::GetRoleAssignmentParams::_capnpPrivate::dataWordSize;
constexpr uint16_t ViewSharingLink::GetRoleAssignmentParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ViewSharingLink::GetRoleAssignmentParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ViewSharingLink::GetRoleAssignmentParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ViewSharingLink::GetRoleAssignmentParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ViewSharingLink::GetRoleAssignmentResults
constexpr uint16_t ViewSharingLink::GetRoleAssignmentResults::_capnpPrivate::dataWordSize;
constexpr uint16_t ViewSharingLink::GetRoleAssignmentResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ViewSharingLink::GetRoleAssignmentResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ViewSharingLink::GetRoleAssignmentResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ViewSharingLink::GetRoleAssignmentResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// GrainInfo
constexpr uint16_t GrainInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t GrainInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GrainInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GrainInfo::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* GrainInfo::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

