// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: web-session.capnp

#include "web-session.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<51> b_bc353583a3731ade = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    222,  26, 115, 163, 131,  53,  53, 188,
     28,   0,   0,   0,   1,   0,   1,   0,
     50, 107, 117,  26,  47,  15, 203, 168,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  72, 116, 116, 112,
     83, 116,  97, 116, 117, 115,  68, 101,
    115,  99, 114, 105, 112, 116, 111, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 116, 108, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc353583a3731ade = b_bc353583a3731ade.words;
#if !CAPNP_LITE
static const uint16_t m_bc353583a3731ade[] = {0, 1};
static const uint16_t i_bc353583a3731ade[] = {0, 1};
const ::capnp::_::RawSchema s_bc353583a3731ade = {
  0xbc353583a3731ade, b_bc353583a3731ade.words, 51, nullptr, m_bc353583a3731ade,
  0, 2, i_bc353583a3731ade, nullptr, nullptr, { &s_bc353583a3731ade, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<22> b_af480a0c6cab8887 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
     28,   0,   0,   0,   5,   0,   8,   0,
     50, 107, 117,  26,  47,  15, 203, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   3,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58, 104, 116, 116, 112,
     83, 116,  97, 116, 117, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    222,  26, 115, 163, 131,  53,  53, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_af480a0c6cab8887 = b_af480a0c6cab8887.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_af480a0c6cab8887 = {
  0xaf480a0c6cab8887, b_af480a0c6cab8887.words, 22, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_af480a0c6cab8887, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_9ea7265092c11606 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      6,  22, 193, 146,  80,  38, 167, 158,
     28,   0,   0,   0,   4,   0,   0,   0,
     50, 107, 117,  26,  47,  15, 203, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58, 104, 116, 116, 112,
     83, 116,  97, 116, 117, 115,  65, 110,
    110, 111, 116,  97, 116, 105, 111, 110,
     73, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ea7265092c11606 = b_9ea7265092c11606.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9ea7265092c11606 = {
  0x9ea7265092c11606, b_9ea7265092c11606.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9ea7265092c11606, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<254> b_a50711a14d35a8ce = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
     28,   0,   0,   0,   3,   0,   0,   0,
     50, 107, 117,  26,  47,  15, 203, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0, 215,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0, 135,   4,   0,   0,
    193,   3,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,   0,   0,
     52,   0,   0,   0,   1,   0,   1,   0,
    150, 176, 246,  87, 151,  27,   5, 215,
     97,   0,   0,   0,  58,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
     93,   0,   0,   0,  66,   0,   0,   0,
     62, 182, 106,  65, 172,  46, 216, 183,
     89,   0,   0,   0,  98,   0,   0,   0,
     50, 145, 101,  57, 254, 241, 175, 215,
     89,   0,   0,   0,  90,   0,   0,   0,
     88, 101, 193, 185, 229,  11,  44, 210,
     89,   0,   0,   0,  42,   0,   0,   0,
     67,   2, 182, 217, 190, 101, 125, 168,
     85,   0,   0,   0,  58,   0,   0,   0,
    249, 193, 124,  98,  27,   2, 249, 170,
     81,   0,   0,   0, 106,   0,   0,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
     81,   0,   0,   0,  74,   0,   0,   0,
    159, 106, 154, 246, 243, 194, 255, 153,
     81,   0,   0,   0, 114,   0,   0,   0,
      7,  74,  87,  94,  29, 252,   1, 240,
     81,   0,   0,   0, 130,   0,   0,   0,
    133,  72, 134,   0, 227,  33, 123, 179,
     81,   0,   0,   0,  98,   0,   0,   0,
    214, 115,  78, 236, 190,   6, 255, 233,
     81,   0,   0,   0,  66,   0,   0,   0,
     27, 164, 179, 153,  69, 196, 156, 179,
     77,   0,   0,   0, 114,   0,   0,   0,
     80,  97, 114,  97, 109, 115,   0,   0,
     67, 111, 110, 116, 101, 120, 116,   0,
     80, 111, 115, 116,  67, 111, 110, 116,
    101, 110, 116,   0,   0,   0,   0,   0,
     80, 117, 116,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     69,  84,  97, 103,   0,   0,   0,   0,
     67, 111, 111, 107, 105, 101,   0,   0,
     65,  99,  99, 101, 112, 116, 101, 100,
     84, 121, 112, 101,   0,   0,   0,   0,
     82, 101, 115, 112, 111, 110, 115, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     82, 101, 113, 117, 101, 115, 116,  83,
    116, 114, 101,  97, 109,   0,   0,   0,
     87, 101,  98,  83, 111,  99, 107, 101,
    116,  83, 116, 114, 101,  97, 109,   0,
     67,  97,  99, 104, 101,  80, 111, 108,
    105,  99, 121,   0,   0,   0,   0,   0,
     79, 112, 116, 105, 111, 110, 115,   0,
     80, 114, 111, 112, 102, 105, 110, 100,
     68, 101, 112, 116, 104,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40, 131, 119, 244, 221, 172, 148, 205,
    131, 156,  66, 181, 108, 172, 147, 129,
     49,   2,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   2,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    253, 202, 193,  98,  10, 242, 110, 170,
    131, 156,  66, 181, 108, 172, 147, 129,
     25,   2,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   2,   0,   0,   7,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    121,  94, 147, 157, 177, 201, 201, 199,
     43,  57,  27, 211, 118,  18,  86, 204,
      1,   2,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   1,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    110,  89,   8,  86,  41, 135, 197, 241,
    131, 156,  66, 181, 108, 172, 147, 129,
    237,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   1,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    117,  25, 123, 178, 255, 107, 167, 235,
    131, 156,  66, 181, 108, 172, 147, 129,
    213,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   1,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    192, 177,  67, 206, 255, 122, 106, 210,
      5,  98,  38, 220,  83,   6,  14, 191,
    189,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   1,   0,   0,   7,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     57,  89,  16, 167, 118, 224, 236, 161,
     84,  68, 157, 152, 191,  20,  13, 198,
    169,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   1,   0,   0,   7,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     46, 179, 240, 136, 222,  88,  45, 202,
    131, 156,  66, 181, 108, 172, 147, 129,
    149,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   1,   0,   0,   7,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    174, 136,  64,   5, 126,  46,  88, 158,
    131, 156,  66, 181, 108, 172, 147, 129,
    129,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0,   7,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    182, 248,  69, 100,  65, 162,  77, 246,
    131, 156,  66, 181, 108, 172, 147, 129,
    109,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   1,   0,   0,   7,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    125, 224, 191, 130,  58, 103,  57, 129,
    131, 156,  66, 181, 108, 172, 147, 129,
     85,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   1,   0,   0,   7,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      9, 166, 118,  85, 107,   6, 245, 129,
    131, 156,  66, 181, 108, 172, 147, 129,
     61,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0,   7,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
     10,  87,  89,  19,  15,  40, 152, 147,
    131, 156,  66, 181, 108, 172, 147, 129,
     37,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0,   7,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    188, 125, 185, 145, 167, 198, 132, 214,
    131, 156,  66, 181, 108, 172, 147, 129,
     13,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,   7,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    141, 158,  17,  32,  62, 195, 121, 159,
    131, 156,  66, 181, 108, 172, 147, 129,
    245,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,   7,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    174,  96, 252, 142, 166,  62, 100, 192,
    131, 156,  66, 181, 108, 172, 147, 129,
    221,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,   7,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    126, 234,  84, 172, 142, 126, 228, 210,
    214, 115,  78, 236, 190,   6, 255, 233,
    197,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    128, 168,  44, 194, 237, 149, 239, 173,
    131, 156,  66, 181, 108, 172, 147, 129,
    173,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    112, 111, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    111, 112, 101, 110,  87, 101,  98,  83,
    111,  99, 107, 101, 116,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    112, 117, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    100, 101, 108, 101, 116, 101,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    112, 111, 115, 116,  83, 116, 114, 101,
     97, 109, 105, 110, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    112, 117, 116,  83, 116, 114, 101,  97,
    109, 105, 110, 103,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    112, 114, 111, 112, 102, 105, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    112, 114, 111, 112, 112,  97, 116,  99,
    104,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    109, 107,  99, 111, 108,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 111, 112, 121,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    109, 111, 118, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    108, 111,  99, 107,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    117, 110, 108, 111,  99, 107,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     97,  99, 108,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101, 112, 111, 114, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    111, 112, 116, 105, 111, 110, 115,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    112,  97, 116,  99, 104,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    111,  22, 181,  88, 238,  65,  50, 246,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a50711a14d35a8ce = b_a50711a14d35a8ce.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a50711a14d35a8ce[] = {
  &s_8139673a82bfe07d,
  &s_8193ac6cb5429c83,
  &s_81f5066b5576a609,
  &s_9398280f1359570a,
  &s_9e582e7e054088ae,
  &s_9f79c33e20119e8d,
  &s_a1ece076a7105939,
  &s_aa6ef20a62c1cafd,
  &s_adef95edc22ca880,
  &s_bf0e0653dc266205,
  &s_c0643ea68efc60ae,
  &s_c60d14bf989d4454,
  &s_c7c9c9b19d935e79,
  &s_ca2d58de88f0b32e,
  &s_cc561276d31b392b,
  &s_cd94acddf4778328,
  &s_d26a7affce43b1c0,
  &s_d2e47e8eac54ea7e,
  &s_d684c6a791b97dbc,
  &s_e9ff06beec4e73d6,
  &s_eba76bffb27b1975,
  &s_f1c587295608596e,
  &s_f63241ee58b5166f,
  &s_f64da2416445f8b6,
};
static const uint16_t m_a50711a14d35a8ce[] = {14, 10, 4, 0, 12, 9, 11, 2, 16, 17, 1, 5, 7, 8, 3, 6, 15, 13};
const ::capnp::_::RawSchema s_a50711a14d35a8ce = {
  0xa50711a14d35a8ce, b_a50711a14d35a8ce.words, 254, d_a50711a14d35a8ce, m_a50711a14d35a8ce,
  24, 18, nullptr, nullptr, nullptr, { &s_a50711a14d35a8ce, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<73> b_d7051b9757f6b096 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    150, 176, 246,  87, 151,  27,   5, 215,
     39,   0,   0,   0,   1,   0,   0,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
     98,  97, 115, 101,  80,  97, 116, 104,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114,  65, 103, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 112, 116,  97,  98,
    108, 101,  76,  97, 110, 103, 117,  97,
    103, 101, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d7051b9757f6b096 = b_d7051b9757f6b096.words;
#if !CAPNP_LITE
static const uint16_t m_d7051b9757f6b096[] = {2, 0, 1};
static const uint16_t i_d7051b9757f6b096[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d7051b9757f6b096 = {
  0xd7051b9757f6b096, b_d7051b9757f6b096.words, 73, nullptr, m_d7051b9757f6b096,
  0, 3, i_d7051b9757f6b096, nullptr, nullptr, { &s_d7051b9757f6b096, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<112> b_f5cae52becabc767 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
     39,   0,   0,   0,   1,   0,   1,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  67,
    111, 110, 116, 101, 120, 116,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
     41, 132, 116, 203, 204, 244, 229, 180,
      9,   0,   0,   0,  58,   0,   0,   0,
    235,  99,  70,  84, 112, 232, 172, 186,
      5,   0,   0,   0, 130,   0,   0,   0,
     72, 101,  97, 100, 101, 114,   0,   0,
    104, 101,  97, 100, 101, 114,  87, 104,
    105, 116, 101, 108, 105, 115, 116,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     62,  20,  11,  38, 215, 167,  79, 151,
    201,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 111, 107, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     36,  52, 177, 171, 228, 129, 160, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
     83, 116, 114, 101,  97, 109,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     95, 227, 207,  41, 119,  56,  87, 205,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 112, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    249, 193, 124,  98,  27,   2, 249, 170,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 105, 116, 105, 111, 110,
     97, 108,  72, 101,  97, 100, 101, 114,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     41, 132, 116, 203, 204, 244, 229, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,  84,  97, 103,  80, 114, 101,  99,
    111, 110, 100, 105, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f5cae52becabc767 = b_f5cae52becabc767.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f5cae52becabc767[] = {
  &s_94a081e4abb13424,
  &s_974fa7d7260b143e,
  &s_aaf9021b627cc1f9,
  &s_b4e5f4cccb748429,
  &s_cd57387729cfe35f,
};
static const uint16_t m_f5cae52becabc767[] = {2, 3, 0, 4, 1};
static const uint16_t i_f5cae52becabc767[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_f5cae52becabc767 = {
  0xf5cae52becabc767, b_f5cae52becabc767.words, 112, d_f5cae52becabc767, m_f5cae52becabc767,
  5, 5, i_f5cae52becabc767, nullptr, nullptr, { &s_f5cae52becabc767, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_b4e5f4cccb748429 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     41, 132, 116, 203, 204, 244, 229, 180,
     47,   0,   0,   0,   1,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  67,
    111, 110, 116, 101, 120, 116,  46,  72,
    101,  97, 100, 101, 114,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b4e5f4cccb748429 = b_b4e5f4cccb748429.words;
#if !CAPNP_LITE
static const uint16_t m_b4e5f4cccb748429[] = {0, 1};
static const uint16_t i_b4e5f4cccb748429[] = {0, 1};
const ::capnp::_::RawSchema s_b4e5f4cccb748429 = {
  0xb4e5f4cccb748429, b_b4e5f4cccb748429.words, 51, nullptr, m_b4e5f4cccb748429,
  0, 2, i_b4e5f4cccb748429, nullptr, nullptr, { &s_b4e5f4cccb748429, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_baace870544663eb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    235,  99,  70,  84, 112, 232, 172, 186,
     47,   0,   0,   0,   4,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  67,
    111, 110, 116, 101, 120, 116,  46, 104,
    101,  97, 100, 101, 114,  87, 104, 105,
    116, 101, 108, 105, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  62,   0,   0,   0,
     25,   0,   0,   0, 146,   0,   0,   0,
     33,   0,   0,   0, 130,   0,   0,   0,
     37,   0,   0,   0, 114,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
     45,   0,   0,   0,  82,   0,   0,   0,
     49,   0,   0,   0,  90,   0,   0,   0,
     53,   0,   0,   0,  82,   0,   0,   0,
    120,  45, 115,  97, 110, 100, 115, 116,
    111, 114, 109,  45,  97, 112, 112,  45,
     42,   0,   0,   0,   0,   0,   0,   0,
    111,  99,  45, 116, 111, 116,  97, 108,
     45, 108, 101, 110, 103, 116, 104,   0,
    111,  99,  45,  99, 104, 117, 110, 107,
     45, 115, 105, 122, 101,   0,   0,   0,
    120,  45, 111,  99,  45, 109, 116, 105,
    109, 101,   0,   0,   0,   0,   0,   0,
    111,  99,  45, 102, 105, 108, 101, 105,
    100,   0,   0,   0,   0,   0,   0,   0,
    111,  99,  45,  99, 104, 117, 110, 107,
    101, 100,   0,   0,   0,   0,   0,   0,
    120,  45, 104, 103,  97, 114, 103,  45,
     42,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_baace870544663eb = b_baace870544663eb.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_baace870544663eb = {
  0xbaace870544663eb, b_baace870544663eb.words, 54, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_baace870544663eb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<107> b_974fa7d7260b143e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62,  20,  11,  38, 215, 167,  79, 151,
     47,   0,   0,   0,   1,   0,   1,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      5,   0,   7,   0,   1,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  67,
    111, 110, 116, 101, 120, 116,  46, 101,
     84,  97, 103,  80, 114, 101,  99, 111,
    110, 100, 105, 116, 105, 111, 110,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 253, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 252, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 105, 115, 116, 115,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116,  99, 104, 101, 115,  79,
    110, 101,  79, 102,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 101, 193, 185, 229,  11,  44, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116,  99, 104, 101, 115,  78,
    111, 110, 101,  79, 102,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 101, 193, 185, 229,  11,  44, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 101, 115, 110, 116,  69, 120,
    105, 115, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_974fa7d7260b143e = b_974fa7d7260b143e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_974fa7d7260b143e[] = {
  &s_d22c0be5b9c16558,
  &s_f5cae52becabc767,
};
static const uint16_t m_974fa7d7260b143e[] = {4, 1, 3, 2, 0};
static const uint16_t i_974fa7d7260b143e[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_974fa7d7260b143e = {
  0x974fa7d7260b143e, b_974fa7d7260b143e.words, 107, d_974fa7d7260b143e, m_974fa7d7260b143e,
  2, 5, i_974fa7d7260b143e, nullptr, nullptr, { &s_974fa7d7260b143e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_b7d82eac416ab63e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62, 182, 106,  65, 172,  46, 216, 183,
     39,   0,   0,   0,   1,   0,   0,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  80,
    111, 115, 116,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 109, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 105, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b7d82eac416ab63e = b_b7d82eac416ab63e.words;
#if !CAPNP_LITE
static const uint16_t m_b7d82eac416ab63e[] = {1, 2, 0};
static const uint16_t i_b7d82eac416ab63e[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b7d82eac416ab63e = {
  0xb7d82eac416ab63e, b_b7d82eac416ab63e.words, 68, nullptr, m_b7d82eac416ab63e,
  0, 3, i_b7d82eac416ab63e, nullptr, nullptr, { &s_b7d82eac416ab63e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_d7aff1fe39659132 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50, 145, 101,  57, 254, 241, 175, 215,
     39,   0,   0,   0,   1,   0,   0,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  80,
    117, 116,  67, 111, 110, 116, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 109, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 105, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d7aff1fe39659132 = b_d7aff1fe39659132.words;
#if !CAPNP_LITE
static const uint16_t m_d7aff1fe39659132[] = {1, 2, 0};
static const uint16_t i_d7aff1fe39659132[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d7aff1fe39659132 = {
  0xd7aff1fe39659132, b_d7aff1fe39659132.words, 68, nullptr, m_d7aff1fe39659132,
  0, 3, i_d7aff1fe39659132, nullptr, nullptr, { &s_d7aff1fe39659132, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_d22c0be5b9c16558 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     88, 101, 193, 185, 229,  11,  44, 210,
     39,   0,   0,   0,   1,   0,   1,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  69,
     84,  97, 103,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 101,  97, 107,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d22c0be5b9c16558 = b_d22c0be5b9c16558.words;
#if !CAPNP_LITE
static const uint16_t m_d22c0be5b9c16558[] = {0, 1};
static const uint16_t i_d22c0be5b9c16558[] = {0, 1};
const ::capnp::_::RawSchema s_d22c0be5b9c16558 = {
  0xd22c0be5b9c16558, b_d22c0be5b9c16558.words, 50, nullptr, m_d22c0be5b9c16558,
  0, 2, i_d22c0be5b9c16558, nullptr, nullptr, { &s_d22c0be5b9c16558, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<89> b_a87d65bed9b60243 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     67,   2, 182, 217, 190, 101, 125, 168,
     39,   0,   0,   0,   1,   0,   2,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  67,
    111, 111, 107, 105, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    119,  72, 120, 156, 182,  91, 107, 189,
    133,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 105, 114, 101, 115,   0,
    104, 116, 116, 112,  79, 110, 108, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a87d65bed9b60243 = b_a87d65bed9b60243.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a87d65bed9b60243[] = {
  &s_bd6b5bb69c784877,
};
static const uint16_t m_a87d65bed9b60243[] = {2, 3, 0, 4, 1};
static const uint16_t i_a87d65bed9b60243[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_a87d65bed9b60243 = {
  0xa87d65bed9b60243, b_a87d65bed9b60243.words, 89, d_a87d65bed9b60243, m_a87d65bed9b60243,
  1, 5, i_a87d65bed9b60243, nullptr, nullptr, { &s_a87d65bed9b60243, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_bd6b5bb69c784877 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119,  72, 120, 156, 182,  91, 107, 189,
     46,   0,   0,   0,   1,   0,   2,   0,
     67,   2, 182, 217, 190, 101, 125, 168,
      3,   0,   7,   0,   1,   0,   3,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  67,
    111, 111, 107, 105, 101,  46, 101, 120,
    112, 105, 114, 101, 115,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  98, 115, 111, 108, 117, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 108,  97, 116, 105, 118, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bd6b5bb69c784877 = b_bd6b5bb69c784877.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bd6b5bb69c784877[] = {
  &s_a87d65bed9b60243,
};
static const uint16_t m_bd6b5bb69c784877[] = {1, 0, 2};
static const uint16_t i_bd6b5bb69c784877[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bd6b5bb69c784877 = {
  0xbd6b5bb69c784877, b_bd6b5bb69c784877.words, 67, d_bd6b5bb69c784877, m_bd6b5bb69c784877,
  1, 3, i_bd6b5bb69c784877, nullptr, nullptr, { &s_bd6b5bb69c784877, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_aaf9021b627cc1f9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    249, 193, 124,  98,  27,   2, 249, 170,
     39,   0,   0,   0,   1,   0,   1,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  65,
     99,  99, 101, 112, 116, 101, 100,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 109, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,  86,  97, 108, 117, 101,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0, 128,  63,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aaf9021b627cc1f9 = b_aaf9021b627cc1f9.words;
#if !CAPNP_LITE
static const uint16_t m_aaf9021b627cc1f9[] = {0, 1};
static const uint16_t i_aaf9021b627cc1f9[] = {0, 1};
const ::capnp::_::RawSchema s_aaf9021b627cc1f9 = {
  0xaaf9021b627cc1f9, b_aaf9021b627cc1f9.words, 52, nullptr, m_aaf9021b627cc1f9,
  0, 2, i_aaf9021b627cc1f9, nullptr, nullptr, { &s_aaf9021b627cc1f9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<146> b_8193ac6cb5429c83 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
     39,   0,   0,   0,   1,   0,   1,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      9,   0,   7,   0,   0,   0,   6,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,  71,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0, 255,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,   0,
     16,   0,   0,   0,   1,   0,   1,   0,
    143, 136, 210, 204,   7,   0,  19, 130,
     25,   0,   0,   0,  98,   0,   0,   0,
      1,  79,   4,  76, 219,  27, 163, 142,
     25,   0,   0,   0, 130,   0,   0,   0,
     94, 206, 181, 122,  20, 115, 184, 180,
     25,   0,   0,   0,  58,   0,   0,   0,
    130, 172,  44, 182,  65,  69,  23, 239,
     21,   0,   0,   0, 130,   0,   0,   0,
     83, 117,  99,  99, 101, 115, 115,  67,
    111, 100, 101,   0,   0,   0,   0,   0,
     67, 108, 105, 101, 110, 116,  69, 114,
    114, 111, 114,  67, 111, 100, 101,   0,
     72, 101,  97, 100, 101, 114,   0,   0,
    104, 101,  97, 100, 101, 114,  87, 104,
    105, 116, 101, 108, 105, 115, 116,   0,
     36,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    236,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      5,   0, 255, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,  30, 252, 218, 139, 212, 236, 139,
      5,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    168, 251, 121, 253, 176,  92, 196, 171,
    241,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0, 253, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     68, 184, 128, 124, 100, 176, 127, 217,
    217,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0, 252, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    201, 205, 154,   9,   1,  81,  71, 240,
    197,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0, 251, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    207, 148, 248,   2, 113, 182, 116, 131,
    177,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 250, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     15,  15,  96, 142,  28, 239,   5, 244,
    165,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,  20,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 116,  67, 111, 111, 107, 105,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     67,   2, 182, 217, 190, 101, 125, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 100, 105, 114, 101,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     99, 108, 105, 101, 110, 116,  69, 114,
    114, 111, 114,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 101, 114,  69, 114,
    114, 111, 114,   0,   0,   0,   0,   0,
    110, 111,  67, 111, 110, 116, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
     99,  97,  99, 104, 101,  80, 111, 108,
    105,  99, 121,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    133,  72, 134,   0, 227,  33, 123, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 101,  99, 111, 110, 100, 105,
    116, 105, 111, 110,  70,  97, 105, 108,
    101, 100,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 105, 116, 105, 111, 110,
     97, 108,  72, 101,  97, 100, 101, 114,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     94, 206, 181, 122,  20, 115, 184, 180,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8193ac6cb5429c83 = b_8193ac6cb5429c83.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8193ac6cb5429c83[] = {
  &s_8374b67102f894cf,
  &s_8becd48bdafc1e45,
  &s_a87d65bed9b60243,
  &s_abc45cb0fd79fba8,
  &s_b37b21e300864885,
  &s_b4b873147ab5ce5e,
  &s_d97fb0647c80b844,
  &s_f0475101099acdc9,
  &s_f405ef1c8e600f0f,
};
static const uint16_t m_8193ac6cb5429c83[] = {8, 6, 3, 2, 5, 7, 1, 4, 0};
static const uint16_t i_8193ac6cb5429c83[] = {1, 2, 3, 4, 5, 7, 0, 6, 8};
const ::capnp::_::RawSchema s_8193ac6cb5429c83 = {
  0x8193ac6cb5429c83, b_8193ac6cb5429c83.words, 146, d_8193ac6cb5429c83, m_8193ac6cb5429c83,
  9, 9, i_8193ac6cb5429c83, nullptr, nullptr, { &s_8193ac6cb5429c83, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<137> b_82130007ccd2888f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    143, 136, 210, 204,   7,   0,  19, 130,
     48,   0,   0,   0,   2,   0,   0,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     83, 117,  99,  99, 101, 115, 115,  67,
    111, 100, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     28,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  26,   0,   0,   0,
     77,   0,   0,   0,  31,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  66,   0,   0,   0,
    113,   0,   0,   0,  31,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  74,   0,   0,   0,
    153,   0,   0,   0,  31,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  82,   0,   0,   0,
    197,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0, 122,   0,   0,   0,
    241,   0,   0,   0,  31,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0,  98,   0,   0,   0,
     29,   1,   0,   0,  31,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0,  98,   0,   0,   0,
     73,   1,   0,   0,  31,   0,   0,   0,
    111, 107,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     24,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    200,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  26,   0,   0,   0,
     79,  75,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 101,  97, 116, 101, 100,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     24,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    201,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  66,   0,   0,   0,
     67, 114, 101,  97, 116, 101, 100,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 112, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    202,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  74,   0,   0,   0,
     65,  99,  99, 101, 112, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  67, 111, 110, 116, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    204,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  90,   0,   0,   0,
     78, 111,  32,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116, 105,  97, 108,  67,
    111, 110, 116, 101, 110, 116,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    206,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 130,   0,   0,   0,
     80,  97, 114, 116, 105,  97, 108,  32,
     67, 111, 110, 116, 101, 110, 116,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 117, 108, 116, 105,  83, 116,  97,
    116, 117, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    207,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 106,   0,   0,   0,
     77, 117, 108, 116, 105,  45,  83, 116,
     97, 116, 117, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116,  77, 111, 100, 105, 102,
    105, 101, 100,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 106,   0,   0,   0,
     78, 111, 116,  32,  77, 111, 100, 105,
    102, 105, 101, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82130007ccd2888f = b_82130007ccd2888f.words;
#if !CAPNP_LITE
static const uint16_t m_82130007ccd2888f[] = {2, 1, 5, 3, 6, 0, 4};
const ::capnp::_::RawSchema s_82130007ccd2888f = {
  0x82130007ccd2888f, b_82130007ccd2888f.words, 137, nullptr, m_82130007ccd2888f,
  0, 7, nullptr, nullptr, nullptr, { &s_82130007ccd2888f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(SuccessCode_82130007ccd2888f, 82130007ccd2888f);
static const ::capnp::_::AlignedData<254> b_8ea31bdb4c044f01 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      1,  79,   4,  76, 219,  27, 163, 142,
     48,   0,   0,   0,   2,   0,   0,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   2,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     67, 108, 105, 101, 110, 116,  69, 114,
    114, 111, 114,  67, 111, 100, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     52,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  90,   0,   0,   0,
    153,   0,   0,   0,  31,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  82,   0,   0,   0,
    197,   0,   0,   0,  31,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  74,   0,   0,   0,
    241,   0,   0,   0,  31,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0, 138,   0,   0,   0,
     33,   1,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0, 114,   0,   0,   0,
     81,   1,   0,   0,  31,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0,  74,   0,   0,   0,
    125,   1,   0,   0,  31,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    165,   1,   0,   0,  42,   0,   0,   0,
    165,   1,   0,   0,  31,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    201,   1,   0,   0, 178,   0,   0,   0,
    209,   1,   0,   0,  31,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      1,   2,   0,   0, 146,   0,   0,   0,
      9,   2,   0,   0,  31,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     53,   2,   0,   0, 170,   0,   0,   0,
     61,   2,   0,   0,  31,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    105,   2,   0,   0,  82,   0,   0,   0,
    109,   2,   0,   0,  31,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    149,   2,   0,   0, 154,   0,   0,   0,
    157,   2,   0,   0,  31,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    201,   2,   0,   0, 162,   0,   0,   0,
    209,   2,   0,   0,  31,   0,   0,   0,
     98,  97, 100,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    144,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  98,   0,   0,   0,
     66,  97, 100,  32,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 111, 114,  98, 105, 100, 100, 101,
    110,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    147,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  82,   0,   0,   0,
     70, 111, 114,  98, 105, 100, 100, 101,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116,  70, 111, 117, 110, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    148,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  82,   0,   0,   0,
     78, 111, 116,  32,  70, 111, 117, 110,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116, 104, 111, 100,  78, 111,
    116,  65, 108, 108, 111, 119, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     32,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    149,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 154,   0,   0,   0,
     77, 101, 116, 104, 111, 100,  32,  78,
    111, 116,  32,  65, 108, 108, 111, 119,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116,  65,  99,  99, 101, 112,
    116,  97,  98, 108, 101,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    150,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 122,   0,   0,   0,
     78, 111, 116,  32,  65,  99,  99, 101,
    112, 116,  97,  98, 108, 101,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 108, 105,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    153,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  74,   0,   0,   0,
     67, 111, 110, 102, 108, 105,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 111, 110, 101,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     24,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    154,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  42,   0,   0,   0,
     71, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116,  69,
    110, 116, 105, 116, 121,  84, 111, 111,
     76,  97, 114, 103, 101,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     36,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    157,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 202,   0,   0,   0,
     82, 101, 113, 117, 101, 115, 116,  32,
     69, 110, 116, 105, 116, 121,  32,  84,
    111, 111,  32,  76,  97, 114, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 117, 101, 115, 116,  85,
    114, 105,  84, 111, 111,  76, 111, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     32,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    158,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   0,   0,   0,
     82, 101, 113, 117, 101, 115, 116,  45,
     85,  82,  73,  32,  84, 111, 111,  32,
     76, 111, 110, 103,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 115, 117, 112, 112, 111, 114,
    116, 101, 100,  77, 101, 100, 105,  97,
     84, 121, 112, 101,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     32,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    159,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 186,   0,   0,   0,
     85, 110, 115, 117, 112, 112, 111, 114,
    116, 101, 100,  32,  77, 101, 100, 105,
     97,  32,  84, 121, 112, 101,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109,  65,  84, 101,  97, 112, 111,
    116,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    162,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 106,   0,   0,   0,
     73,  39, 109,  32,  97,  32, 116, 101,
     97, 112, 111, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 101,  99, 111, 110, 100, 105,
    116, 105, 111, 110,  70,  97, 105, 108,
    101, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     32,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    156,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 162,   0,   0,   0,
     80, 114, 101,  99, 111, 110, 100, 105,
    116, 105, 111, 110,  32,  70,  97, 105,
    108, 101, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 112, 114, 111,  99, 101, 115,
    115,  97,  98, 108, 101,  69, 110, 116,
    105, 116, 121,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    135, 136, 171, 108,  12,  10,  72, 175,
      4,   0,   0,   0,   2,   0,   1,   0,
     32,   0,   0,   0,   0,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    166,   1,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0, 170,   0,   0,   0,
     85, 110, 112, 114, 111,  99, 101, 115,
    115,  97,  98, 108, 101,  32,  69, 110,
    116, 105, 116, 121,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8ea31bdb4c044f01 = b_8ea31bdb4c044f01.words;
#if !CAPNP_LITE
static const uint16_t m_8ea31bdb4c044f01[] = {0, 5, 1, 6, 10, 3, 4, 2, 11, 7, 8, 12, 9};
const ::capnp::_::RawSchema s_8ea31bdb4c044f01 = {
  0x8ea31bdb4c044f01, b_8ea31bdb4c044f01.words, 254, nullptr, m_8ea31bdb4c044f01,
  0, 13, nullptr, nullptr, nullptr, { &s_8ea31bdb4c044f01, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ClientErrorCode_8ea31bdb4c044f01, 8ea31bdb4c044f01);
static const ::capnp::_::AlignedData<51> b_b4b873147ab5ce5e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94, 206, 181, 122,  20, 115, 184, 180,
     48,   0,   0,   0,   1,   0,   0,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     72, 101,  97, 100, 101, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b4b873147ab5ce5e = b_b4b873147ab5ce5e.words;
#if !CAPNP_LITE
static const uint16_t m_b4b873147ab5ce5e[] = {0, 1};
static const uint16_t i_b4b873147ab5ce5e[] = {0, 1};
const ::capnp::_::RawSchema s_b4b873147ab5ce5e = {
  0xb4b873147ab5ce5e, b_b4b873147ab5ce5e.words, 51, nullptr, m_b4b873147ab5ce5e,
  0, 2, i_b4b873147ab5ce5e, nullptr, nullptr, { &s_b4b873147ab5ce5e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_ef174541b62cac82 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130, 172,  44, 182,  65,  69,  23, 239,
     48,   0,   0,   0,   4,   0,   0,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   2,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
    104, 101,  97, 100, 101, 114,  87, 104,
    105, 116, 101, 108, 105, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  22,   0,   0,   0,
      5,   0,   0,   0, 146,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
    120,  45, 115,  97, 110, 100, 115, 116,
    111, 114, 109,  45,  97, 112, 112,  45,
     42,   0,   0,   0,   0,   0,   0,   0,
    120,  45, 111,  99,  45, 109, 116, 105,
    109, 101,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ef174541b62cac82 = b_ef174541b62cac82.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ef174541b62cac82 = {
  0xef174541b62cac82, b_ef174541b62cac82.words, 39, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ef174541b62cac82, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_8becd48bdafc1e45 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69,  30, 252, 218, 139, 212, 236, 139,
     48,   0,   0,   0,   1,   0,   1,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      9,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
    114, 101, 100, 105, 114, 101,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
    105, 115,  80, 101, 114, 109,  97, 110,
    101, 110, 116,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  99,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 119, 105, 116,  99, 104,  84, 111,
     71, 101, 116,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8becd48bdafc1e45 = b_8becd48bdafc1e45.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8becd48bdafc1e45[] = {
  &s_8193ac6cb5429c83,
};
static const uint16_t m_8becd48bdafc1e45[] = {0, 1, 2};
static const uint16_t i_8becd48bdafc1e45[] = {0, 1, 2};
const ::capnp::_::RawSchema s_8becd48bdafc1e45 = {
  0x8becd48bdafc1e45, b_8becd48bdafc1e45.words, 69, d_8becd48bdafc1e45, m_8becd48bdafc1e45,
  1, 3, i_8becd48bdafc1e45, nullptr, nullptr, { &s_8becd48bdafc1e45, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<116> b_abc45cb0fd79fba8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    168, 251, 121, 253, 176,  92, 196, 171,
     48,   0,   0,   0,   1,   0,   1,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      9,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     99, 111, 110, 116, 101, 110, 116,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    194, 137, 156,  19, 233,  10, 138, 237,
    205,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     89, 187,  30,  61, 249,  51,  45, 247,
    189,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
    101, 110,  99, 111, 100, 105, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 110, 103, 117,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 109, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 100, 121,   0,   0,   0,   0,
    115, 116,  97, 116, 117, 115,  67, 111,
    100, 101,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    143, 136, 210, 204,   7,   0,  19, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 112, 111, 115, 105, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
    101,  84,  97, 103,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 101, 193, 185, 229,  11,  44, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_abc45cb0fd79fba8 = b_abc45cb0fd79fba8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_abc45cb0fd79fba8[] = {
  &s_8193ac6cb5429c83,
  &s_82130007ccd2888f,
  &s_d22c0be5b9c16558,
  &s_ed8a0ae9139c89c2,
  &s_f72d33f93d1ebb59,
};
static const uint16_t m_abc45cb0fd79fba8[] = {3, 5, 6, 0, 1, 2, 4};
static const uint16_t i_abc45cb0fd79fba8[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_abc45cb0fd79fba8 = {
  0xabc45cb0fd79fba8, b_abc45cb0fd79fba8.words, 116, d_abc45cb0fd79fba8, m_abc45cb0fd79fba8,
  5, 7, i_abc45cb0fd79fba8, nullptr, nullptr, { &s_abc45cb0fd79fba8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_ed8a0ae9139c89c2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194, 137, 156,  19, 233,  10, 138, 237,
     56,   0,   0,   0,   1,   0,   1,   0,
    168, 251, 121, 253, 176,  92, 196, 171,
      9,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     99, 111, 110, 116, 101, 110, 116,  46,
     98, 111, 100, 121,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     98, 121, 116, 101, 115,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 101,  97, 109,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    224,  66,  96,  96, 172,  36, 244, 152,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ed8a0ae9139c89c2 = b_ed8a0ae9139c89c2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ed8a0ae9139c89c2[] = {
  &s_98f424ac606042e0,
  &s_abc45cb0fd79fba8,
};
static const uint16_t m_ed8a0ae9139c89c2[] = {0, 1};
static const uint16_t i_ed8a0ae9139c89c2[] = {0, 1};
const ::capnp::_::RawSchema s_ed8a0ae9139c89c2 = {
  0xed8a0ae9139c89c2, b_ed8a0ae9139c89c2.words, 51, d_ed8a0ae9139c89c2, m_ed8a0ae9139c89c2,
  2, 2, i_ed8a0ae9139c89c2, nullptr, nullptr, { &s_ed8a0ae9139c89c2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_f72d33f93d1ebb59 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89, 187,  30,  61, 249,  51,  45, 247,
     56,   0,   0,   0,   1,   0,   1,   0,
    168, 251, 121, 253, 176,  92, 196, 171,
      9,   0,   7,   0,   1,   0,   2,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     99, 111, 110, 116, 101, 110, 116,  46,
    100, 105, 115, 112, 111, 115, 105, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   5,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 114, 109,  97, 108,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 119, 110, 108, 111,  97, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f72d33f93d1ebb59 = b_f72d33f93d1ebb59.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f72d33f93d1ebb59[] = {
  &s_abc45cb0fd79fba8,
};
static const uint16_t m_f72d33f93d1ebb59[] = {1, 0};
static const uint16_t i_f72d33f93d1ebb59[] = {0, 1};
const ::capnp::_::RawSchema s_f72d33f93d1ebb59 = {
  0xf72d33f93d1ebb59, b_f72d33f93d1ebb59.words, 53, d_f72d33f93d1ebb59, m_f72d33f93d1ebb59,
  1, 2, i_f72d33f93d1ebb59, nullptr, nullptr, { &s_f72d33f93d1ebb59, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_d97fb0647c80b844 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     68, 184, 128, 124, 100, 176, 127, 217,
     48,   0,   0,   0,   1,   0,   1,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      9,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
     99, 108, 105, 101, 110, 116,  69, 114,
    114, 111, 114,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,  67, 111,
    100, 101,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      1,  79,   4,  76, 219,  27, 163, 142,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    105, 111, 110,  72, 116, 109, 108,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d97fb0647c80b844 = b_d97fb0647c80b844.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d97fb0647c80b844[] = {
  &s_8193ac6cb5429c83,
  &s_8ea31bdb4c044f01,
};
static const uint16_t m_d97fb0647c80b844[] = {1, 0};
static const uint16_t i_d97fb0647c80b844[] = {0, 1};
const ::capnp::_::RawSchema s_d97fb0647c80b844 = {
  0xd97fb0647c80b844, b_d97fb0647c80b844.words, 53, d_d97fb0647c80b844, m_d97fb0647c80b844,
  2, 2, i_d97fb0647c80b844, nullptr, nullptr, { &s_d97fb0647c80b844, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_f0475101099acdc9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    201, 205, 154,   9,   1,  81,  71, 240,
     48,   0,   0,   0,   1,   0,   1,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      9,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
    115, 101, 114, 118, 101, 114,  69, 114,
    114, 111, 114,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    100, 101, 115,  99, 114, 105, 112, 116,
    105, 111, 110,  72, 116, 109, 108,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f0475101099acdc9 = b_f0475101099acdc9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f0475101099acdc9[] = {
  &s_8193ac6cb5429c83,
};
static const uint16_t m_f0475101099acdc9[] = {0};
static const uint16_t i_f0475101099acdc9[] = {0};
const ::capnp::_::RawSchema s_f0475101099acdc9 = {
  0xf0475101099acdc9, b_f0475101099acdc9.words, 37, d_f0475101099acdc9, m_f0475101099acdc9,
  1, 1, i_f0475101099acdc9, nullptr, nullptr, { &s_f0475101099acdc9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_8374b67102f894cf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    207, 148, 248,   2, 113, 182, 116, 131,
     48,   0,   0,   0,   1,   0,   1,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      9,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
    110, 111,  67, 111, 110, 116, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    115, 104, 111, 117, 108, 100,  82, 101,
    115, 101, 116,  70, 111, 114, 109,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,  84,  97, 103,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 101, 193, 185, 229,  11,  44, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8374b67102f894cf = b_8374b67102f894cf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8374b67102f894cf[] = {
  &s_8193ac6cb5429c83,
  &s_d22c0be5b9c16558,
};
static const uint16_t m_8374b67102f894cf[] = {1, 0};
static const uint16_t i_8374b67102f894cf[] = {0, 1};
const ::capnp::_::RawSchema s_8374b67102f894cf = {
  0x8374b67102f894cf, b_8374b67102f894cf.words, 52, d_8374b67102f894cf, m_8374b67102f894cf,
  2, 2, i_8374b67102f894cf, nullptr, nullptr, { &s_8374b67102f894cf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_f405ef1c8e600f0f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15,  15,  96, 142,  28, 239,   5, 244,
     48,   0,   0,   0,   1,   0,   1,   0,
    131, 156,  66, 181, 108, 172, 147, 129,
      9,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
    112, 114, 101,  99, 111, 110, 100, 105,
    116, 105, 111, 110,  70,  97, 105, 108,
    101, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 116,  99, 104, 105, 110, 103,
     69,  84,  97, 103,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     88, 101, 193, 185, 229,  11,  44, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f405ef1c8e600f0f = b_f405ef1c8e600f0f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f405ef1c8e600f0f[] = {
  &s_8193ac6cb5429c83,
  &s_d22c0be5b9c16558,
};
static const uint16_t m_f405ef1c8e600f0f[] = {0};
static const uint16_t i_f405ef1c8e600f0f[] = {0};
const ::capnp::_::RawSchema s_f405ef1c8e600f0f = {
  0xf405ef1c8e600f0f, b_f405ef1c8e600f0f.words, 38, d_f405ef1c8e600f0f, m_f405ef1c8e600f0f,
  2, 1, i_f405ef1c8e600f0f, nullptr, nullptr, { &s_f405ef1c8e600f0f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_99ffc2f3f69a6a9f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    159, 106, 154, 246, 243, 194, 255, 153,
     39,   0,   0,   0,   3,   0,   0,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  71,   0,   0,   0,
     85,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 113, 117, 101, 115, 116,  83, 116,
    114, 101,  97, 109,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 189, 189,  25,  50,  42, 160, 233,
    131, 156,  66, 181, 108, 172, 147, 129,
     17,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   7,   0,   0,   0,
    103, 101, 116,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     95, 227, 207,  41, 119,  56,  87, 205,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_99ffc2f3f69a6a9f = b_99ffc2f3f69a6a9f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_99ffc2f3f69a6a9f[] = {
  &s_8193ac6cb5429c83,
  &s_cd57387729cfe35f,
  &s_e9a02a3219bdbd70,
};
static const uint16_t m_99ffc2f3f69a6a9f[] = {0};
const ::capnp::_::RawSchema s_99ffc2f3f69a6a9f = {
  0x99ffc2f3f69a6a9f, b_99ffc2f3f69a6a9f.words, 35, d_99ffc2f3f69a6a9f, m_99ffc2f3f69a6a9f,
  3, 1, nullptr, nullptr, nullptr, { &s_99ffc2f3f69a6a9f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<21> b_e9a02a3219bdbd70 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    112, 189, 189,  25,  50,  42, 160, 233,
     53,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  82,
    101, 113, 117, 101, 115, 116,  83, 116,
    114, 101,  97, 109,  46, 103, 101, 116,
     82, 101, 115, 112, 111, 110, 115, 101,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_e9a02a3219bdbd70 = b_e9a02a3219bdbd70.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e9a02a3219bdbd70 = {
  0xe9a02a3219bdbd70, b_e9a02a3219bdbd70.words, 21, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e9a02a3219bdbd70, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_f001fc1d5e574a07 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7,  74,  87,  94,  29, 252,   1, 240,
     39,   0,   0,   0,   3,   0,   0,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  71,   0,   0,   0,
     85,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  87,
    101,  98,  83, 111,  99, 107, 101, 116,
     83, 116, 114, 101,  97, 109,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216, 140, 173, 252, 227,  44, 113, 154,
    163, 227,  10, 170,  35, 238, 163, 130,
     17,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   7,   0,   0,   0,
    115, 101, 110, 100,  66, 121, 116, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f001fc1d5e574a07 = b_f001fc1d5e574a07.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f001fc1d5e574a07[] = {
  &s_82a3ee23aa0ae3a3,
  &s_9a712ce3fcad8cd8,
};
static const uint16_t m_f001fc1d5e574a07[] = {0};
const ::capnp::_::RawSchema s_f001fc1d5e574a07 = {
  0xf001fc1d5e574a07, b_f001fc1d5e574a07.words, 33, d_f001fc1d5e574a07, m_f001fc1d5e574a07,
  2, 1, nullptr, nullptr, nullptr, { &s_f001fc1d5e574a07, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_9a712ce3fcad8cd8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    216, 140, 173, 252, 227,  44, 113, 154,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  87,
    101,  98,  83, 111,  99, 107, 101, 116,
     83, 116, 114, 101,  97, 109,  46, 115,
    101, 110, 100,  66, 121, 116, 101, 115,
     36,  80,  97, 114,  97, 109, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9a712ce3fcad8cd8 = b_9a712ce3fcad8cd8.words;
#if !CAPNP_LITE
static const uint16_t m_9a712ce3fcad8cd8[] = {0};
static const uint16_t i_9a712ce3fcad8cd8[] = {0};
const ::capnp::_::RawSchema s_9a712ce3fcad8cd8 = {
  0x9a712ce3fcad8cd8, b_9a712ce3fcad8cd8.words, 37, nullptr, m_9a712ce3fcad8cd8,
  0, 1, i_9a712ce3fcad8cd8, nullptr, nullptr, { &s_9a712ce3fcad8cd8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<22> b_82a3ee23aa0ae3a3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    163, 227,  10, 170,  35, 238, 163, 130,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  87,
    101,  98,  83, 111,  99, 107, 101, 116,
     83, 116, 114, 101,  97, 109,  46, 115,
    101, 110, 100,  66, 121, 116, 101, 115,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82a3ee23aa0ae3a3 = b_82a3ee23aa0ae3a3.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_82a3ee23aa0ae3a3 = {
  0x82a3ee23aa0ae3a3, b_82a3ee23aa0ae3a3.words, 22, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_82a3ee23aa0ae3a3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<88> b_b37b21e300864885 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    133,  72, 134,   0, 227,  33, 123, 179,
     39,   0,   0,   0,   1,   0,   1,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  67,
     97,  99, 104, 101,  80, 111, 108, 105,
     99, 121,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     40, 224,  13, 246,   5,  85,  83, 129,
      1,   0,   0,   0,  50,   0,   0,   0,
     83,  99, 111, 112, 101,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  32,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,  33,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    119, 105, 116, 104,  67, 104, 101,  99,
    107,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     40, 224,  13, 246,   5,  85,  83, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 114, 109,  97, 110, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     40, 224,  13, 246,   5,  85,  83, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 114, 105, 101, 115,  79, 110,
     67, 111, 111, 107, 105, 101,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 114, 105, 101, 115,  79, 110,
     65,  99,  99, 101, 112, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b37b21e300864885 = b_b37b21e300864885.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b37b21e300864885[] = {
  &s_81535505f60de028,
};
static const uint16_t m_b37b21e300864885[] = {1, 3, 2, 0};
static const uint16_t i_b37b21e300864885[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_b37b21e300864885 = {
  0xb37b21e300864885, b_b37b21e300864885.words, 88, d_b37b21e300864885, m_b37b21e300864885,
  1, 4, i_b37b21e300864885, nullptr, nullptr, { &s_b37b21e300864885, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<45> b_81535505f60de028 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     40, 224,  13, 246,   5,  85,  83, 129,
     51,   0,   0,   0,   2,   0,   0,   0,
    133,  72, 134,   0, 227,  33, 123, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 127,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  67,
     97,  99, 104, 101,  80, 111, 108, 105,
     99, 121,  46,  83,  99, 111, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
    112, 101, 114,  83, 101, 115, 115, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
    112, 101, 114,  85, 115, 101, 114,   0,
    112, 101, 114,  65, 112, 112,  86, 101,
    114, 115, 105, 111, 110,   0,   0,   0,
    117, 110, 105, 118, 101, 114, 115,  97,
    108,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81535505f60de028 = b_81535505f60de028.words;
#if !CAPNP_LITE
static const uint16_t m_81535505f60de028[] = {0, 3, 1, 2, 4};
const ::capnp::_::RawSchema s_81535505f60de028 = {
  0x81535505f60de028, b_81535505f60de028.words, 45, nullptr, m_81535505f60de028,
  0, 5, nullptr, nullptr, nullptr, { &s_81535505f60de028, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Scope_81535505f60de028, 81535505f60de028);
static const ::capnp::_::AlignedData<88> b_e9ff06beec4e73d6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    214, 115,  78, 236, 190,   6, 255, 233,
     39,   0,   0,   0,   1,   0,   1,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  79,
    112, 116, 105, 111, 110, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 118,  67, 108,  97, 115, 115,
     49,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 118,  67, 108,  97, 115, 115,
     50,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 118,  67, 108,  97, 115, 115,
     51,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 118,  69, 120, 116, 101, 110,
    115, 105, 111, 110, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e9ff06beec4e73d6 = b_e9ff06beec4e73d6.words;
#if !CAPNP_LITE
static const uint16_t m_e9ff06beec4e73d6[] = {0, 1, 2, 3};
static const uint16_t i_e9ff06beec4e73d6[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_e9ff06beec4e73d6 = {
  0xe9ff06beec4e73d6, b_e9ff06beec4e73d6.words, 88, nullptr, m_e9ff06beec4e73d6,
  0, 4, i_e9ff06beec4e73d6, nullptr, nullptr, { &s_e9ff06beec4e73d6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<44> b_b39cc44599b3a41b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     27, 164, 179, 153,  69, 196, 156, 179,
     39,   0,   0,   0,   2,   0,   0,   0,
    206, 168,  53,  77, 161,  17,   7, 165,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  80,
    114, 111, 112, 102, 105, 110, 100,  68,
    101, 112, 116, 104,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  74,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 105, 110, 105, 116, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    206, 145, 241, 254, 121, 167, 100, 242,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  82,   0,   0,   0,
    105, 110, 102, 105, 110, 105, 116, 121,
     95,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    122, 101, 114, 111,   0,   0,   0,   0,
    111, 110, 101,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b39cc44599b3a41b = b_b39cc44599b3a41b.words;
#if !CAPNP_LITE
static const uint16_t m_b39cc44599b3a41b[] = {0, 2, 1};
const ::capnp::_::RawSchema s_b39cc44599b3a41b = {
  0xb39cc44599b3a41b, b_b39cc44599b3a41b.words, 44, nullptr, m_b39cc44599b3a41b,
  0, 3, nullptr, nullptr, nullptr, { &s_b39cc44599b3a41b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PropfindDepth_b39cc44599b3a41b, b39cc44599b3a41b);
static const ::capnp::_::AlignedData<66> b_cd94acddf4778328 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     40, 131, 119, 244, 221, 172, 148, 205,
     39,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 103,
    101, 116,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 103, 110, 111, 114, 101,  66, 111,
    100, 121,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cd94acddf4778328 = b_cd94acddf4778328.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cd94acddf4778328[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_cd94acddf4778328[] = {1, 2, 0};
static const uint16_t i_cd94acddf4778328[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cd94acddf4778328 = {
  0xcd94acddf4778328, b_cd94acddf4778328.words, 66, d_cd94acddf4778328, m_cd94acddf4778328,
  1, 3, i_cd94acddf4778328, nullptr, nullptr, { &s_cd94acddf4778328, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_aa6ef20a62c1cafd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    253, 202, 193,  98,  10, 242, 110, 170,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
    111, 115, 116,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     62, 182, 106,  65, 172,  46, 216, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aa6ef20a62c1cafd = b_aa6ef20a62c1cafd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_aa6ef20a62c1cafd[] = {
  &s_b7d82eac416ab63e,
  &s_f5cae52becabc767,
};
static const uint16_t m_aa6ef20a62c1cafd[] = {1, 2, 0};
static const uint16_t i_aa6ef20a62c1cafd[] = {0, 1, 2};
const ::capnp::_::RawSchema s_aa6ef20a62c1cafd = {
  0xaa6ef20a62c1cafd, b_aa6ef20a62c1cafd.words, 65, d_aa6ef20a62c1cafd, m_aa6ef20a62c1cafd,
  2, 3, i_aa6ef20a62c1cafd, nullptr, nullptr, { &s_aa6ef20a62c1cafd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<87> b_c7c9c9b19d935e79 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121,  94, 147, 157, 177, 201, 201, 199,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 111,
    112, 101, 110,  87, 101,  98,  83, 111,
     99, 107, 101, 116,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  83, 116,
    114, 101,  97, 109,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      7,  74,  87,  94,  29, 252,   1, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c7c9c9b19d935e79 = b_c7c9c9b19d935e79.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c7c9c9b19d935e79[] = {
  &s_f001fc1d5e574a07,
  &s_f5cae52becabc767,
};
static const uint16_t m_c7c9c9b19d935e79[] = {3, 1, 0, 2};
static const uint16_t i_c7c9c9b19d935e79[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_c7c9c9b19d935e79 = {
  0xc7c9c9b19d935e79, b_c7c9c9b19d935e79.words, 87, d_c7c9c9b19d935e79, m_c7c9c9b19d935e79,
  2, 4, i_c7c9c9b19d935e79, nullptr, nullptr, { &s_c7c9c9b19d935e79, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_cc561276d31b392b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     43,  57,  27, 211, 118,  18,  86, 204,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 111,
    112, 101, 110,  87, 101,  98,  83, 111,
     99, 107, 101, 116,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 111, 116, 111,  99, 111, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 114, 118, 101, 114,  83, 116,
    114, 101,  97, 109,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      7,  74,  87,  94,  29, 252,   1, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cc561276d31b392b = b_cc561276d31b392b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cc561276d31b392b[] = {
  &s_f001fc1d5e574a07,
};
static const uint16_t m_cc561276d31b392b[] = {0, 1};
static const uint16_t i_cc561276d31b392b[] = {0, 1};
const ::capnp::_::RawSchema s_cc561276d31b392b = {
  0xcc561276d31b392b, b_cc561276d31b392b.words, 57, d_cc561276d31b392b, m_cc561276d31b392b,
  1, 2, i_cc561276d31b392b, nullptr, nullptr, { &s_cc561276d31b392b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_f1c587295608596e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    110,  89,   8,  86,  41, 135, 197, 241,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
    117, 116,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     50, 145, 101,  57, 254, 241, 175, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f1c587295608596e = b_f1c587295608596e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f1c587295608596e[] = {
  &s_d7aff1fe39659132,
  &s_f5cae52becabc767,
};
static const uint16_t m_f1c587295608596e[] = {1, 2, 0};
static const uint16_t i_f1c587295608596e[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f1c587295608596e = {
  0xf1c587295608596e, b_f1c587295608596e.words, 65, d_f1c587295608596e, m_f1c587295608596e,
  2, 3, i_f1c587295608596e, nullptr, nullptr, { &s_f1c587295608596e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_eba76bffb27b1975 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    117,  25, 123, 178, 255, 107, 167, 235,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 100,
    101, 108, 101, 116, 101,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eba76bffb27b1975 = b_eba76bffb27b1975.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_eba76bffb27b1975[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_eba76bffb27b1975[] = {1, 0};
static const uint16_t i_eba76bffb27b1975[] = {0, 1};
const ::capnp::_::RawSchema s_eba76bffb27b1975 = {
  0xeba76bffb27b1975, b_eba76bffb27b1975.words, 50, d_eba76bffb27b1975, m_eba76bffb27b1975,
  1, 2, i_eba76bffb27b1975, nullptr, nullptr, { &s_eba76bffb27b1975, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<83> b_d26a7affce43b1c0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    192, 177,  67, 206, 255, 122, 106, 210,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
    111, 115, 116,  83, 116, 114, 101,  97,
    109, 105, 110, 103,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 109, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 105, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d26a7affce43b1c0 = b_d26a7affce43b1c0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d26a7affce43b1c0[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_d26a7affce43b1c0[] = {2, 3, 1, 0};
static const uint16_t i_d26a7affce43b1c0[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d26a7affce43b1c0 = {
  0xd26a7affce43b1c0, b_d26a7affce43b1c0.words, 83, d_d26a7affce43b1c0, m_d26a7affce43b1c0,
  1, 4, i_d26a7affce43b1c0, nullptr, nullptr, { &s_d26a7affce43b1c0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_bf0e0653dc266205 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5,  98,  38, 220,  83,   6,  14, 191,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
    111, 115, 116,  83, 116, 114, 101,  97,
    109, 105, 110, 103,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 101,  97, 109,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    159, 106, 154, 246, 243, 194, 255, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf0e0653dc266205 = b_bf0e0653dc266205.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bf0e0653dc266205[] = {
  &s_99ffc2f3f69a6a9f,
};
static const uint16_t m_bf0e0653dc266205[] = {0};
static const uint16_t i_bf0e0653dc266205[] = {0};
const ::capnp::_::RawSchema s_bf0e0653dc266205 = {
  0xbf0e0653dc266205, b_bf0e0653dc266205.words, 36, d_bf0e0653dc266205, m_bf0e0653dc266205,
  1, 1, i_bf0e0653dc266205, nullptr, nullptr, { &s_bf0e0653dc266205, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<83> b_a1ece076a7105939 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     57,  89,  16, 167, 118, 224, 236, 161,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
    117, 116,  83, 116, 114, 101,  97, 109,
    105, 110, 103,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 109, 101,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 105, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a1ece076a7105939 = b_a1ece076a7105939.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a1ece076a7105939[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_a1ece076a7105939[] = {2, 3, 1, 0};
static const uint16_t i_a1ece076a7105939[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_a1ece076a7105939 = {
  0xa1ece076a7105939, b_a1ece076a7105939.words, 83, d_a1ece076a7105939, m_a1ece076a7105939,
  1, 4, i_a1ece076a7105939, nullptr, nullptr, { &s_a1ece076a7105939, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_c60d14bf989d4454 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     84,  68, 157, 152, 191,  20,  13, 198,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
    117, 116,  83, 116, 114, 101,  97, 109,
    105, 110, 103,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 101,  97, 109,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    159, 106, 154, 246, 243, 194, 255, 153,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c60d14bf989d4454 = b_c60d14bf989d4454.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c60d14bf989d4454[] = {
  &s_99ffc2f3f69a6a9f,
};
static const uint16_t m_c60d14bf989d4454[] = {0};
static const uint16_t i_c60d14bf989d4454[] = {0};
const ::capnp::_::RawSchema s_c60d14bf989d4454 = {
  0xc60d14bf989d4454, b_c60d14bf989d4454.words, 36, d_c60d14bf989d4454, m_c60d14bf989d4454,
  1, 1, i_c60d14bf989d4454, nullptr, nullptr, { &s_c60d14bf989d4454, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_ca2d58de88f0b32e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     46, 179, 240, 136, 222,  88,  45, 202,
     39,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
    114, 111, 112, 102, 105, 110, 100,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120, 109, 108,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 116, 104,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     27, 164, 179, 153,  69, 196, 156, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca2d58de88f0b32e = b_ca2d58de88f0b32e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ca2d58de88f0b32e[] = {
  &s_b39cc44599b3a41b,
  &s_f5cae52becabc767,
};
static const uint16_t m_ca2d58de88f0b32e[] = {3, 2, 0, 1};
static const uint16_t i_ca2d58de88f0b32e[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_ca2d58de88f0b32e = {
  0xca2d58de88f0b32e, b_ca2d58de88f0b32e.words, 81, d_ca2d58de88f0b32e, m_ca2d58de88f0b32e,
  2, 4, i_ca2d58de88f0b32e, nullptr, nullptr, { &s_ca2d58de88f0b32e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_9e582e7e054088ae = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    174, 136,  64,   5, 126,  46,  88, 158,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
    114, 111, 112, 112,  97, 116,  99, 104,
     36,  80,  97, 114,  97, 109, 115,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120, 109, 108,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9e582e7e054088ae = b_9e582e7e054088ae.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9e582e7e054088ae[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_9e582e7e054088ae[] = {2, 0, 1};
static const uint16_t i_9e582e7e054088ae[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9e582e7e054088ae = {
  0x9e582e7e054088ae, b_9e582e7e054088ae.words, 66, d_9e582e7e054088ae, m_9e582e7e054088ae,
  1, 3, i_9e582e7e054088ae, nullptr, nullptr, { &s_9e582e7e054088ae, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_f64da2416445f8b6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    182, 248,  69, 100,  65, 162,  77, 246,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 109,
    107,  99, 111, 108,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     62, 182, 106,  65, 172,  46, 216, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f64da2416445f8b6 = b_f64da2416445f8b6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f64da2416445f8b6[] = {
  &s_b7d82eac416ab63e,
  &s_f5cae52becabc767,
};
static const uint16_t m_f64da2416445f8b6[] = {1, 2, 0};
static const uint16_t i_f64da2416445f8b6[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f64da2416445f8b6 = {
  0xf64da2416445f8b6, b_f64da2416445f8b6.words, 65, d_f64da2416445f8b6, m_f64da2416445f8b6,
  2, 3, i_f64da2416445f8b6, nullptr, nullptr, { &s_f64da2416445f8b6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<97> b_8139673a82bfe07d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125, 224, 191, 130,  58, 103,  57, 129,
     39,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  99,
    111, 112, 121,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115, 116, 105, 110,  97, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  79, 118, 101, 114, 119, 114,
    105, 116, 101,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 108, 108, 111, 119,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8139673a82bfe07d = b_8139673a82bfe07d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8139673a82bfe07d[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_8139673a82bfe07d[] = {4, 1, 2, 0, 3};
static const uint16_t i_8139673a82bfe07d[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_8139673a82bfe07d = {
  0x8139673a82bfe07d, b_8139673a82bfe07d.words, 97, d_8139673a82bfe07d, m_8139673a82bfe07d,
  1, 5, i_8139673a82bfe07d, nullptr, nullptr, { &s_8139673a82bfe07d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<82> b_81f5066b5576a609 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      9, 166, 118,  85, 107,   6, 245, 129,
     39,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 109,
    111, 118, 101,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115, 116, 105, 110,  97, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  79, 118, 101, 114, 119, 114,
    105, 116, 101,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81f5066b5576a609 = b_81f5066b5576a609.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_81f5066b5576a609[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_81f5066b5576a609[] = {3, 1, 2, 0};
static const uint16_t i_81f5066b5576a609[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_81f5066b5576a609 = {
  0x81f5066b5576a609, b_81f5066b5576a609.words, 82, d_81f5066b5576a609, m_81f5066b5576a609,
  1, 4, i_81f5066b5576a609, nullptr, nullptr, { &s_81f5066b5576a609, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_9398280f1359570a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     10,  87,  89,  19,  15,  40, 152, 147,
     39,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 108,
    111,  99, 107,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120, 109, 108,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 108, 108, 111, 119,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9398280f1359570a = b_9398280f1359570a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9398280f1359570a[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_9398280f1359570a[] = {3, 0, 2, 1};
static const uint16_t i_9398280f1359570a[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_9398280f1359570a = {
  0x9398280f1359570a, b_9398280f1359570a.words, 81, d_9398280f1359570a, m_9398280f1359570a,
  1, 4, i_9398280f1359570a, nullptr, nullptr, { &s_9398280f1359570a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_d684c6a791b97dbc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    188, 125, 185, 145, 167, 198, 132, 214,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 117,
    110, 108, 111,  99, 107,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  99, 107,  84, 111, 107, 101,
    110,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d684c6a791b97dbc = b_d684c6a791b97dbc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d684c6a791b97dbc[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_d684c6a791b97dbc[] = {2, 1, 0};
static const uint16_t i_d684c6a791b97dbc[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d684c6a791b97dbc = {
  0xd684c6a791b97dbc, b_d684c6a791b97dbc.words, 66, d_d684c6a791b97dbc, m_d684c6a791b97dbc,
  1, 3, i_d684c6a791b97dbc, nullptr, nullptr, { &s_d684c6a791b97dbc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_9f79c33e20119e8d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    141, 158,  17,  32,  62, 195, 121, 159,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46,  97,
     99, 108,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120, 109, 108,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f79c33e20119e8d = b_9f79c33e20119e8d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9f79c33e20119e8d[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_9f79c33e20119e8d[] = {2, 0, 1};
static const uint16_t i_9f79c33e20119e8d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9f79c33e20119e8d = {
  0x9f79c33e20119e8d, b_9f79c33e20119e8d.words, 66, d_9f79c33e20119e8d, m_9f79c33e20119e8d,
  1, 3, i_9f79c33e20119e8d, nullptr, nullptr, { &s_9f79c33e20119e8d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_c0643ea68efc60ae = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    174,  96, 252, 142, 166,  62, 100, 192,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 114,
    101, 112, 111, 114, 116,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     62, 182, 106,  65, 172,  46, 216, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0643ea68efc60ae = b_c0643ea68efc60ae.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c0643ea68efc60ae[] = {
  &s_b7d82eac416ab63e,
  &s_f5cae52becabc767,
};
static const uint16_t m_c0643ea68efc60ae[] = {1, 2, 0};
static const uint16_t i_c0643ea68efc60ae[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c0643ea68efc60ae = {
  0xc0643ea68efc60ae, b_c0643ea68efc60ae.words, 65, d_c0643ea68efc60ae, m_c0643ea68efc60ae,
  2, 3, i_c0643ea68efc60ae, nullptr, nullptr, { &s_c0643ea68efc60ae, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_d2e47e8eac54ea7e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    126, 234,  84, 172, 142, 126, 228, 210,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 111,
    112, 116, 105, 111, 110, 115,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d2e47e8eac54ea7e = b_d2e47e8eac54ea7e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d2e47e8eac54ea7e[] = {
  &s_f5cae52becabc767,
};
static const uint16_t m_d2e47e8eac54ea7e[] = {1, 0};
static const uint16_t i_d2e47e8eac54ea7e[] = {0, 1};
const ::capnp::_::RawSchema s_d2e47e8eac54ea7e = {
  0xd2e47e8eac54ea7e, b_d2e47e8eac54ea7e.words, 50, d_d2e47e8eac54ea7e, m_d2e47e8eac54ea7e,
  1, 2, i_d2e47e8eac54ea7e, nullptr, nullptr, { &s_d2e47e8eac54ea7e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_adef95edc22ca880 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    128, 168,  44, 194, 237, 149, 239, 173,
     39,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 119, 101,  98,  45, 115, 101,
    115, 115, 105, 111, 110,  46,  99,  97,
    112, 110, 112,  58,  87, 101,  98,  83,
    101, 115, 115, 105, 111, 110,  46, 112,
     97, 116,  99, 104,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     62, 182, 106,  65, 172,  46, 216, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 120, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 199, 171, 236,  43, 229, 202, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adef95edc22ca880 = b_adef95edc22ca880.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_adef95edc22ca880[] = {
  &s_b7d82eac416ab63e,
  &s_f5cae52becabc767,
};
static const uint16_t m_adef95edc22ca880[] = {1, 2, 0};
static const uint16_t i_adef95edc22ca880[] = {0, 1, 2};
const ::capnp::_::RawSchema s_adef95edc22ca880 = {
  0xadef95edc22ca880, b_adef95edc22ca880.words, 65, d_adef95edc22ca880, m_adef95edc22ca880,
  2, 3, i_adef95edc22ca880, nullptr, nullptr, { &s_adef95edc22ca880, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sandstorm {

// HttpStatusDescriptor
constexpr uint16_t HttpStatusDescriptor::_capnpPrivate::dataWordSize;
constexpr uint16_t HttpStatusDescriptor::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HttpStatusDescriptor::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HttpStatusDescriptor::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* HttpStatusDescriptor::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::sandstorm::WebSession::GetParams,  ::sandstorm::WebSession::Response>
WebSession::Client::getRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::GetParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 0, sizeHint);
}
::kj::Promise<void> WebSession::Server::get(GetContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "get",
      0xa50711a14d35a8ceull, 0);
}
::capnp::Request< ::sandstorm::WebSession::PostParams,  ::sandstorm::WebSession::Response>
WebSession::Client::postRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::PostParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 1, sizeHint);
}
::kj::Promise<void> WebSession::Server::post(PostContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "post",
      0xa50711a14d35a8ceull, 1);
}
::capnp::Request< ::sandstorm::WebSession::OpenWebSocketParams,  ::sandstorm::WebSession::OpenWebSocketResults>
WebSession::Client::openWebSocketRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::OpenWebSocketParams,  ::sandstorm::WebSession::OpenWebSocketResults>(
      0xa50711a14d35a8ceull, 2, sizeHint);
}
::kj::Promise<void> WebSession::Server::openWebSocket(OpenWebSocketContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "openWebSocket",
      0xa50711a14d35a8ceull, 2);
}
::capnp::Request< ::sandstorm::WebSession::PutParams,  ::sandstorm::WebSession::Response>
WebSession::Client::putRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::PutParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 3, sizeHint);
}
::kj::Promise<void> WebSession::Server::put(PutContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "put",
      0xa50711a14d35a8ceull, 3);
}
::capnp::Request< ::sandstorm::WebSession::DeleteParams,  ::sandstorm::WebSession::Response>
WebSession::Client::deleteRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::DeleteParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 4, sizeHint);
}
::kj::Promise<void> WebSession::Server::delete_(DeleteContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "delete",
      0xa50711a14d35a8ceull, 4);
}
::capnp::Request< ::sandstorm::WebSession::PostStreamingParams,  ::sandstorm::WebSession::PostStreamingResults>
WebSession::Client::postStreamingRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::PostStreamingParams,  ::sandstorm::WebSession::PostStreamingResults>(
      0xa50711a14d35a8ceull, 5, sizeHint);
}
::kj::Promise<void> WebSession::Server::postStreaming(PostStreamingContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "postStreaming",
      0xa50711a14d35a8ceull, 5);
}
::capnp::Request< ::sandstorm::WebSession::PutStreamingParams,  ::sandstorm::WebSession::PutStreamingResults>
WebSession::Client::putStreamingRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::PutStreamingParams,  ::sandstorm::WebSession::PutStreamingResults>(
      0xa50711a14d35a8ceull, 6, sizeHint);
}
::kj::Promise<void> WebSession::Server::putStreaming(PutStreamingContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "putStreaming",
      0xa50711a14d35a8ceull, 6);
}
::capnp::Request< ::sandstorm::WebSession::PropfindParams,  ::sandstorm::WebSession::Response>
WebSession::Client::propfindRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::PropfindParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 7, sizeHint);
}
::kj::Promise<void> WebSession::Server::propfind(PropfindContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "propfind",
      0xa50711a14d35a8ceull, 7);
}
::capnp::Request< ::sandstorm::WebSession::ProppatchParams,  ::sandstorm::WebSession::Response>
WebSession::Client::proppatchRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::ProppatchParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 8, sizeHint);
}
::kj::Promise<void> WebSession::Server::proppatch(ProppatchContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "proppatch",
      0xa50711a14d35a8ceull, 8);
}
::capnp::Request< ::sandstorm::WebSession::MkcolParams,  ::sandstorm::WebSession::Response>
WebSession::Client::mkcolRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::MkcolParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 9, sizeHint);
}
::kj::Promise<void> WebSession::Server::mkcol(MkcolContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "mkcol",
      0xa50711a14d35a8ceull, 9);
}
::capnp::Request< ::sandstorm::WebSession::CopyParams,  ::sandstorm::WebSession::Response>
WebSession::Client::copyRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::CopyParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 10, sizeHint);
}
::kj::Promise<void> WebSession::Server::copy(CopyContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "copy",
      0xa50711a14d35a8ceull, 10);
}
::capnp::Request< ::sandstorm::WebSession::MoveParams,  ::sandstorm::WebSession::Response>
WebSession::Client::moveRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::MoveParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 11, sizeHint);
}
::kj::Promise<void> WebSession::Server::move(MoveContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "move",
      0xa50711a14d35a8ceull, 11);
}
::capnp::Request< ::sandstorm::WebSession::LockParams,  ::sandstorm::WebSession::Response>
WebSession::Client::lockRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::LockParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 12, sizeHint);
}
::kj::Promise<void> WebSession::Server::lock(LockContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "lock",
      0xa50711a14d35a8ceull, 12);
}
::capnp::Request< ::sandstorm::WebSession::UnlockParams,  ::sandstorm::WebSession::Response>
WebSession::Client::unlockRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::UnlockParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 13, sizeHint);
}
::kj::Promise<void> WebSession::Server::unlock(UnlockContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "unlock",
      0xa50711a14d35a8ceull, 13);
}
::capnp::Request< ::sandstorm::WebSession::AclParams,  ::sandstorm::WebSession::Response>
WebSession::Client::aclRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::AclParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 14, sizeHint);
}
::kj::Promise<void> WebSession::Server::acl(AclContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "acl",
      0xa50711a14d35a8ceull, 14);
}
::capnp::Request< ::sandstorm::WebSession::ReportParams,  ::sandstorm::WebSession::Response>
WebSession::Client::reportRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::ReportParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 15, sizeHint);
}
::kj::Promise<void> WebSession::Server::report(ReportContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "report",
      0xa50711a14d35a8ceull, 15);
}
::capnp::Request< ::sandstorm::WebSession::OptionsParams,  ::sandstorm::WebSession::Options>
WebSession::Client::optionsRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::OptionsParams,  ::sandstorm::WebSession::Options>(
      0xa50711a14d35a8ceull, 16, sizeHint);
}
::kj::Promise<void> WebSession::Server::options(OptionsContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "options",
      0xa50711a14d35a8ceull, 16);
}
::capnp::Request< ::sandstorm::WebSession::PatchParams,  ::sandstorm::WebSession::Response>
WebSession::Client::patchRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::PatchParams,  ::sandstorm::WebSession::Response>(
      0xa50711a14d35a8ceull, 17, sizeHint);
}
::kj::Promise<void> WebSession::Server::patch(PatchContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession", "patch",
      0xa50711a14d35a8ceull, 17);
}
::kj::Promise<void> WebSession::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xa50711a14d35a8ceull:
      return dispatchCallInternal(methodId, context);
    case 0xf63241ee58b5166full:
      return  ::sandstorm::UiSession::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/web-session.capnp:WebSession", interfaceId);
  }
}
::kj::Promise<void> WebSession::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return get(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::GetParams,  ::sandstorm::WebSession::Response>(context));
    case 1:
      return post(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::PostParams,  ::sandstorm::WebSession::Response>(context));
    case 2:
      return openWebSocket(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::OpenWebSocketParams,  ::sandstorm::WebSession::OpenWebSocketResults>(context));
    case 3:
      return put(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::PutParams,  ::sandstorm::WebSession::Response>(context));
    case 4:
      return delete_(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::DeleteParams,  ::sandstorm::WebSession::Response>(context));
    case 5:
      return postStreaming(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::PostStreamingParams,  ::sandstorm::WebSession::PostStreamingResults>(context));
    case 6:
      return putStreaming(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::PutStreamingParams,  ::sandstorm::WebSession::PutStreamingResults>(context));
    case 7:
      return propfind(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::PropfindParams,  ::sandstorm::WebSession::Response>(context));
    case 8:
      return proppatch(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::ProppatchParams,  ::sandstorm::WebSession::Response>(context));
    case 9:
      return mkcol(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::MkcolParams,  ::sandstorm::WebSession::Response>(context));
    case 10:
      return copy(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::CopyParams,  ::sandstorm::WebSession::Response>(context));
    case 11:
      return move(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::MoveParams,  ::sandstorm::WebSession::Response>(context));
    case 12:
      return lock(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::LockParams,  ::sandstorm::WebSession::Response>(context));
    case 13:
      return unlock(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::UnlockParams,  ::sandstorm::WebSession::Response>(context));
    case 14:
      return acl(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::AclParams,  ::sandstorm::WebSession::Response>(context));
    case 15:
      return report(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::ReportParams,  ::sandstorm::WebSession::Response>(context));
    case 16:
      return options(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::OptionsParams,  ::sandstorm::WebSession::Options>(context));
    case 17:
      return patch(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::PatchParams,  ::sandstorm::WebSession::Response>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/web-session.capnp:WebSession",
          0xa50711a14d35a8ceull, methodId);
  }
}
#endif  // !CAPNP_LITE

// WebSession
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Params
constexpr uint16_t WebSession::Params::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Params::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Params::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Params::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Context
constexpr uint16_t WebSession::Context::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Context::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Context::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Context::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Context::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Context::Header
constexpr uint16_t WebSession::Context::Header::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Context::Header::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Context::Header::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Context::Header::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Context::Header::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

const ::capnp::_::ConstList< ::capnp::Text> WebSession::Context::HEADER_WHITELIST(::capnp::schemas::b_baace870544663eb.words + 31);
// WebSession::Context::ETagPrecondition
constexpr uint16_t WebSession::Context::ETagPrecondition::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Context::ETagPrecondition::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Context::ETagPrecondition::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Context::ETagPrecondition::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Context::ETagPrecondition::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PostContent
constexpr uint16_t WebSession::PostContent::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PostContent::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PostContent::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PostContent::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PostContent::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PutContent
constexpr uint16_t WebSession::PutContent::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PutContent::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PutContent::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PutContent::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PutContent::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::ETag
constexpr uint16_t WebSession::ETag::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::ETag::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::ETag::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::ETag::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::ETag::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Cookie
constexpr uint16_t WebSession::Cookie::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Cookie::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Cookie::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Cookie::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Cookie::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Cookie::Expires
constexpr uint16_t WebSession::Cookie::Expires::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Cookie::Expires::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Cookie::Expires::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Cookie::Expires::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Cookie::Expires::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::AcceptedType
constexpr uint16_t WebSession::AcceptedType::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::AcceptedType::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::AcceptedType::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::AcceptedType::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::AcceptedType::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response
constexpr uint16_t WebSession::Response::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response::Header
constexpr uint16_t WebSession::Response::Header::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::Header::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::Header::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::Header::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::Header::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

const ::capnp::_::ConstList< ::capnp::Text> WebSession::Response::HEADER_WHITELIST(::capnp::schemas::b_ef174541b62cac82.words + 31);
// WebSession::Response::Redirect
constexpr uint16_t WebSession::Response::Redirect::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::Redirect::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::Redirect::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::Redirect::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::Redirect::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response::Content
constexpr uint16_t WebSession::Response::Content::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::Content::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::Content::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::Content::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::Content::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response::Content::Body
constexpr uint16_t WebSession::Response::Content::Body::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::Content::Body::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::Content::Body::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::Content::Body::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::Content::Body::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response::Content::Disposition
constexpr uint16_t WebSession::Response::Content::Disposition::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::Content::Disposition::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::Content::Disposition::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::Content::Disposition::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::Content::Disposition::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response::ClientError
constexpr uint16_t WebSession::Response::ClientError::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::ClientError::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::ClientError::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::ClientError::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::ClientError::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response::ServerError
constexpr uint16_t WebSession::Response::ServerError::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::ServerError::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::ServerError::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::ServerError::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::ServerError::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response::NoContent
constexpr uint16_t WebSession::Response::NoContent::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::NoContent::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::NoContent::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::NoContent::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::NoContent::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Response::PreconditionFailed
constexpr uint16_t WebSession::Response::PreconditionFailed::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Response::PreconditionFailed::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Response::PreconditionFailed::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Response::PreconditionFailed::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Response::PreconditionFailed::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::sandstorm::WebSession::RequestStream::GetResponseParams,  ::sandstorm::WebSession::Response>
WebSession::RequestStream::Client::getResponseRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::RequestStream::GetResponseParams,  ::sandstorm::WebSession::Response>(
      0x99ffc2f3f69a6a9full, 0, sizeHint);
}
::kj::Promise<void> WebSession::RequestStream::Server::getResponse(GetResponseContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession.RequestStream", "getResponse",
      0x99ffc2f3f69a6a9full, 0);
}
::kj::Promise<void> WebSession::RequestStream::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0x99ffc2f3f69a6a9full:
      return dispatchCallInternal(methodId, context);
    case 0xcd57387729cfe35full:
      return  ::sandstorm::ByteStream::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/web-session.capnp:WebSession.RequestStream", interfaceId);
  }
}
::kj::Promise<void> WebSession::RequestStream::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return getResponse(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::RequestStream::GetResponseParams,  ::sandstorm::WebSession::Response>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/web-session.capnp:WebSession.RequestStream",
          0x99ffc2f3f69a6a9full, methodId);
  }
}
#endif  // !CAPNP_LITE

// WebSession::RequestStream
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::RequestStream::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::RequestStream::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::RequestStream::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::RequestStream::GetResponseParams
constexpr uint16_t WebSession::RequestStream::GetResponseParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::RequestStream::GetResponseParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::RequestStream::GetResponseParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::RequestStream::GetResponseParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::RequestStream::GetResponseParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::sandstorm::WebSession::WebSocketStream::SendBytesParams,  ::sandstorm::WebSession::WebSocketStream::SendBytesResults>
WebSession::WebSocketStream::Client::sendBytesRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::sandstorm::WebSession::WebSocketStream::SendBytesParams,  ::sandstorm::WebSession::WebSocketStream::SendBytesResults>(
      0xf001fc1d5e574a07ull, 0, sizeHint);
}
::kj::Promise<void> WebSession::WebSocketStream::Server::sendBytes(SendBytesContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "sandstorm/web-session.capnp:WebSession.WebSocketStream", "sendBytes",
      0xf001fc1d5e574a07ull, 0);
}
::kj::Promise<void> WebSession::WebSocketStream::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xf001fc1d5e574a07ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/web-session.capnp:WebSession.WebSocketStream", interfaceId);
  }
}
::kj::Promise<void> WebSession::WebSocketStream::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return sendBytes(::capnp::Capability::Server::internalGetTypedContext<
           ::sandstorm::WebSession::WebSocketStream::SendBytesParams,  ::sandstorm::WebSession::WebSocketStream::SendBytesResults>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/web-session.capnp:WebSession.WebSocketStream",
          0xf001fc1d5e574a07ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// WebSession::WebSocketStream
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::WebSocketStream::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::WebSocketStream::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::WebSocketStream::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::WebSocketStream::SendBytesParams
constexpr uint16_t WebSession::WebSocketStream::SendBytesParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::WebSocketStream::SendBytesParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::WebSocketStream::SendBytesParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::WebSocketStream::SendBytesParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::WebSocketStream::SendBytesParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::WebSocketStream::SendBytesResults
constexpr uint16_t WebSession::WebSocketStream::SendBytesResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::WebSocketStream::SendBytesResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::WebSocketStream::SendBytesResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::WebSocketStream::SendBytesResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::WebSocketStream::SendBytesResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::CachePolicy
constexpr uint16_t WebSession::CachePolicy::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::CachePolicy::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::CachePolicy::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::CachePolicy::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::CachePolicy::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::Options
constexpr uint16_t WebSession::Options::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::Options::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::Options::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::Options::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::Options::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::GetParams
constexpr uint16_t WebSession::GetParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::GetParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::GetParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::GetParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::GetParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PostParams
constexpr uint16_t WebSession::PostParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PostParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PostParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PostParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PostParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::OpenWebSocketParams
constexpr uint16_t WebSession::OpenWebSocketParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::OpenWebSocketParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::OpenWebSocketParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::OpenWebSocketParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::OpenWebSocketParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::OpenWebSocketResults
constexpr uint16_t WebSession::OpenWebSocketResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::OpenWebSocketResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::OpenWebSocketResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::OpenWebSocketResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::OpenWebSocketResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PutParams
constexpr uint16_t WebSession::PutParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PutParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PutParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PutParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PutParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::DeleteParams
constexpr uint16_t WebSession::DeleteParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::DeleteParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::DeleteParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::DeleteParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::DeleteParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PostStreamingParams
constexpr uint16_t WebSession::PostStreamingParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PostStreamingParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PostStreamingParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PostStreamingParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PostStreamingParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PostStreamingResults
constexpr uint16_t WebSession::PostStreamingResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PostStreamingResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PostStreamingResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PostStreamingResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PostStreamingResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PutStreamingParams
constexpr uint16_t WebSession::PutStreamingParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PutStreamingParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PutStreamingParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PutStreamingParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PutStreamingParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PutStreamingResults
constexpr uint16_t WebSession::PutStreamingResults::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PutStreamingResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PutStreamingResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PutStreamingResults::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PutStreamingResults::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PropfindParams
constexpr uint16_t WebSession::PropfindParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PropfindParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PropfindParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PropfindParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PropfindParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::ProppatchParams
constexpr uint16_t WebSession::ProppatchParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::ProppatchParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::ProppatchParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::ProppatchParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::ProppatchParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::MkcolParams
constexpr uint16_t WebSession::MkcolParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::MkcolParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::MkcolParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::MkcolParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::MkcolParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::CopyParams
constexpr uint16_t WebSession::CopyParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::CopyParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::CopyParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::CopyParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::CopyParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::MoveParams
constexpr uint16_t WebSession::MoveParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::MoveParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::MoveParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::MoveParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::MoveParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::LockParams
constexpr uint16_t WebSession::LockParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::LockParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::LockParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::LockParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::LockParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::UnlockParams
constexpr uint16_t WebSession::UnlockParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::UnlockParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::UnlockParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::UnlockParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::UnlockParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::AclParams
constexpr uint16_t WebSession::AclParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::AclParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::AclParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::AclParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::AclParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::ReportParams
constexpr uint16_t WebSession::ReportParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::ReportParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::ReportParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::ReportParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::ReportParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::OptionsParams
constexpr uint16_t WebSession::OptionsParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::OptionsParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::OptionsParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::OptionsParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::OptionsParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// WebSession::PatchParams
constexpr uint16_t WebSession::PatchParams::_capnpPrivate::dataWordSize;
constexpr uint16_t WebSession::PatchParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind WebSession::PatchParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* WebSession::PatchParams::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* WebSession::PatchParams::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

