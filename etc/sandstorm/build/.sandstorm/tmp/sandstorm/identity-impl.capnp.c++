// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: identity-impl.capnp

#include "identity-impl.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<26> b_aaecb6e5c137fd7a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    122, 253,  55, 193, 229, 182, 236, 170,
     30,   0,   0,   0,   3,   0,   0,   0,
     63, 109,  55,   7,  68,  14, 241, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
     41,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 105, 100, 101, 110, 116, 105,
    116, 121,  45, 105, 109, 112, 108,  46,
     99,  97, 112, 110, 112,  58,  80, 101,
    114, 115, 105, 115, 116, 101, 110, 116,
     73, 100, 101, 110, 116, 105, 116, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   3,   0,   5,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
     24, 221,  81, 169, 122, 152, 132, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
    180, 213, 190, 124, 215, 237, 140, 195,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aaecb6e5c137fd7a = b_aaecb6e5c137fd7a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_aaecb6e5c137fd7a[] = {
  &s_c084987aa951dd18,
  &s_c38cedd77cbed5b4,
};
const ::capnp::_::RawSchema s_aaecb6e5c137fd7a = {
  0xaaecb6e5c137fd7a, b_aaecb6e5c137fd7a.words, 26, d_aaecb6e5c137fd7a, nullptr,
  2, 0, nullptr, nullptr, nullptr, { &s_aaecb6e5c137fd7a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sandstorm {

#if !CAPNP_LITE
::kj::Promise<void> PersistentIdentity::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xaaecb6e5c137fd7aull:
      return dispatchCallInternal(methodId, context);
    case 0xc084987aa951dd18ull:
      return  ::sandstorm::Identity::Server::dispatchCallInternal(methodId, context);
    case 0xc38cedd77cbed5b4ull:
      return  ::sandstorm::SystemPersistent::Server::dispatchCallInternal(methodId, context);
    case 0xc8cb212fcd9f5691ull:
      return  ::capnp::Persistent< ::capnp::Data,  ::sandstorm::ApiTokenOwner>::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/identity-impl.capnp:PersistentIdentity", interfaceId);
  }
}
::kj::Promise<void> PersistentIdentity::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/identity-impl.capnp:PersistentIdentity",
          0xaaecb6e5c137fd7aull, methodId);
  }
}
#endif  // !CAPNP_LITE

// PersistentIdentity
#if !CAPNP_LITE
constexpr ::capnp::Kind PersistentIdentity::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PersistentIdentity::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PersistentIdentity::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

