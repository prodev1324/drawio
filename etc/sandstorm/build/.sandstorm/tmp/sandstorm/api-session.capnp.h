// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: api-session.capnp

#ifndef CAPNP_INCLUDED_eb014c0c3413cbfb_
#define CAPNP_INCLUDED_eb014c0c3413cbfb_

#include <capnp/generated-header-support.h>
#if !CAPNP_LITE
#include <capnp/capability.h>
#endif  // !CAPNP_LITE

#if CAPNP_VERSION != 6000
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include "ip.capnp.h"
#include "web-session.capnp.h"

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(c879e379c625cdc7);
CAPNP_DECLARE_SCHEMA(fee82d8d4c4ff597);
CAPNP_DECLARE_SCHEMA(93e1f7ca567dee32);
CAPNP_DECLARE_SCHEMA(bb95f31093b1fd88);

}  // namespace schemas
}  // namespace capnp

namespace sandstorm {

struct ApiSession {
  ApiSession() = delete;

#if !CAPNP_LITE
  class Client;
  class Server;
#endif  // !CAPNP_LITE

  struct Params;
  struct PowerboxTag;

  #if !CAPNP_LITE
  struct _capnpPrivate {
    CAPNP_DECLARE_INTERFACE_HEADER(c879e379c625cdc7)
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
  };
  #endif  // !CAPNP_LITE
};

struct ApiSession::Params {
  Params() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(fee82d8d4c4ff597, 0, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

struct ApiSession::PowerboxTag {
  PowerboxTag() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  struct OAuthScope;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(93e1f7ca567dee32, 0, 3)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

struct ApiSession::PowerboxTag::OAuthScope {
  OAuthScope() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(bb95f31093b1fd88, 0, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

#if !CAPNP_LITE
class ApiSession::Client
    : public virtual ::capnp::Capability::Client,
      public virtual  ::sandstorm::WebSession::Client {
public:
  typedef ApiSession Calls;
  typedef ApiSession Reads;

  Client(decltype(nullptr));
  explicit Client(::kj::Own< ::capnp::ClientHook>&& hook);
  template <typename _t, typename = ::kj::EnableIf< ::kj::canConvert<_t*, Server*>()>>
  Client(::kj::Own<_t>&& server);
  template <typename _t, typename = ::kj::EnableIf< ::kj::canConvert<_t*, Client*>()>>
  Client(::kj::Promise<_t>&& promise);
  Client(::kj::Exception&& exception);
  Client(Client&) = default;
  Client(Client&&) = default;
  Client& operator=(Client& other);
  Client& operator=(Client&& other);


protected:
  Client() = default;
};

class ApiSession::Server
    : public virtual ::capnp::Capability::Server,
      public virtual  ::sandstorm::WebSession::Server {
public:
  typedef ApiSession Serves;

  ::kj::Promise<void> dispatchCall(uint64_t interfaceId, uint16_t methodId,
      ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context)
      override;

protected:

  inline  ::sandstorm::ApiSession::Client thisCap() {
    return ::capnp::Capability::Server::thisCap()
        .template castAs< ::sandstorm::ApiSession>();
  }

  ::kj::Promise<void> dispatchCallInternal(uint16_t methodId,
      ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context);
};
#endif  // !CAPNP_LITE

class ApiSession::Params::Reader {
public:
  typedef Params Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline bool hasRemoteAddress() const;
  inline  ::sandstorm::IpAddress::Reader getRemoteAddress() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ApiSession::Params::Builder {
public:
  typedef Params Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasRemoteAddress();
  inline  ::sandstorm::IpAddress::Builder getRemoteAddress();
  inline void setRemoteAddress( ::sandstorm::IpAddress::Reader value);
  inline  ::sandstorm::IpAddress::Builder initRemoteAddress();
  inline void adoptRemoteAddress(::capnp::Orphan< ::sandstorm::IpAddress>&& value);
  inline ::capnp::Orphan< ::sandstorm::IpAddress> disownRemoteAddress();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ApiSession::Params::Pipeline {
public:
  typedef Params Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::sandstorm::IpAddress::Pipeline getRemoteAddress();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ApiSession::PowerboxTag::Reader {
public:
  typedef PowerboxTag Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline bool hasCanonicalUrl() const;
  inline  ::capnp::Text::Reader getCanonicalUrl() const;

  inline bool hasOauthScopes() const;
  inline  ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>::Reader getOauthScopes() const;

  inline bool hasAuthentication() const;
  inline  ::capnp::Text::Reader getAuthentication() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ApiSession::PowerboxTag::Builder {
public:
  typedef PowerboxTag Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasCanonicalUrl();
  inline  ::capnp::Text::Builder getCanonicalUrl();
  inline void setCanonicalUrl( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initCanonicalUrl(unsigned int size);
  inline void adoptCanonicalUrl(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownCanonicalUrl();

  inline bool hasOauthScopes();
  inline  ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>::Builder getOauthScopes();
  inline void setOauthScopes( ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>::Reader value);
  inline  ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>::Builder initOauthScopes(unsigned int size);
  inline void adoptOauthScopes(::capnp::Orphan< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>> disownOauthScopes();

  inline bool hasAuthentication();
  inline  ::capnp::Text::Builder getAuthentication();
  inline void setAuthentication( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initAuthentication(unsigned int size);
  inline void adoptAuthentication(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownAuthentication();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ApiSession::PowerboxTag::Pipeline {
public:
  typedef PowerboxTag Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ApiSession::PowerboxTag::OAuthScope::Reader {
public:
  typedef OAuthScope Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline bool hasName() const;
  inline  ::capnp::Text::Reader getName() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ApiSession::PowerboxTag::OAuthScope::Builder {
public:
  typedef OAuthScope Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasName();
  inline  ::capnp::Text::Builder getName();
  inline void setName( ::capnp::Text::Reader value);
  inline  ::capnp::Text::Builder initName(unsigned int size);
  inline void adoptName(::capnp::Orphan< ::capnp::Text>&& value);
  inline ::capnp::Orphan< ::capnp::Text> disownName();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ApiSession::PowerboxTag::OAuthScope::Pipeline {
public:
  typedef OAuthScope Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

#if !CAPNP_LITE
inline ApiSession::Client::Client(decltype(nullptr))
    : ::capnp::Capability::Client(nullptr) {}
inline ApiSession::Client::Client(
    ::kj::Own< ::capnp::ClientHook>&& hook)
    : ::capnp::Capability::Client(::kj::mv(hook)) {}
template <typename _t, typename>
inline ApiSession::Client::Client(::kj::Own<_t>&& server)
    : ::capnp::Capability::Client(::kj::mv(server)) {}
template <typename _t, typename>
inline ApiSession::Client::Client(::kj::Promise<_t>&& promise)
    : ::capnp::Capability::Client(::kj::mv(promise)) {}
inline ApiSession::Client::Client(::kj::Exception&& exception)
    : ::capnp::Capability::Client(::kj::mv(exception)) {}
inline  ::sandstorm::ApiSession::Client& ApiSession::Client::operator=(Client& other) {
  ::capnp::Capability::Client::operator=(other);
  return *this;
}
inline  ::sandstorm::ApiSession::Client& ApiSession::Client::operator=(Client&& other) {
  ::capnp::Capability::Client::operator=(kj::mv(other));
  return *this;
}

#endif  // !CAPNP_LITE
inline bool ApiSession::Params::Reader::hasRemoteAddress() const {
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool ApiSession::Params::Builder::hasRemoteAddress() {
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::sandstorm::IpAddress::Reader ApiSession::Params::Reader::getRemoteAddress() const {
  return ::capnp::_::PointerHelpers< ::sandstorm::IpAddress>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::sandstorm::IpAddress::Builder ApiSession::Params::Builder::getRemoteAddress() {
  return ::capnp::_::PointerHelpers< ::sandstorm::IpAddress>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::sandstorm::IpAddress::Pipeline ApiSession::Params::Pipeline::getRemoteAddress() {
  return  ::sandstorm::IpAddress::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void ApiSession::Params::Builder::setRemoteAddress( ::sandstorm::IpAddress::Reader value) {
  ::capnp::_::PointerHelpers< ::sandstorm::IpAddress>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::sandstorm::IpAddress::Builder ApiSession::Params::Builder::initRemoteAddress() {
  return ::capnp::_::PointerHelpers< ::sandstorm::IpAddress>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void ApiSession::Params::Builder::adoptRemoteAddress(
    ::capnp::Orphan< ::sandstorm::IpAddress>&& value) {
  ::capnp::_::PointerHelpers< ::sandstorm::IpAddress>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::sandstorm::IpAddress> ApiSession::Params::Builder::disownRemoteAddress() {
  return ::capnp::_::PointerHelpers< ::sandstorm::IpAddress>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool ApiSession::PowerboxTag::Reader::hasCanonicalUrl() const {
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool ApiSession::PowerboxTag::Builder::hasCanonicalUrl() {
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader ApiSession::PowerboxTag::Reader::getCanonicalUrl() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder ApiSession::PowerboxTag::Builder::getCanonicalUrl() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void ApiSession::PowerboxTag::Builder::setCanonicalUrl( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder ApiSession::PowerboxTag::Builder::initCanonicalUrl(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS), size);
}
inline void ApiSession::PowerboxTag::Builder::adoptCanonicalUrl(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> ApiSession::PowerboxTag::Builder::disownCanonicalUrl() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool ApiSession::PowerboxTag::Reader::hasOauthScopes() const {
  return !_reader.getPointerField(1 * ::capnp::POINTERS).isNull();
}
inline bool ApiSession::PowerboxTag::Builder::hasOauthScopes() {
  return !_builder.getPointerField(1 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>::Reader ApiSession::PowerboxTag::Reader::getOauthScopes() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>>::get(
      _reader.getPointerField(1 * ::capnp::POINTERS));
}
inline  ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>::Builder ApiSession::PowerboxTag::Builder::getOauthScopes() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>>::get(
      _builder.getPointerField(1 * ::capnp::POINTERS));
}
inline void ApiSession::PowerboxTag::Builder::setOauthScopes( ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>>::set(
      _builder.getPointerField(1 * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>::Builder ApiSession::PowerboxTag::Builder::initOauthScopes(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>>::init(
      _builder.getPointerField(1 * ::capnp::POINTERS), size);
}
inline void ApiSession::PowerboxTag::Builder::adoptOauthScopes(
    ::capnp::Orphan< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>>::adopt(
      _builder.getPointerField(1 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>> ApiSession::PowerboxTag::Builder::disownOauthScopes() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::sandstorm::ApiSession::PowerboxTag::OAuthScope>>::disown(
      _builder.getPointerField(1 * ::capnp::POINTERS));
}

inline bool ApiSession::PowerboxTag::Reader::hasAuthentication() const {
  return !_reader.getPointerField(2 * ::capnp::POINTERS).isNull();
}
inline bool ApiSession::PowerboxTag::Builder::hasAuthentication() {
  return !_builder.getPointerField(2 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader ApiSession::PowerboxTag::Reader::getAuthentication() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(
      _reader.getPointerField(2 * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder ApiSession::PowerboxTag::Builder::getAuthentication() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(
      _builder.getPointerField(2 * ::capnp::POINTERS));
}
inline void ApiSession::PowerboxTag::Builder::setAuthentication( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(
      _builder.getPointerField(2 * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder ApiSession::PowerboxTag::Builder::initAuthentication(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(
      _builder.getPointerField(2 * ::capnp::POINTERS), size);
}
inline void ApiSession::PowerboxTag::Builder::adoptAuthentication(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(
      _builder.getPointerField(2 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> ApiSession::PowerboxTag::Builder::disownAuthentication() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(
      _builder.getPointerField(2 * ::capnp::POINTERS));
}

inline bool ApiSession::PowerboxTag::OAuthScope::Reader::hasName() const {
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool ApiSession::PowerboxTag::OAuthScope::Builder::hasName() {
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::Text::Reader ApiSession::PowerboxTag::OAuthScope::Reader::getName() const {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::capnp::Text::Builder ApiSession::PowerboxTag::OAuthScope::Builder::getName() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void ApiSession::PowerboxTag::OAuthScope::Builder::setName( ::capnp::Text::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::capnp::Text::Builder ApiSession::PowerboxTag::OAuthScope::Builder::initName(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS), size);
}
inline void ApiSession::PowerboxTag::OAuthScope::Builder::adoptName(
    ::capnp::Orphan< ::capnp::Text>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::Text>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::Text> ApiSession::PowerboxTag::OAuthScope::Builder::disownName() {
  return ::capnp::_::PointerHelpers< ::capnp::Text>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

}  // namespace

#endif  // CAPNP_INCLUDED_eb014c0c3413cbfb_
