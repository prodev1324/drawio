// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: email-impl.capnp

#include "email-impl.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<26> b_d76bb6182f0aece3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    227, 236,  10,  47,  24, 182, 107, 215,
     27,   0,   0,   0,   3,   0,   0,   0,
    128, 165,   3, 210,  34, 144, 130, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
     41,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 101, 109,  97, 105, 108,  45,
    105, 109, 112, 108,  46,  99,  97, 112,
    110, 112,  58,  80, 101, 114, 115, 105,
    115, 116, 101, 110, 116,  69, 109,  97,
    105, 108,  86, 101, 114, 105, 102, 105,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   3,   0,   5,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    255, 169,  27, 157, 202, 247,  88, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
    180, 213, 190, 124, 215, 237, 140, 195,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d76bb6182f0aece3 = b_d76bb6182f0aece3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d76bb6182f0aece3[] = {
  &s_c38cedd77cbed5b4,
  &s_d458f7ca9d1ba9ff,
};
const ::capnp::_::RawSchema s_d76bb6182f0aece3 = {
  0xd76bb6182f0aece3, b_d76bb6182f0aece3.words, 26, d_d76bb6182f0aece3, nullptr,
  2, 0, nullptr, nullptr, nullptr, { &s_d76bb6182f0aece3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_e536db3eed324f9b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155,  79,  50, 237,  62, 219,  54, 229,
     27,   0,   0,   0,   3,   0,   0,   0,
    128, 165,   3, 210,  34, 144, 130, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
     41,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 110, 100, 115, 116, 111, 114,
    109,  47, 101, 109,  97, 105, 108,  45,
    105, 109, 112, 108,  46,  99,  97, 112,
    110, 112,  58,  80, 101, 114, 115, 105,
    115, 116, 101, 110, 116,  86, 101, 114,
    105, 102, 105, 101, 100,  69, 109,  97,
    105, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   3,   0,   5,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
     90, 250,  77,  70,   2, 241, 139, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
    180, 213, 190, 124, 215, 237, 140, 195,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e536db3eed324f9b = b_e536db3eed324f9b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e536db3eed324f9b[] = {
  &s_c38cedd77cbed5b4,
  &s_f88bf102464dfa5a,
};
const ::capnp::_::RawSchema s_e536db3eed324f9b = {
  0xe536db3eed324f9b, b_e536db3eed324f9b.words, 26, d_e536db3eed324f9b, nullptr,
  2, 0, nullptr, nullptr, nullptr, { &s_e536db3eed324f9b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace sandstorm {

#if !CAPNP_LITE
::kj::Promise<void> PersistentEmailVerifier::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xd76bb6182f0aece3ull:
      return dispatchCallInternal(methodId, context);
    case 0xc38cedd77cbed5b4ull:
      return  ::sandstorm::SystemPersistent::Server::dispatchCallInternal(methodId, context);
    case 0xc8cb212fcd9f5691ull:
      return  ::capnp::Persistent< ::capnp::Data,  ::sandstorm::ApiTokenOwner>::Server::dispatchCallInternal(methodId, context);
    case 0xd458f7ca9d1ba9ffull:
      return  ::sandstorm::EmailVerifier::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/email-impl.capnp:PersistentEmailVerifier", interfaceId);
  }
}
::kj::Promise<void> PersistentEmailVerifier::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/email-impl.capnp:PersistentEmailVerifier",
          0xd76bb6182f0aece3ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// PersistentEmailVerifier
#if !CAPNP_LITE
constexpr ::capnp::Kind PersistentEmailVerifier::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PersistentEmailVerifier::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PersistentEmailVerifier::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::kj::Promise<void> PersistentVerifiedEmail::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xe536db3eed324f9bull:
      return dispatchCallInternal(methodId, context);
    case 0xc38cedd77cbed5b4ull:
      return  ::sandstorm::SystemPersistent::Server::dispatchCallInternal(methodId, context);
    case 0xc8cb212fcd9f5691ull:
      return  ::capnp::Persistent< ::capnp::Data,  ::sandstorm::ApiTokenOwner>::Server::dispatchCallInternal(methodId, context);
    case 0xf88bf102464dfa5aull:
      return  ::sandstorm::VerifiedEmail::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("sandstorm/email-impl.capnp:PersistentVerifiedEmail", interfaceId);
  }
}
::kj::Promise<void> PersistentVerifiedEmail::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "sandstorm/email-impl.capnp:PersistentVerifiedEmail",
          0xe536db3eed324f9bull, methodId);
  }
}
#endif  // !CAPNP_LITE

// PersistentVerifiedEmail
#if !CAPNP_LITE
constexpr ::capnp::Kind PersistentVerifiedEmail::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PersistentVerifiedEmail::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* PersistentVerifiedEmail::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

